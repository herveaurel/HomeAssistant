decluttering_templates:
  header:
    card:
      type: horizontal-stack
      cards:
        - type: custom:button-card
          template:
            - badge_card
            - no_style
          label: '[[name]]'
          icon: '[[icon]]'
          styles:
            label:
              - font-size: 14.5px
              - font-weight: 600
              - color: var(--title)
            icon:
              - width: 20px
              - color: var(--title)
              - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
            img_cell:
              - background-color: none
            card:
              - margin: 0px 10px 0px 5px
        - type: custom:button-card
          template:
            - badge_auto_card
            - no_style
          show_label: false
          icon: mdi:close
          styles:
            icon:
              - width: 12px
              - color: var(--ocean-blue)
            card:
              - margin-top: 0px
              - opacity: 100%
          tap_action:
            action: navigate
            navigation_path: /
  next_timer:
    card:
      type: conditional
      conditions:
        - entity: '[[entity]]'
          state_not: unavailable
        - entity: '[[entity]]'
          state_not: unknown
      card:
        type: custom:button-card
        entity: '[[sensor]]'
        name: '[[name]]'
        icon: mdi:timer-sand
        show_state: true
        show_label: false
        show_last_update: false
        template:
          - ball_card
        state:
          - value: '00:00:30'
            operator: <
            styles:
              card:
                - background-color: var(--card-red)
              icon:
                - color: var(--icon-red)
              img_cell:
                - background-color: var(--img-cell-red)
          - value: '00:00:00'
            operator: '>'
            styles:
              card:
                - background-color: var(--card-blue)
              icon:
                - color: var(--icon-blue)
              img_cell:
                - background-color: var(--img-cell-blue)
  pronote_header:
    card:
      type: custom:button-card
      template:
        - police
      show_name: true
      show_label: true
      show_state: false
      show_icon: false
      show_entity_picture: true
      entity: '[[entity]]'
      name: |
        [[[ return "[[name]] - "+[[attributes_class_name]] ]]]
      label: |
        [[[ return "Aujourd'hui : " + [[cours_aujourdhui]] ]]]
      custom_fields:
        info: |
          [[[ return "Demain : " +[[cours_demain]]  ]]]
        icon:
          card:
            type: custom:button-card
            template:
              - no_style
            show_icon: true
            show_name: false
            entity: '[[entity]]'
            icon: |
              [[[
                if ([[cours_aujourdhui]] != "Pas cours")
                  return "mdi:school-outline"; 
                return "mdi:home-outline";
              ]]]             
            styles:
              icon:
                - width: 70px
                - opacity: 0.2
                - filter: blur(2px)
                - color: |
                    [[[
                      if ([[cours_aujourdhui]] != "Pas cours")
                        return "var(--ocean-blue)"; 
                      return "var(--red)";
                    ]]]                 
      styles:
        grid:
          - grid-template-areas: '"i gutter n" "i gutter l" "i gutter info"'
          - grid-template-columns: min-content 18px 1fr
          - grid-template-rows: min-content 20px
        card:
          - background: none
          - box-shadow: none
          - padding: 10px 15px 5px 15px
          - '--mdc-ripple-press-opacity': 0
        img_cell:
          - height: 70px
          - width: 70px
          - border-radius: 16px
          - margin-left: 25px
        icon:
          - height: 100%
          - width: 100%
        name:
          - font-size: 14px
          - font-weight: 500
          - color: var(--title)
          - text-align: left
          - align-self: end
          - justify-self: start
        label:
          - font-size: 14px
          - font-weight: 500
          - color: var(--text-on)
          - text-align: left
          - align-self: start
          - justify-self: start
        custom_fields:
          icon:
            - position: absolute
            - left: 70%
            - top: 5px
          info:
            - font-size: 12px
            - font-weight: 500
            - color: var(--text-on)
            - text-align: left
            - align-self: start
            - justify-self: start
            - opacity: 80%
  pronote:
    card:
      type: entities
      card_mod:
        style: |
          ha-card { 
           background-color: var(--card-background-color);
           } 
      entities:
        - type: custom:vertical-stack-in-card
          card_mod:
            style: |
              ha-card { 
                background-color: var(--card-background-color);
                box-shadow: none;
              }   
          cards:
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 

                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[timetable_period]]'
                      state_not: '0'
                  card:
                    type: custom:pronote-timetable-card
                    card_mod:
                      style: |
                        ha-card { 
                         color: var(--text-on);
                         font-family: var(--primary-font-family);          
                         display: inline-block;
                         height: 450px;
                         overflow-y: scroll;
                         width: 100%;
                        }
                        div {
                          color: var(--title);
                          font-family: var(--primary-font-family);                         
                        }  
                        span.lesson-status {
                          background-color: var(--ocean-blue) !important;
                        }                          
                        .lesson-canceled span.lesson-status {
                          background-color: var(--red) !important;
                        } 
                        ::-webkit-scrollbar {
                           display: none;
                         }                        
                    entity: '[[timetable_period]]'
                    display_lunch_break: true
                    display_classroom: true
                    display_teacher: false
                    display_day_hours: true
                    dim_ended_lessons: true
                    max_days: 15
                    current_week_only: false
                    display_header: true
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 

                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[grades]]'
                      state_not: '0'
                  card:
                    type: custom:pronote-grades-card
                    card_mod:
                      style: |
                        ha-card { 
                         color: var(--text-on);
                         font-family: var(--primary-font-family);          
                         display: inline-block;
                         height: 400px;
                         overflow-y: scroll;
                         width: 100%;
                        }  
                        div {
                          color: var(--title);
                          font-family: var(--primary-font-family); 
                        }  
                        .above-average .grade-color > span {
                          background-color: var(--ocean-blue) !important;
                          width: 10px !important;
                          height: 10px !important; 
                          border-radius: 30px !important;
                        } 
                        .above-ratio .grade-color > span {
                          background-color: var(--ocean-blue) !important;
                          width: 10px !important;
                          height: 10px !important;                           
                          border-radius: 30px !important;
                        }  
                        .below-average .grade-color > span {
                          background-color: var(--orange) !important;
                          width: 10px !important;
                          height: 10px !important;  
                          border-radius: 30px !important;
                        } 
                        .below-ratio .grade-color > span {
                          background-color: var(--orange) !important;
                          width: 10px !important;
                          height: 10px !important; 
                          border-radius: 30px !important;
                        }                        
                    entity: '[[grades]]'
                    grade_format: full
                    display_header: true
                    display_date: true
                    display_comment: true
                    display_class_average: true
                    compare_with_class_average: true
                    compare_with_ratio: 0.6
                    display_coefficient: true
                    display_class_min: true
                    display_class_max: true
                    display_new_grade_notice: true
                    max_grades: null
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 

                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[evaluations]]'
                      state_not: '0'
                  card:
                    type: markdown
                    content: >-
                      <div>Evaluations de [[name]]</div> {% set items =
                      [[evaluations_attributes]]%} <table>
                        <tbody>
                        
                        {% for i in range(0, items | count, 1) %}
                        
                        <tr><td width='100%'><b>
                        
                         {{ items[i].subject 
                           | replace ('ARTS PLASTIQUES', 'ARTS. PLAST.') 
                           | replace ('ANGLAIS LV1', 'ANGLAIS')
                           | replace ('ANGLAIS LV1 > ANGLAIS LV1' ,'ANGLAIS') 
                           | replace ('ENSEIGN.SCIENTIFIQUE > ENSEIGN.SCIENTIFIQUE' ,'SCIENCES') 
                           | replace ('ESPAGNOL LV2', 'ESPAGNOL') 
                           | replace ('EDUCATION MUSICALE' ,'MUSIQUE') 
                           | replace ('LCA LATIN', 'LATIN') 
                           | replace ('PHYSIQUE-CHIMIE', 'PHYS.-CHIMIE') 
                           | replace ('MATHEMATIQUES', 'MATHS') 
                           | replace ('HISTOIRE-GEOGRAPHIE', 'HIST-GEO') 
                           | replace ('SCIENCES VIE & TERRE', 'SVT') 
                           | replace ('ED.PHYSIQUE & SPORT.', 'EPS') 
                           | replace ('SC. ECONO.& SOCIALES', 'SES') 
                           | replace ('NUMERIQUE SC.INFORM.', 'NSI')
                         }}<br></b>{{ items[i].name }}<br><font color= grey>{{ items[i].date.strftime("%d-%m") }}

                                                
                        <td>
                        {% set acquisitions = items[i].acquisitions %}
                        {% for j in range(0,acquisitions|count,1) %}{% if acquisitions[j].level == 'Très bonne maîtrise' %}💚
                        {% elif acquisitions[j].level == 'Maîtrise satisfaisante' %}🟢
                        {% elif acquisitions[j].level == "Presque maîtrisé" %}🟡
                        {% elif acquisitions[j].level == "Début de maîtrise" %}🟡
                        {% elif acquisitions[j].level == 'Maîtrise fragile'  %}🟡
                        {% elif acquisitions[j].level == 'Maîtrise insuffisante'  %}🔴
                        {% elif acquisitions[j].level == 'Absent'  %}❌
                        {% else %}❓
                        {% endif %}
                        {% endfor %}                     

                       <td><b>
                        {% set acquisitions = items[i].acquisitions %}
                        {% for j in range(0,acquisitions|count,1) %}                       
                        {{ acquisitions[j].abbreviation }}
                        {% endfor %}
                        </td></tr>
                        
                        {% endfor %}
                      </tbody> </table>
                    card_mod:
                      style:
                        .: |
                          ha-card ha-markdown {
                            padding:0px
                          }
                          ha-card ha-markdown.no-header {
                            padding: 05px
                          }
                        ha-markdown$: |
                          ha-markdown-element {
                            display: inline-block;
                            height: 450px;
                            overflow-y: scroll;
                            width: 100%;
                          }
                          @media only screen and (min-height: 600px) {
                            ha-markdown-element {
                              height: 400px;
                              width: 100%;
                            }
                          div { 
                              padding: 10px;
                              text-align: center;
                              color: var(--title);
                              font-weight:600;
                              font-size: 15px;
                              font-family: var(--primary-font-family);

                          }
                          table{
                            border-collapse: collapse;
                            font-weight: 500;
                            font-size: 12px;
                            font-family: var(--primary-font-family);
                            width: auto;
                            outline: 0px solid #393c3d;
                            margin-top: 10px;
                            color: var(--text-on);

                          } td {
                              padding: 0px 5px 0px 5px;
                              text-align: left;
                          }
                          tr {
                              line-height: auto;
                          }
                          tr:nth-of-type(even) {
                              background-color: rgba(0, 0, 0, 0.1);
                          }
                          tr:last-of-type {
                              border-bottom: transparent;
                          }
                          mark {
                              background: var(--ocean-blue);
                              color: var(--text-on);
                              border-radius: 10px;
                              padding: 5px;
                              font-weight: 600;
                          }
                          span {
                              background: var(--red);
                              color: var(--text-on);
                              border-radius: 10px;
                              padding: 5px;
                              opacity: 0.8;
                              font-weight: 600;
                          }
                          span {
                              padding: 5px;
                          }
                          tr:nth-child(n+2) > td:nth-child(2) {
                            text-align: left;
                          }
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 

                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[averages]]'
                      state_not: '0'
                  card:
                    type: custom:pronote-averages-card
                    card_mod:
                      style: |
                        ha-card { 
                         color: var(--text-on);
                         font-family: var(--primary-font-family);          
                         display: inline-block;
                         height: 400px;
                         overflow-y: scroll;
                         width: 100%;
                        }  
                        div {
                          color: var(--title);
                          font-family: var(--primary-font-family); 
                        }  
                        .above-average span.average-value::before {
                          background-color: var(--ocean-blue) !important;
                        } 
                        .above-ratio span.average-value::before {
                          background-color: var(--ocean-blue) !important;

                        }  
                        .below-average span.average-value::before {
                          background-color: var(--orange) !important;
                        } 
                        .below-ratio span.average-value::before {
                          background-color: var(--orange) !important;
                        }                     
                    entity: '[[averages]]'
                    average_format: full
                    display_header: true
                    compare_with_class_average: true
                    compare_with_ratio: 0.6
                    display_class_average: true
                    display_class_min: true
                    display_class_max: true
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 

                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[homework]]'
                      state_not: '0'
                  card:
                    type: custom:pronote-homework-card
                    card_mod:
                      style: |
                        ha-card { 
                         color: var(--text-on);
                         font-family: var(--primary-font-family);          
                         display: inline-block;
                         height: 500px;
                         overflow-y: scroll;
                         width: 100%;
                        }
                        div {
                          color: var(--title);
                          font-family: var(--primary-font-family); 
                        } 
                        ::-webkit-scrollbar {
                           display: none;
                         }                          
                    entity: '[[homework]]'
                    display_done_homework: true
                    reduce_done_homework: true
                    current_week_only: false
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 

                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[delays]]'
                      state_not: '0'
                  card:
                    type: markdown
                    content: >-
                      <div>Retards de [[name]]</div><table>  {% set items =
                      [[delays_attributes]] %} {% for i in range(0, items |
                      count, 1) %} <tr> {%- if items[i].justified == True -%}
                      <td> <mark> {{ items[i].date.strftime("%d-%m")
                      }}</mark></td> {% else %} <td> <span>{{
                      items[i].date.strftime("%d-%m") }}</span></td>  {%- endif
                      -%}  <td>{{ items[i].minutes }} minutes de retard</td>
                      <td>{{ items[i].justification }}</td> <td>{{
                      items[i].reasons }}</td> {% endfor %}
                    card_mod:
                      style:
                        .: |
                          ha-card ha-markdown {
                            padding:0px
                          }
                          ha-card ha-markdown.no-header {
                            padding:05px
                          }
                        ha-markdown$: |
                          div { 
                              padding: 10px;
                              text-align: center;
                              color: var(--title);
                              font-weight:600;
                              font-size: 15px;
                              font-family: var(--primary-font-family);e:1.2em;

                          }
                          table{
                            border-collapse: collapse;
                            font-family: var(--primary-font-family);
                            width: 100%;
                            outline: 0px solid #393c3d;
                            margin-top:5px;
                            color: var(--text-on);
                          } caption {
                              text-align: center;
                              font-weight: bold;
                              font-size: 1.2em;
                          } td {
                              padding: 5px 10px 5px 10px;
                              text-align: left;
                              border-bottom: 0px solid #1c2020;
                          }
                          tr {
                              border-bottom: 0px solid #1c2020;
                          }
                          tr:nth-of-type(even) {
                              background-color: rgb(0, 0, 0, 0.1);
                          }
                          tr:last-of-type {
                              border-bottom: transparent;          }*
                          mark {
                              background: var(--ocean-blue);
                              color: var(--text-on);
                              border-radius: 10px;
                              padding: 5px;
                              font-weight: 600;
                          }
                          span {
                              background: var(--red);
                              color: var(--text-on);
                              border-radius: 10px;
                              padding: 5px;
                              opacity: 0.8;
                              font-weight: 600;
                          }
                          span {
                              padding: 5px;
                          }
                          tr:nth-child(n+2) > td:nth-child(2) {
                            text-align: left;
                          }
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 
                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: conditional
                  conditions:
                    - entity: '[[abscences]]'
                      state_not: '0'
                  card:
                    type: markdown
                    content: >-
                      <div>Absences de [[name]]</div><table>  {% set items =
                      [[abscences_attributes]] %} {% for i in range(0, items |
                      count, 1) %} <tr> {%- if items[i].justified == True -%}
                      <td> <mark> {{ items[i].from.strftime("%d-%m")
                      }}</mark></td> {% else %} <td> <span>{{
                      items[i].from.strftime("%d-%m") }}</span></td>  {%- endif
                      -%}  <td>{{ items[i].hours }}</td> <td>{{ items[i].reason
                      }}</td> {% endfor %}
                    card_mod:
                      style:
                        .: |
                          ha-card ha-markdown {
                            padding:0px
                          }
                          ha-card ha-markdown.no-header {
                            padding:05px
                          }
                        ha-markdown$: |
                          div { 
                              padding: 10px;
                              text-align: center;
                              color: var(--title);
                              font-weight:600;
                              font-size: 15px;
                              font-family: var(--primary-font-family);e:1.2em;

                          }
                          table{
                            border-collapse: collapse;
                            font-family: var(--primary-font-family);
                            width: 100%;
                            outline: 0px solid #393c3d;
                            margin-top:5px;
                            color: var(--text-on);
                          } caption {
                              text-align: center;
                              font-weight: bold;
                              font-size: 1.2em;
                          } td {
                              padding: 5px 10px 5px 10px;
                              text-align: left;
                              border-bottom: 0px solid #1c2020;
                          }
                          tr {
                              border-bottom: 0px solid #1c2020;
                          }
                          tr:nth-of-type(even) {
                              background-color: rgb(0, 0, 0, 0.1);
                          }
                          tr:last-of-type {
                              border-bottom: transparent;          }*
                          mark {
                              background: var(--ocean-blue);
                              color: var(--text-on);
                              border-radius: 10px;
                              padding: 5px;
                              font-weight: 600;
                          }
                          span {
                              background: var(--red);
                              color: var(--text-on);
                              border-radius: 10px;
                              padding: 5px;
                              opacity: 0.8;
                              font-weight: 600;
                          }
                          span {
                              padding: 5px;
                          }
                          tr:nth-child(n+2) > td:nth-child(2) {
                            text-align: left;
                          }
            - type: custom:vertical-stack-in-card
              card_mod:
                style: |
                  ha-card { 
                    background: none;
                    box-shadow: none;
                    margin: 5px 1px 5px 1px;
                  }      
              cards:
                - type: custom:button-card
                  entity: '[[update]]'
                  template:
                    - title_card
                  show_state: true
                  name: MàJ
                  layout: name_state
                  styles:
                    name:
                      - justify-self: null
                      - font-size: 12px
                      - color: var(--text-off)
                    state:
                      - justify-self: null
                      - font-size: 12px
                      - color: var(--text-on)
  timestamp_camera:
    card:
      type: markdown
      content: >-
        {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
        horodatage_formate = as_timestamp(states('[[input]]')) |
        timestamp_custom("%d/%m" ) %} {% set horodatage_aujourd_hui =
        as_timestamp(states('[[input]]')) | timestamp_custom("Aujourd'hui à
        %H:%M" ) %} {% set horodatage = as_timestamp(states('[[input]]')) |
        timestamp_custom("%a %d/%m à %H:%M" ) 
         | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
        {% if  aujourd_hui  ==  horodatage_formate  -%}
          {{ horodatage_aujourd_hui  }}
        {%- else%}
          {{ horodatage }}
        {%- endif %}
      card_mod:
        style: |
          ha-card {
            background-color: none !important;
            background: none !important;
            box-shadow: none;
            font-family: Avenir;
            font-size: 12px;
            font-weight: 500;
            color: var(--text-on);
            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5));
            display: flex; 
            flex-direction: column; 
            align-items: center; 
            justify-content: center; 
            margin-top: -23px !important;
            padding: 0 !important; 
          }
          ha-card.type-markdown {
            height: 15px; 
          }
  music:
    card:
      type: custom:button-card
      entity: '[[entity]]'
      aspect_ratio: 2
      template:
        - police
      icon: mdi:speaker
      show_entity_picture: true
      show_name: false
      tap_action:
        action: more-info
      styles:
        grid:
          - grid-template-areas: '"info"'
          - grid-template-columns: 1fr
          - grid-template-rows: min-content min-content
        card:
          - padding: 0px
          - position: relative
          - '--mdc-ripple-press-opacity': 0
        img_cell:
          - position: absolute
        icon:
          - width: 130%
          - opacity: 0.6
          - '-webkit-filter': blur(8px)
          - '-moz-filter': blur(8px)
          - '-o-filter': blur(8px)
          - '-ms-filter': blur(8px)
          - filter: blur(8px)
          - color: var(--img-cell-off)
        entity_picture:
          - opacity: |
              [[[
                if (entity.state == "playing")
                  return "0.6"; 
                return "0.15";
              ]]]           
        custom_fields:
          commands:
            - position: absolute
            - width: 90%
            - left: 05%
            - top: 78%
          gauge:
            - position: absolute
            - width: 90%
            - left: 05%
            - top: 60%
      custom_fields:
        info:
          card:
            type: custom:button-card
            entity: '[[entity]]'
            show_entity_picture: true
            name: |
              [[[
                if (entity.state == "playing")
                  return entity.attributes.friendly_name + " [" + (entity.attributes.volume_level * 100).toFixed(0) + "%]"
                return entity.attributes.friendly_name 
              ]]]
            label: |
              [[[
                if (entity.state == "playing")
                  return entity.attributes.media_artist;
                if (entity.state == "idle")
                  return "Pause";
                if (entity.state == "paused")
                  return "Pause";
                if (entity.state == "standby")
                  return "Eteint"; 
                return "Autre";
              ]]]
            show_label: true
            show_icon: true
            icon: mdi:speaker
            custom_fields:
              info: |
                [[[
                  if (entity.state == "playing")
                    return entity.attributes.media_title; 
                  return "Pas d'info";
                ]]]              
            styles:
              grid:
                - grid-template-areas: '"i gutter n" "i gutter l" "i gutter info"'
                - grid-template-columns: min-content 14px 1fr
                - grid-template-rows: min-content 20px
              card:
                - background: none
                - box-shadow: none
                - border-radius: 0
                - padding: 15px
                - '--mdc-ripple-press-opacity': 0
              entity_picture:
                - opacity: |
                    [[[
                      if (entity.state == "playing")
                        return "1"; 
                      return "0.4";
                    ]]]               
              img_cell:
                - height: 80px
                - width: 80px
                - border-radius: 16px
              icon:
                - height: 100%
                - width: 100%
                - color: var(--dark-blue)
              name:
                - font-size: 13px
                - opacity: 0.8
                - font-weight: 500
                - color: var(--text-on)
                - width: 100%
                - text-align: left
                - align-self: end
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
              label:
                - font-size: 13px
                - font-weight: 600
                - color: var(--text-on)
                - opacity: |
                    [[[
                      if (entity.state == "playing")
                        return "1"; 
                      return "0.7";
                    ]]]                 
                - width: 90%
                - width: 100%
                - text-align: left
                - align-self: center
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
              custom_fields:
                info:
                  - white-space: normal
                  - font-weight: 500
                  - color: var(--text-on)
                  - font-size: 13px
                  - opacity: |
                      [[[
                        if (entity.state == "playing")
                          return "1"; 
                        return "0.8";
                      ]]]  
                  - font-style: italic
                  - width: 90%
                  - text-align: left
                  - align-self: start
                  - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
                  - max-height: 55px
        gauge:
          card:
            type: conditional
            conditions:
              - condition: state
                entity: '[[entity]]'
                state: playing
            card:
              type: custom:button-card
              variables:
                entity: '[[gauge]]'
              template:
                - music_progression
        commands:
          card:
            type: horizontal-stack
            cards:
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:volume-mute
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.volume_mute
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:volume-minus
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.volume_down
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:volume-plus
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.volume_up
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:skip-previous
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_previous_track
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:play-pause
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_play_pause
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:skip-next
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_next_track
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:power
                show_name: false
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_stop
                  service_data:
                    entity_id: '[[entity]]'
  announce:
    card:
      type: custom:vertical-stack-in-card
      horizontal: true
      cards:
        - type: entities
          entities:
            - entity: '[[entity]]'
              name: Message à envoyer
              card_mod:
                style:
                  hui-generic-entity-row:
                    $: |
                      state-badge_card {
                        display: none;
                      } 
                      :host {
                        width: 194%;
                      }
                    ha-textfield $: |
                      .mdc-text-field {
                        border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                        border-radius: 110px !important;
                      }
                      .mdc-line-ripple::after,
                      .mdc-line-ripple::before {
                        border-bottom-style: none !important;
                      }
          show_header_toggle: false
          card_mod:
            style: |
              "hui-generic-entity-row$state-badge_card": {
                display: none;
              }
              ha-card {
                background: none;
              }
        - type: button
          tap_action:
            action: call-service
            service: '[[script]]'
          show_name: false
          show_icon: true
          icon: mdi:send
          icon_height: 30px
          card_mod:
            style: |
              ha-card {
                width: 56px;
                height: 56px !important;
                margin-top: 16px;
                border-radius: 100px;
                float: right;
              }
  announce_volume:
    card:
      type: custom:vertical-stack-in-card
      card_mod:
        style: |
          ha-card { 
            background-color: var(--card-background-color);
            box-shadow: none;
            overflow: visible !important;
            margin-top: -10px;
          } 
      cards:
        - type: custom:mini-media-player
          entity: '[[entity]]'
          artwork: none
          icon: mdi:speaker
          hide:
            source: true
            icon: true
            name: true
            power: true
            play_pause: true
            controls: true
            next: true
            prev: true
            play_stop: true
            progress: true
            state_label: true
            info: true
          toggle_power: false
          info: null
          volume_stateless: false
          group: true
  graph_duration:
    card:
      type: custom:apexcharts-card
      graph_span: 10d
      span:
        start: day
        offset: '-9d'
      experimental:
        color_threshold: true
      apex_config:
        chart:
          height: 170
          fontFamily: Avenir
        legend:
          show: false
        grid:
          show: true
          strokeDashArray: 0
          position: back
          borderColor: rgba(200,200,200,0.3)
        stroke:
          width: 1
        xaxis:
          labels:
            format: ddd dd
            hideOverlappingLabels: true
            showDuplicatges: true
            show: true
        dataLabels:
          offsetY: -5
          background:
            enabled: true
            opacity: 0.5
        plotOptions:
          bar:
            borderRadius: 5
            dataLabels:
              position: top
      header:
        show: true
        title: '[[title]]'
        show_states: true
        standard_format: false
        colorize_states: true
      yaxis:
        - id: first
          decimals: 1
          min: 0
          apex_config:
            tickAmount: 5
      series:
        - entity: '[[entity]]'
          yaxis_id: first
          type: column
          show:
            name_in_header: false
            datalabels: true
            legend_value: false
            header_color_threshold: true
          group_by:
            func: max
            duration: 1d
          opacity: 0.8
          color_threshold:
            - value: '[[value1]]'
              color: var(--green)
            - value: '[[value2]]'
              color: var(--ocean-blue)
            - value: '[[value3]]'
              color: var(--yellow)
            - value: '[[value4]]'
              color: var(--orange)
            - value: '[[value5]]'
              color: var(--red)
  graph:
    card:
      type: custom:apexcharts-card
      card_mod:
        style: |
          ha-card {
             margin: 0px -10px -5px -10px;
           }      
      header:
        show: true
        title: ''
        show_states: true
        colorize_states: true
      experimental:
        brush: false
        color_threshold: true
      graph_span: 50h
      now:
        show: true
        color: var(--green)
        label: Maintenant
      apex_config:
        chart:
          fontFamily: Avenir
          height: 200
        grid:
          show: false
        legend:
          show: false
          fontSize: 12px
          height: 40
        dataLabels:
          enabled: false
        fill:
          type: gradient
          gradient:
            type: vertical
            shadeIntensity: 0.8
            inverseColors: false
            opacityFrom: 0.5
            opacityTo: 0
            stops:
              - - 0
                - 50
                - 100
      yaxis:
        - id: first
          decimals: 1
          apex_config:
            tickAmount: 4
        - id: second
          opposite: true
          decimals: 1
          apex_config:
            tickAmount: 4
        - id: third
          min: 0
          max: 1
          show: false
      series:
        - entity: sensor.night_state
          yaxis_id: third
          name: ''
          color: grey
          type: area
          curve: stepline
          stroke_width: 0
          opacity: 0.1
          color_threshold:
            - value: 0
              color: darkgrey
            - value: 1
              color: darkgrey
          show:
            in_header: false
        - entity: '[[temp]]'
          name: Température
          yaxis_id: first
          unit: °
          color: var(--red)
          type: area
          curve: smooth
          fill_raw: last
          stroke_width: 1
          show:
            extremas: true
            in_brush: false
            header_color_threshold: true
            legend_value: false
          float_precision: 1
          group_by:
            func: last
        - entity: '[[hum]]'
          name: humidité
          unit: '%'
          yaxis_id: second
          color: var(--ocean-blue)
          type: area
          curve: smooth
          fill_raw: last
          stroke_width: 1
          show:
            extremas: true
            in_brush: false
            header_color_threshold: true
            legend_value: false
          group_by:
            func: last
  graph_flower:
    card:
      type: custom:apexcharts-card
      card_mod:
        style: |
          ha-card { 
            background-color: transparent;
            box-shadow: none;
            margin-top: -20px;
            margin-bottom: -20px;
          }     
      header:
        show: true
        show_states: false
        colorize_states: true
      graph_span: 7d
      apex_config:
        chart:
          height: 170px
        grid:
          show: false
        legend:
          fontSize: 12px
        dataLabels:
          enabled: false
        stroke:
          width: 1
          curve: smooth
        fill:
          type: gradient
          gradient:
            type: vertical
            shadeIntensity: 0.8
            inverseColors: false
            opacityFrom: 0.5
            opacityTo: 0
            stops:
              - - 0
                - 50
                - 100
      series:
        - entity: '[[entity]]'
          name: humidité
          unit: '%'
          color: var(--blue)
          type: area
          curve: smooth
          show:
            extremas: true
            in_brush: false
          float_precision: 1
          group_by:
            duration: 1h
            func: last
button_card_templates:
  police:
    styles:
      card:
        - font-family: var(--primary-font-family)
  no_style:
    styles:
      card:
        - '--ha-card-border-width': 0px
        - background-color: none
        - background: none
        - box-shadow: none
  custom_icon:
    icon: |
      [[[
        if (entity.attributes.device_class == "opening" && entity.state == "on" )
          return "mdi:door-open"  
        if (entity.attributes.device_class == "opening" && entity.state != "on" )
          return "mdi:door-closed"            
        if (entity.attributes.device_class == "door" && entity.state == "on" )
          return "mdi:door-open"  
        if (entity.attributes.device_class == "door" && entity.state != "on" )
          return "mdi:door-closed"             
        if (entity.attributes.device_class == "motion" && entity.state == "on" )
          return "mdi:run-fast"  
        if (entity.attributes.device_class == "motion" && entity.state != "on" )
          return "mdi:human-male"   
        if (entity.attributes.device_class == "occupancy" && entity.state == "on" )
          return "mdi:run-fast"  
        if (entity.attributes.device_class == "occupancy" && entity.state != "on" )
          return "mdi:human-male"    
        return "" ]]] 
  custom_music_state:
    show_state: false
    show_label: true
    show_entity_picture: true
    icon: mdi:speaker
    styles:
      entity_picture:
        - width: 100%
      label:
        - white-space: null
    label: |
      [[[
        var translations = {
          'playing': 'Lecture',            
          'idle': 'Pause',            
          'paused': 'Pause',
          'standby': 'Éteint'
        };
        if (entity.state == "playing")
          return entity.attributes.media_artist;
        else            
        return translations[entity.state];
      ]]]           
  custom_state:
    show_state: false
    show_label: true
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if (entity.attributes.device_class == "opening" && entity.state == "on" )
          return "Ouvert"  
        if (entity.attributes.device_class == "opening" && entity.state == "off" )
          return "Fermé"  
        if (entity.attributes.device_class == "door" && entity.state == "on" )
          return "Ouvert"  
        if (entity.attributes.device_class == "door" && entity.state == "off" )
          return "Fermé"            
        if (entity.attributes.device_class == "motion" && entity.state == "on" )
          return "Détecté"  
        if (entity.attributes.device_class == "motion" && entity.state == "off" )
          return "Rien"   
        if (entity.attributes.device_class == "occupancy" && entity.state == "on" )
          return "Occupé"  
        if (entity.attributes.device_class == "occupancy" && entity.state == "off" )
          return "Absent"           
        if( entity.state == "off")
            return "Désactivé"
        if( entity.state == "on")          
          return  "Activé" 
        if( entity.state == "home")          
          return  "Présent" 
        if( entity.state == "not_home")          
          return  "Absent"         
        if( entity.state == "disarmed")          
          return  "Désarmé" 
        if( entity.state == "armed_away")          
          return  "Absent" 
        if( entity.state == "armed_home")          
          return  "Présent" 
        if( entity.state == "arming")          
          return  "Armement" 
        if( entity.state == "armed_night")          
          return  "Nuit" 
        if( entity.state == "triggered")          
          return  "Déclenché"
        if( entity.state == "pending")          
          return  "Attente"         
        if( entity.state == "locked")          
          return  "Verrouillé" 
        if( entity.state == "locking")          
          return  "Verrouillage"          
        if( entity.state == "unlocked")          
          return  "Déverrouillé"
        if( entity.state == "unlocking")          
          return  "Déerrouillage"          
        if( entity.state == "cleaning")          
          return  "Nettoyage" 
        if( entity.state == "returning")          
          return  "Retour"      
        if( entity.state == "error")          
          return  "Erreur"      
        if( entity.state == "idle")          
          return  "Pause"      
        if( entity.state == "paused")          
          return  "Pause"                
        if( entity.state == "docked")          
          return  "Base"  
        if( entity.state == "playing")          
          return  "En cours"  
        if( entity.state == "standby")          
          return  "Éteint" 
        if( entity.state == "Cellular")          
          return  "Cellulaire"
        if( entity.state == "Stationnaire")          
          return  "Rien"           
        return entity.state ]]]
  weather_icon:
    entity_picture: |
      [[[
        var weather = states['weather.ville'].state;
        if ((weather == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/clear-day.svg"
        if ((weather == 'sunny') || (weather == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/clear-night.svg"  

        if ((weather == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/thunderstorms-day-rain.svg"
        if ((weather == 'lightning-rainy') || (weather == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/thunderstorms-night-rain.svg"

        if ((weather == 'fog') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/fog-day.svg"             
        if ((weather == 'fog') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/fog-night.svg"

        if ((weather == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/partly-cloudy-day.svg"                    
        if ((weather == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/partly-cloudy-night.svg"  

        if ((weather == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
        if ((weather == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

        if ((weather == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/thunderstorms-day.svg"                      
        if ((weather == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/thunderstorms-night.svg" 

        if (weather == 'clear-night')
          return "/local/weather/icones animes/clear-night.svg";

        if (weather == 'sleet')
          return "/local/weather/icones animes/sleet.svg";  

        if (weather == 'pouring')
          return "/local/weather/icones animes/umbrella.svg"; 

        if (weather == 'snowy-rainy')
          return "/local/weather/icones animes/sleet.svg";  

        if (weather == 'snow')
          return "/local/weather/icones animes/snow.svg"; 

        if (weather == 'snowy')
          return "/local/weather/icones animes/snow.svg"; 

        if (weather == 'cloudy')
          return "/local/weather/icones animes/cloudy.svg"; 

        if (weather == 'wind')
          return "/local/weather/icones animes/wind.svg"; 

        if (weather == 'hail')
          return "/local/weather/icones animes/hail.svg"; 
      ]]]
  last_changed:
    label: |
      [[[
        var last_changed = states[entity.entity_id].last_changed;
        
        var now = new Date();
        var date = new Date(last_changed);
        date.toLocaleString();
        
        var diff = (now - date) / 1000;
        var days = Math.floor(diff / 86400);
        diff = diff % 86400;
        var hours = Math.floor(diff / 3600);
        diff = diff % 3600;
        var minutes = Math.floor(diff / 60);
        var seconds = Math.floor(diff % 60);
        
        
        if (days > 0) {
           return days + "j " + hours + "h ";
        }else{
           if (hours > 0) {
              return hours + "h " + "et " + minutes + "min";
           } else {
              if (minutes > 0) {
                 return minutes + "min et " + seconds + "s";
              } else {
                 return seconds + "s";
              }
           }
        }
      ]]]  
  title_activity_card:
    template:
      - badge_auto_card
      - no_style
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: none
      label:
        - align-self: end
        - font-size: 11px
        - color: var(--text-off)
      icon:
        - width: 12px
        - color: var(--text-off)
      card:
        - padding: 5px 0 0 0
  separator_activity_card:
    template:
      - divider
    styles:
      card:
        - margin-top: 0px
        - margin-bottom: 5px
  sensor_activity_card:
    template:
      - base
      - no_style
    show_state: false
    show_label: true
    styles:
      grid:
        - grid-template-rows: min-content min-content 1fr
        - grid-template-columns: 43px 1fr
      name:
        - color: var(--title)
        - font-size: 12px
        - margin-top: 2px
      label:
        - color: var(--text-on)
        - margin-top: '-2px'
        - white-space: normal
      icon:
        - color: var(--icon-off)
      img_cell:
        - border-radius: 8px
        - background-color: var(--img-cell-off)
      card:
        - border-radius: 0px
        - padding: 03px 4px 03px 0px
        - background: transparent
      custom_fields:
        bubble:
          - position: absolute
          - font-size: 13px
          - left: 25px
          - top: '-2%'
  sensor_alert_activity_card:
    template:
      - sensor_activity_card
    styles:
      icon:
        - color: var(--red)
      name:
        - color: var(--red)
  around_card:
    styles:
      grid:
        - grid-template-areas: '"n" "info"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      card:
        - padding: 12px
  around_clear_card:
    styles:
      card:
        - padding: 05px
        - background: none
        - box-shadow: none
  divider:
    styles:
      card:
        - height: 1px
        - padding: 0px
        - margin-top: 15px
        - margin-bottom: 15px
        - border-radius: 0px
        - background-color: rgba(100, 100, 100, 0.2)
        - box-shadow: none
  base:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    layout: icon_name_state2nd
    styles:
      grid:
        - grid-template-rows: min-content min-content min-content
        - grid-template-columns: 44px 1fr
      img_cell:
        - height: 35px
        - width: 35px
        - border-radius: 100px
        - background-color: var(--img-cell-off)
        - justify-self: start
        - align-self: start
      icon:
        - width: 50%
        - color: var(--icon-off)
      name:
        - font-size: 13px
        - opacity: 1
        - font-weight: 500
        - color: var(--text-on)
        - width: 100%
        - text-align: left
        - align-self: end
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.5))
      state:
        - font-size: 13px
        - font-weight: 500
        - color: var(--text-on)
        - opacity: 0.8
        - width: 100%
        - text-align: left
        - align-self: start
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.5))
      label:
        - font-size: 13px
        - font-weight: 500
        - color: var(--text-on)
        - opacity: 0.8
        - width: 100%
        - text-align: left
        - align-self: start
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.5))
      card:
        - padding: 8px 10px 6px 8px
        - font-size: 100%
        - white-space: normal
      custom_fields:
        bouton:
          - position: absolute
          - top: 77%
          - left: 50%
          - width: calc(85% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        jauge-cercle:
          - top: '-02%'
          - left: 66%
          - width: 40%
          - position: absolute
          - opacity: 100%
          - z-index: 2
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        lock:
          - position: absolute
          - top: 7%
          - left: 88%
          - width: calc(15% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - opacity: 100%
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        graph_temp:
          - position: absolute
          - top: 80%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 30px
          - top: 4%
          - height: 15px
          - width: 15px
          - font-size: 80%
          - line-height: 15px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  base_high:
    aspect_ratio: 1.53/1
  graph_temp:
    custom_fields:
      graph_temp:
        card:
          type: custom:mini-graph-card
          height: 250
          line_width: 4
          lower_bound: 10
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: false
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
  sub_button:
    show_name: false
    show_state: false
    show_label: false
    show_icon: true
    template:
      - police
    styles:
      card:
        - border-radius: 10px
        - height: 27px
        - padding: 01px
        - line-height: 77%
        - border-color: rgba(0, 0, 0, 0.1)
        - border-style: outset
        - border-width: 1px
      icon:
        - color: var(--icon-off)
        - width: 14px
        - filter: drop-shadow(1px 2px 1px rgba(0,0,0,0.3))
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  room_card:
    variables:
      var_label: |
        [[[ 
          if (entity.state == 'on' )
            return variables.temp_state +"° - "  
          if (entity.state == 'off'  )           
            return variables.temp_state +"°"            
        ]]]
    label: |
      [[[
        if( entity.state == "unavailable"  )
          return "Indisponible"
        if( entity.state == "off")
          return variables.var_label
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum =  Math.round(lum * 1) / 1; 
        return variables.var_label + "  " + roundLum + "%" ]]] 
    styles:
      label:
        - color: |
            [[[           
              if (variables.temp_state < 18.9)
                return 'var(--icon-blue)'
              if (variables.temp_state  > 26.9)
                return 'var(--red)'                 
              if (variables.temp_state  > 24.9)
                return 'var(--orange)'               
              return "var(--text-off)"
            ]]]
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 32px
          - top: 5%
          - height: 15px
          - width: 15px
          - font-size: 80%
          - line-height: 15px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                    var color = '255,215,0'; // Default Color
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                      color = states[entity.entity_id].attributes.rgb_color;               
                    return 'rgb(' + color + ',0.15)';
                ]]]
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
  room_card_slider:
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.slider ]]]'
          colorMode: brightness
          min: 1
          max: 100
          styles:
            container:
              - background: none
              - border-radius: 100px
              - overflow: visible
            card:
              - height: 7px
              - padding: 0 8px
              - background: |
                  [[[
                    if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.05) 0%, rgba(255,255,255, 0.2) 100%)";
                    else return "var(--card-background-color)";
                  ]]]
              - box-shadow: none
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[                 
                    if (entity.state === 'off') return "linear-gradient(90deg, rgba(255,255,255, 0.05) 0%, rgba(255,255,255, 0.1) 100%)";
                    if( states[entity.entity_id].attributes.rgb_color == undefined)
                    return 'rgba(255, 218, 120, 0.5)'                    
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                    var color = '255,215,0'; // Default Color
                    color = states[entity.entity_id].attributes.rgb_color
                    return 'rgb(' + color + ',0.5)'
                  ]]]
              - top: '-2.5px'
              - right: '-6px'
              - height: 12px
              - width: 12px
              - border-radius: 100px
    styles:
      custom_fields:
        slider:
          - position: absolute
          - width: 85%
          - top: 53%
          - left: 7.5%
          - z-index: 1
  room_card_graph:
    styles:
      custom_fields:
        graph:
          - opacity: 90%
          - position: absolute
          - top: 50%
          - left: 50%
          - width: calc(110% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
          - z-index: 0
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.temp ]]]'
          height: 50
          line_width: 1
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: false
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
          color_thresholds:
            - value: 0
              color: var(--graph-line)
  slider_brightness:
    entity: '[[[ return variables.entity ]]]'
    template:
      - police
    show_name: false
    show_icon: false
    name: Luminosité
    icon: mdi:brightness-4
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.slider ]]]'
          colorMode: brightness
          styles:
            container:
              - border-radius: 100px
              - overflow: visible
              - background: none
            card:
              - height: 15px
              - padding: 0 20px
              - background: |
                  [[[
                    if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.05) 0%, rgba(255,255,255, 0.2) 100%)";
                    else return "var(--card-background-color)";
                  ]]]
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[                 
                    if (entity.state === 'off') return "var(--img-cell-off)";
                    if( states[entity.entity_id].attributes.rgb_color == undefined)
                    return 'rgba(255, 218, 120, 0.7)'                    
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                    var color = '255,215,0'; // Default Color
                    color = states[entity.entity_id].attributes.rgb_color
                    return 'rgb(' + color + ',0.7)'
                  ]]]          
              - top: '-02px'
              - right: '-18px'
              - height: 20px
              - width: 20px
              - border-radius: 100px
    styles:
      grid:
        - grid-template-areas: '"n" "slider"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content min-content
      card:
        - padding: 14px
        - '--mdc-ripple-press-opacity': 0
      name:
        - justify-self: start
        - font-size: 14px
        - margin: 4px 0 10px 4px
        - color: var(--text-on)
  child_alarm:
    tap_action:
      action: navigate
      navigation_path: /lovelace/pronote
    template:
      - ball_card
    entity: '[[[ return variables.entity ]]]'
    name: |
      [[[
        if (states['input_boolean.nilemato'].state == "on" )
            return `
            <ha-icon
            icon="mdi:alarm"
            style="width: 13px; height: 13px; color: var(--text-off); margin-top: -1px; vertical-align: top; "> 
            </ha-icon> <span style="vertical-align: top; "> ${variables.reveil} </span>` 
            return "Cours"
      ]]]
    show_name: true
    show_state: false
    show_label: true
    show_entity_picture: true
    label: |
      [[[
        const time = states['sensor.time'].state;

        const verifCoursAujourdhui = variables.verif_cours_aujourdhui ;
        const DebutCoursAujourdhui = variables.debut_cours_aujourdhui ;      
        const FinCoursAujourdhui = variables.fin_cours_aujourdhui ;      
        const verifCoursDemain = variables.verif_cours_demain ;
        const DateCoursDemain = variables.date_cours_demain ;
        const DebutCoursDemain = variables.debut_cours_demain ;           
        const FinCoursDemain = variables.fin_cours_demain ;          


        if (verifCoursAujourdhui) {
          if (time < FinCoursAujourdhui) {
            return `<span style="font-size: 0.45em; vertical-align: middle;">🔵 </span>${DebutCoursAujourdhui} - ${FinCoursAujourdhui}`;
          } else { 
            if (verifCoursDemain) {
              return `<span style="font-size: 0.45em; vertical-align: middle;">🟡 </span>${DateCoursDemain} - ${FinCoursDemain}`;
            } else {
              return `<span style="font-size: 0.45em; vertical-align: middle;">🔴 </span>Pas cours`;
            }
          }
        } else {
          if (verifCoursDemain) {
            return `<span style="font-size: 0.45em; vertical-align: middle;">🟡 </span>${DateCoursDemain} - ${FinCoursDemain}`;
          } else {
            return `<span style="font-size: 0.45em; vertical-align: middle;">🔴 </span>Pas cours`;
          }
        }
      ]]]
    styles:
      entity_picture:
        - width: 100%
      img_cell:
        - border: transparent
      card:
        - background-color: |
            [[[ 
              if (variables.reveil != "Aucun" && states['input_boolean.nilemato'].state == "on" )
                return "var(--card-blue)"
              if (variables.reveil != "Aucun" && states['input_boolean.nilemato'].state == "off" )
                return "var(--card-red)"            
              return ""
            ]]]
  tom_alarm:
    template:
      - child_alarm
    variables:
      entity: person.tom
      verif_cours_aujourdhui: >-
        [[[ return
        !states['sensor.debut_des_cours_de_tom_aujourd_hui'].state.includes('Pas
        cours')]]]
      debut_cours_aujourdhui: '[[[ return states[''sensor.debut_des_cours_de_tom_aujourd_hui''].state]]]'
      fin_cours_aujourdhui: '[[[ return states[''sensor.fin_des_cours_de_tom_aujourd_hui''].state]]]'
      verif_cours_demain: >-
        [[[ return
        !states['sensor.debut_des_cours_de_tom_demain'].state.includes('Pas
        cours')]]]
      date_cours_demain: '[[[ return states[''sensor.date_debut_des_cours_de_tom_demain''].state]]]'
      debut_cours_demain: '[[[ return states[''sensor.debut_des_cours_de_tom_demain''].state]]]'
      fin_cours_demain: '[[[ return states[''sensor.fin_des_cours_de_tom_demain''].state]]]'
      reveil: '[[[ return states[''sensor.tom_reveil''].state]]]'
  manon_alarm:
    template:
      - child_alarm
    variables:
      entity: person.manon
      verif_cours_aujourdhui: >-
        [[[ return
        !states['sensor.debut_des_cours_de_manon_aujourd_hui'].state.includes('Pas
        cours')]]]
      debut_cours_aujourdhui: >-
        [[[ return
        states['sensor.debut_des_cours_de_manon_aujourd_hui'].state]]]
      fin_cours_aujourdhui: '[[[ return states[''sensor.fin_des_cours_de_manon_aujourd_hui''].state]]]'
      verif_cours_demain: >-
        [[[ return
        !states['sensor.debut_des_cours_de_manon_demain'].state.includes('Pas
        cours')]]]
      date_cours_demain: >-
        [[[ return
        states['sensor.date_debut_des_cours_de_manon_demain'].state]]]
      debut_cours_demain: '[[[ return states[''sensor.debut_des_cours_de_manon_demain''].state]]]'
      fin_cours_demain: '[[[ return states[''sensor.fin_des_cours_de_manon_demain''].state]]]'
      reveil: '[[[ return states[''sensor.manon_reveil''].state]]]'
  leane_alarm:
    template:
      - child_alarm
    variables:
      entity: person.leane
      verif_cours_aujourdhui: >-
        [[[ return
        !states['sensor.debut_des_cours_de_leane_aujourd_hui'].state.includes('Pas
        cours')]]]
      debut_cours_aujourdhui: >-
        [[[ return
        states['sensor.debut_des_cours_de_leane_aujourd_hui'].state]]]
      fin_cours_aujourdhui: '[[[ return states[''sensor.fin_des_cours_de_leane_aujourd_hui''].state]]]'
      verif_cours_demain: >-
        [[[ return
        !states['sensor.debut_des_cours_de_leane_demain'].state.includes('Pas
        cours')]]]
      date_cours_demain: >-
        [[[ return
        states['sensor.date_debut_des_cours_de_leane_demain'].state]]]
      debut_cours_demain: '[[[ return states[''sensor.debut_des_cours_de_leane_demain''].state]]]'
      fin_cours_demain: '[[[ return states[''sensor.fin_des_cours_de_leane_demain''].state]]]'
      reveil: '[[[ return states[''sensor.leane_reveil''].state]]]'
  nina_alarm:
    template:
      - child_alarm
    variables:
      entity: person.nina
      reveil: '[[[ return states[''sensor.nina_reveil''].state]]]'
  ball_card:
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    template:
      - base
    show_state: true
    show_label: false
    styles:
      state:
        - white-space: nowrap
      label:
        - white-space: nowrap
      card:
        - border-radius: 50px
        - padding: 6px
      img_cell:
        - place_self: middle
        - align-self: middle
      custom_fields:
        notification:
          - padding: 1px
          - left: 26px
          - top: 5%
          - height: 15px
          - width: 15px
          - font-size: 75%
          - line-height: 15px
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  ball_light_card:
    template:
      - ball_card
    show_state: false
    show_label: true
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if( entity.state == "off")
          return "Eteint"
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum =  Math.round(lum * 1) / 1; 
        return roundLum + "%" ]]] 
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  mini_card:
    variables:
      var_name_temp: Temp
      var_name_hum: Hum
      var_name_lum: Lum
      var_name_mouv: Mouv
    show_icon: true
    show_name: false
    show_state: false
    show_label: true
    template:
      - police
      - no_style
    styles:
      img_cell:
        - border-radius: 50%
        - width: 35px
        - height: 35px
        - background-color: var(--img-cell-off)
        - color: var(--text-on)
      icon:
        - width: 50%
        - color: var(--icon-off)
      label:
        - font-weight: 500
        - font-size: 13px
        - opacity: 0.8
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
        - white-space: normal
      state:
        - font-weight: 500
        - font-size: 13px
        - opacity: 0.8
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-weight: 500
        - font-size: 13px
        - opacity: 1
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - border-radius: 0px
        - height: auto
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 60%
          - top: 4%
          - height: 17px
          - width: 17px
          - font-size: 10px
          - line-height: 16px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0 )
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0)
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  climat_card:
    entity: '[[[ return variables.temp ]]]'
    show_name: false
    show_icon: false
    template:
      - temperature_state
      - no_style
    custom_fields:
      icon:
        card:
          type: custom:button-card
          entity: '[[[ return variables.temp ]]]'
          icon: '[[[ return variables.icon ]]]'
          show_icon: true
          show_state: false
          show_name: false
          show_label: true
          template:
            - no_style
          styles:
            icon:
              - width: 18px
              - color: |
                  [[[ 
                    if (variables.temp_state > 26)   
                      return "var(--icon-red)"
                    if (variables.temp_state < 19)   
                      return "var(--icon-blue)" 
                    return "var(--icon-off)"
                  ]]]               
      temp:
        card:
          type: custom:button-card
          entity: '[[[ return variables.temp ]]]'
          show_state: false
          show_name: false
          show_label: true
          show_icon: false
          label: |
            [[[ return (entity.state* 1).toFixed(1) +"°"  ]]]           
          template:
            - police
            - no_style
          styles:
            label:
              - font-size: 30px
              - font-weight: null
              - color: |
                  [[[ 
                    if (variables.temp_state > 26)   
                      return "var(--red)"
                    if (variables.temp_state < 19)   
                      return "var(--blue)"                      
                  ]]]  
      hum:
        card:
          type: custom:button-card
          entity: '[[[ return variables.hum ]]]'
          show_state: false
          show_name: false
          show_label: true
          show_icon: false
          label: |
            [[[
               return `<ha-icon
               icon="mdi:water"
               style="width: 15px; height: 13px; ">
               </ha-icon>` + (variables.hum_state* 1).toFixed(0) +"%" 
            ]]]
          template:
            - police
            - no_style
          styles:
            label:
              - font-size: 16px
              - font-weight: 500
              - opacity: 0.8
              - color: |
                  [[[ 
                    if (variables.hum_state > 70)   
                      return "var(--red)"
                    if (variables.hum_state < 40)   
                      return "var(--blue)"
                    return "var(--text-on)"
                  ]]]    
      title:
        card:
          type: custom:button-card
          template:
            - title_card
          entity: '[[[ return variables.temp ]]]'
          name: |
            [[[ return variables.temp_trend + variables.name  ]]] 
          styles:
            name:
              - justify-self: center
              - font-size: 13px
              - color: var(--text-off)
              - font-weight: 500
            card:
              - padding: 0
      gauge:
        card:
          type: custom:apexcharts-card
          header:
            show: false
            title: '[[[ return variables.name ]]]'
            show_states: true
            colorize_states: true
          experimental:
            brush: false
            color_threshold: true
          chart_type: radialBar
          series:
            - entity: '[[[ return variables.temp ]]]'
              name: température
              color: var(--blue)
              max: 30
              fill_raw: last
            - entity: '[[[ return variables.hum ]]]'
              name: humidité
              color: var(--blue)
              max: 100
              fill_raw: last
          apex_config:
            chart:
              height: 190
            legend:
              show: false
            colors:
              - var(--black)
            plotOptions:
              radialBar:
                hollow:
                  margin: 0
                  size: 60%
                  background: var(--ha-card-background)
                track:
                  dropShadow:
                    enabled: true
                    top: 2
                    left: 0
                    blur: 4
                    opacity: 0.15
                dataLabels:
                  show: false
                  name:
                    offsetY: -10
                    color: '#fff'
                    fontSize: 13px
                  value:
                    color: '#fff'
                    fontSize: 30px
                    show: true
            fill:
              type: gradient
              gradient:
                shade: dark
                type: vertical
                gradientToColors:
                  - var(--orange)
                  - var(--dark-blue)
                stops:
                  - 0
                  - 100
            stroke:
              lineCap: round
          card_mod:
            style: |
              ha-card {
                 font-family: Avenir;
                 background-color: transparent;
                 box-shadow: none;
               }
    styles:
      card:
        - height: 150px
        - padding: 0
      custom_fields:
        icon:
          - position: absolute
          - width: 100%
          - top: 11%
          - left: 0%
          - opacity: 100%
          - z-index: 1
        title:
          - position: absolute
          - width: 100%
          - top: 31%
          - left: '-02%'
          - opacity: 100%
          - z-index: 2
        temp:
          - position: absolute
          - width: 100%
          - top: 33%
          - left: 0%
          - opacity: 100%
          - z-index: 2
        hum:
          - position: absolute
          - width: 100%
          - top: 58%
          - left: '-02%'
          - opacity: 100%
          - z-index: 2
        gauge:
          - position: absolute
          - width: 100%
          - top: '-06%'
          - left: '-01%'
          - opacity: 100%
          - z-index: 0
  battery_level_card:
    entity: '[[[ return variables.entity ]]]'
    name: |
      [[[
        var name = entity.attributes.friendly_name ;
        return name ;
      ]]]
    label: |
      [[[
        var unit = entity.attributes.unit_of_measurement || '';
        if ( variables.charge == "Charging" || variables.charge == "Charged" || variables.charge == "Full"   )
          return `<ha-icon
          icon="mdi:flash"
          style="width: 14px; height: 16px; color: var(--yellow); margin-top: -01px ;vertical-align: top;"> 
          </ha-icon> <span> ${(entity.state * 1).toFixed(0) + unit} </span>`         
        return (entity.state * 1).toFixed(0) + unit;
      ]]]
    show_icon: false
    show_state: false
    show_label: true
    template:
      - no_style
      - police
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
              color: var(--card-red)
          direction: right
          unit_of_measurement: '%'
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
            value: 'off'
          height: 15px
          width: 100%
          icon: 'off'
          entity_row: true
          severity:
            - color: var(--img-cell-red)
              from: 0
              to: 30
            - color: var(--img-cell-yellow)
              from: 30.1
              to: 50
            - color: var(--img-cell-blue)
              from: 50.1
              to: 99.9
            - color: var(--img-cell-green)
              from: 100
              to: 100
    styles:
      card:
        - height: 30px
        - padding: 5.5px
      name:
        - font-size: 13px
        - color: var(--text-on)
        - font-weight: 500
        - justify-self: start
        - align-self: start
        - margin-left: 20px
      label:
        - font-size: 13px
        - color: |
            [[[ 
              var state = entity.state ;
                if (state <= 30)   
                return "var(--red)"              
                if (state <= 50)   
                return "var(--orange)"
                return "var(--text-on)"
             ]]]
        - font-weight: 600
        - justify-self: end
        - align-self: end
        - margin-right: 20px
        - margin-bottom: 1px
      custom_fields:
        barre:
          - top: '-19%'
          - left: '-50%'
          - width: 100%
          - position: absolute
          - z-index: 0
    state:
      - value: unknown
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
      - value: unavailable
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
  sensor_level_card:
    entity: '[[[ return variables.entity ]]]'
    show_icon: false
    show_state: false
    show_label: true
    label: |
      [[[
        var unit = entity.attributes.unit_of_measurement || '';
        return (entity.state * 1).toFixed(1) + unit;
      ]]]
    template:
      - no_style
      - police
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
          direction: right
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
            value: 'off'
          height: 15px
          width: 100%
          icon: 'off'
          entity_row: true
          severity:
            - color: var(--img-cell-green)
              from: 0
              to: 30
            - color: var(--img-cell-blue)
              from: 30.1
              to: 65
            - color: var(--img-cell-orange)
              from: 65.1
              to: 85
            - color: var(--img-cell-red)
              from: 85.1
              to: 100
    styles:
      card:
        - height: 30px
        - padding: 5.5px
      name:
        - font-size: 13px
        - color: var(--text-on)
        - font-weight: 500
        - justify-self: start
        - align-self: start
        - margin-left: 20px
        - margin-top: 1px
      label:
        - color: var(--text-on)
        - font-size: 13px
        - font-weight: 600
        - justify-self: end
        - align-self: end
        - margin-right: 20px
        - margin-bottom: 0px
      custom_fields:
        barre:
          - top: '-18%'
          - left: '-50%'
          - width: 100%
          - position: absolute
    state:
      - value: unknown
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
      - value: unavailable
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
  music_progression:
    entity: '[[[ return variables.entity ]]]'
    show_icon: false
    show_state: false
    show_label: false
    show_name: false
    template:
      - no_style
    tap_action:
      action: more-info
    double_tap_action:
      action: more-info
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
              color: rgba(255, 255, 255, 0.35)
          direction: right
          unit_of_measurement: '%'
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
            value: 'off'
          height: 5px
          width: 100%
          icon: 'off'
          entity_row: true
          card_mod:
            style: |
              bar-card-backgroundbar {
                filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9));
              }
    styles:
      card:
        - height: 30px
        - padding: 5.5px
      custom_fields:
        barre:
          - top: '-19%'
          - left: '-50%'
          - width: 100%
          - position: absolute
          - z-index: 0
    state:
      - value: unknown
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
      - value: unavailable
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
  multimedia_card:
    entity: input_boolean.musique
    tap_action:
      action: navigate
      navigation_path: /lovelace/Musique
    double_tap_action:
      action: navigate
      navigation_path: /lovelace/Musique
    aspect_ratio: 2
    template:
      - police
    show_name: false
    styles:
      grid:
        - grid-template-areas: '"info"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content min-content
      card:
        - background: null
        - padding: 0
        - position: relative
        - '--mdc-ripple-press-opacity': 0
      img_cell:
        - position: absolute
      icon:
        - width: 150%
        - opacity: 90%
        - '-webkit-filter': blur(10px)
        - '-moz-filter': blur(10px)
        - '-o-filter': blur(10px)
        - '-ms-filter': blur(10px)
        - filter: blur(10px)
        - color: var(--img-cell-off)
      custom_fields:
        card:
          - position: absolute
          - border-radius: 50%
          - top: 44.5%
          - left: 50%
          - width: calc(100% + 03px)
          - transform: translate(-50%, calc(-50% + 10px))
    custom_fields:
      info:
        card:
          type: custom:button-card
          tap_action:
            action: navigate
            navigation_path: /lovelace/Musique
          double_tap_action:
            action: navigate
            navigation_path: /lovelace/Musique
          entity: input_boolean.musique
          name: Musique
          label: Eteint
          show_label: true
          show_icon: true
          styles:
            grid:
              - grid-template-areas: '"i gutter n" "i gutter l"'
              - grid-template-columns: min-content 18px 1fr
              - grid-template-rows: min-content
            card:
              - border-radius: 0
              - background: none
              - box-shadow: none
              - padding: 15px
              - '--mdc-ripple-press-opacity': 0
            img_cell:
              - height: 50px
              - width: 50px
              - border-radius: 100px
              - background-color: var(--img-cell-off)
            icon:
              - width: 45%
              - color: var(--icon-off)
            name:
              - white-space: normal
              - font-size: 14px
              - font-weight: 500
              - color: var(--text-on)
              - width: 100%
              - text-align: left
              - align-self: end
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            label:
              - white-space: normal
              - font-size: 13.5px
              - font-weight: 500
              - color: var(--text-off)
              - opacity: 1
              - width: 100%
              - text-align: left
              - align-self: start
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            custom_fields:
              image:
                - '--mdc-ripple-press-opacity': 0.5
  media_controls:
    template:
      - no_style
    show_name: false
    styles:
      icon:
        - width: 21px
        - color: var(--text-on)
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,1))
        - opacity: 70%
      img_cell:
        - width: 30px
        - height: 30px
        - border-radius: 50px
      card:
        - padding: 0
  title_card:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
      - no_style
    styles:
      name:
        - color: var(--title)
        - font-size: 14px
        - font-weight: 500
        - justify-self: start
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      label:
        - color: var(--text-off)
        - font-size: 14px
        - font-weight: 500
        - justify-self: start
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - height: auto
        - padding: 0 0 0 15px
        - border-radius: 0px
        - line-height: 100%
        - '--ha-card-border-width': 0px
        - background: none
    tap_action:
      action: toggle
    double-tap_action:
      action: more-info
  vacuum_sensor:
    styles:
      grid:
        - grid-template-areas: '"n unit" "l l"'
        - grid-template-columns: min-content min-content
      name:
        - font-size: 32px
        - color: var(--text-on)
      card:
        - height: 80px
        - border-radius: 24px
        - padding: 10px 0 6px 16px
        - box-sizing: border-box
      label:
        - justify-self: start
        - font-size: 12px
        - color: var(--text-off)
        - margin-top: '-2px'
      icon:
        - position: relative
        - width: 20px
        - color: var(--icon-off)
      custom_fields:
        unit:
          - font-size: 12px
          - color: var(--text-off)
          - margin-bottom: 6px
          - padding-left: 2px
    custom_fields:
      unit: '&nbsp;heures'
    show_label: true
    show_icon: true
  badge_card:
    template:
      - police
    show_label: true
    show_name: false
    label: |
      [[[
        var unit = entity.attributes.unit_of_measurement || '';
        return entity.state + unit;
      ]]]    
    styles:
      grid:
        - grid-template-areas: '"i gutter l"'
        - grid-template-columns: min-content 5px min-content
        - grid-template-rows: min-content
      card:
        - padding: 6px 5px
        - line-height: 18px
        - border-radius: 50px
      label:
        - color: var(--text-on)
        - font-size: 13px
        - font-weight: 500
      img_cell:
        - border-radius: 50px
        - height: 20px
        - width: 20px
        - background-color: var(--img-cell-off)
      icon:
        - width: 18px
        - color: var(--icon-off)
  badge_auto_card:
    template:
      - badge_card
    styles:
      card:
        - width: auto
  scene_card:
    show_name: false
    styles:
      card:
        - height: 40px
        - border-radius: 10px
      icon:
        - width: 20px
        - color: var(--img-cell-off)
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  light_mini_card_state:
    state:
      - value: 'on'
        styles:
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--img-cell-off)
          icon:
            - color: var(--icon-off)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  light_card_state:
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.2)';
                ]]]        
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--img-cell-off)
          icon:
            - color: var(--icon-off)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  person_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "home" || entity.state == "Maison" ||
          entity.state == "Présent"  ]]]
        styles:
          state:
            - color: var(--text-off)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: '[[[ return  entity.state == "not_home" || entity.state == "off" ]]]'
        styles:
          state:
            - color: var(--icon-orange)
      - operator: template
        value: '[[[ return  entity.state != "not_home" ]]]'
        styles:
          card:
            - background-color: var(--card-green)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: var(--card-red)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite 
          name:
            - color: var(--icon-red)
  electricity_state:
    styles:
      card:
        - background-color: |
            [[[
              if (states["sensor.linky_verif_j1"].state == "false") return ''
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 6) return 'var(--card-green)';          
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 9) return 'var(--card-blue)';
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 12) return 'var(--card-yellow)'; 
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 15) return 'var(--card-orange)';
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state >= 15) return 'var(--card-red)';          
              else return 'var(--img-cell-red)';
            ]]]
      img_cell:
        - background-color: |
            [[[
              if (states["sensor.linky_verif_j1"].state == "false") return 'var(--img-cell-off)'
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 6) return 'var(--img-cell-green)';          
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 9) return 'var(--img-cell-blue)';
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 12) return 'var(--img-cell-yellow)'; 
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 15) return 'var(--img-cell-orange)';
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state >= 15) return 'var(--img-cell-red)';          
              else return 'var(--img-cell-red)';
            ]]]
      icon:
        - color: |
            [[[
              if (states["sensor.linky_verif_j1"].state == "false") return 'var(--icon-off)'
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 6) return 'var(--icon-green)';          
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 9) return 'var(--icon-blue)';
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 12) return 'var(--icon-yellow)'; 
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 15) return 'var(--icon-orange)';
              if (states["sensor.linky_093xxxxxxxx5420_consumption"].state >= 15) return 'var(--icon-red)';          
              else return 'var(--img-cell-red)';
            ]]]   
  air_state:
    styles:
      card:
        - background-color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--card-green)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--card-blue)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--card-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--card-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--card-red)'
              return ''
            ]]]            
      img_cell:
        - background-color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--img-cell-green)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--img-cell-blue)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--img-cell-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--img-cell-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--img-cell-red)'
              return 'var(--img-cell-off)'
            ]]] 
      icon:
        - color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--icon-green)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--icon-blue)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--icon-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--icon-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--icon-red)'
              return 'var(--icon-off)'
            ]]]   
  air_mini_card_state:
    styles:
      img_cell:
        - background-color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--img-cell-off)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--img-cell-off)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--img-cell-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--img-cell-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--img-cell-red)'
              return 'var(--img-cell-off)'
            ]]] 
      icon:
        - color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--icon-off)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--icon-off)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--icon-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--icon-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--icon-red)'
              return 'var(--icon-off)'
            ]]]              
  temperature_state:
    state:
      - value: 26.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          card:
            - background-color: var(--card-red)
      - value: 24.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--icon-yellow)
          img_cell:
            - background-color: var(--img-cell-yellow)
          card:
            - background-color: var(--card-yellow)
      - value: 18.2
        operator: <
        icon: mdi:thermometer-chevron-down
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  temperature_mini_card_state:
    state:
      - value: 26.9
        operator: '>'
        styles:
          state:
            - color: var(--red)
          icon:
            - color: var(--icon-red)
          img_cell:
            - background-color: var(--img-cell-red)
      - value: 24.9
        operator: '>'
        styles:
          state:
            - color: var(--orange)
          icon:
            - color: var(--icon-orange)
          img_cell:
            - background-color: var(--img-cell-orange)
      - value: 18.2
        operator: <
        styles:
          state:
            - color: var(--blue)
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
  outside_temperature_state:
    state:
      - value: 28
        operator: '>'
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          state:
            - font-weight: bold
      - value: 12
        operator: <
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          state:
            - font-weight: bold
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          img_cell:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  humidity_state:
    state:
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          card:
            - background-color: var(--card-red)
      - value: 40
        operator: <
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  humidity_mini_card_state:
    state:
      - value: 70
        operator: '>'
        styles:
          state:
            - color: var(--red)
          icon:
            - color: var(--icon-red)
          img_cell:
            - background-color: var(--img-cell-red)
      - value: 40
        operator: <
        styles:
          state:
            - color: var(--blue)
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          state:
            - color: var(--red)
  brightness_state:
    state:
      - value: 100
        operator: '>'
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          card:
            - background-color: var(--card-red)
      - value: 30
        operator: <
        icon: mdi:brightness-4
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  sub_button_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state > 0 || entity.state ==
          "home" || entity.state == "heat" || entity.state == "Run" ||
          entity.state == "armed_away" || entity.state == "playing" ||
          entity.state == "veille" || entity.state == "Wi-Fi"  || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course" ]]]
        styles:
          icon:
            - color: var(--icon-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Charging"  || entity.state == "unlocking" 
          || entity.state == "locking"   ]]]
        styles:
          icon:
            - color: var(--icon-yellow)
          card:
            - background-color: var(--card-yellow)
      - operator: template
        value: '[[[ return entity.state == "Full"    ]]]'
        styles:
          icon:
            - color: var(--icon-green)
          card:
            - background-color: var(--card-green)
      - operator: template
        value: >-
          [[[ return entity.state == "Charged"  || entity.state == "unlocked" 
          || entity.state == "Conduite" || entity.state == "Cellular"  ]]]
        styles:
          icon:
            - color: var(--icon-red)
          card:
            - background-color: var(--card-red)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
    tap_action:
      action: more-info
    double_tap_action:
      action: more-info
  mini_card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning"  ||
          entity.state == "playing"  || entity.state == "Wi-Fi" || entity.state
          > 0 || entity.state == "Mouvement" || entity.state == "Marche" ||
          entity.state == "Vélo"  || entity.state == "Course"]]]
        styles:
          img_cell:
            - background-color: var(--card-blue)
          icon:
            - color: var(--icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellular"  || entity.state == "Conduite"
          || entity.state == "not_home" ]]]
        styles:
          img_cell:
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "arming" ]]]
        styles:
          img_cell:
            - background-color: var(--card-yellow)
          icon:
            - color: var(--icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning"  ||
          entity.state == "playing"  || entity.state == "Wi-Fi" || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course"]]]
        styles:
          card:
            - background-color: var(--card-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          icon:
            - color: var(--icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellulaire" || entity.state == 0 ||
          entity.state == "Conduite" ]]]
        styles:
          card:
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: '[[[ return entity.state > 0  ]]]'
        styles:
          card:
            - background-color: var(--card-green)
          img_cell:
            - background-color: var(--img-cell-green)
          icon:
            - color: var(--icon-green)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "veille" ]]]
        styles:
          card:
            - background-color: var(--card-yellow)
          img_cell:
            - background-color: var(--img-cell-yellow)
          icon:
            - color: var(--icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  security_card_state:
    state:
      - operator: template
        value: >-
          [[[ entity.state == "arming"  || entity.state == "unlocking" ||
          entity.state == "locking" ]]]
        styles:
          card:
            - background-color: var(--card-yellow)
          img_cell:
            - background-color: var(--img-cell-yellow)
          icon:
            - color: var(--icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "armed_away" || entity.state == "armed_home" || 
          entity.state == "armed_night" || entity.state == "unlocked" ]]]
        styles:
          card:
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: '[[[ return entity.state == "pending" ]]]'
        styles:
          card:
            - background-color: var(--card-orange)
          img_cell:
            - background-color: var(--img-cell-orange)
          icon:
            - color: var(--icon-orange)
      - operator: template
        value: '[[[ return entity.state == "triggered" ]]]'
        styles:
          card:
            - background-color: var(--card-dark-red)
          img_cell:
            - background-color: var(--img-cell-dark-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  security_mini_card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "arming"  || entity.state == "unlocking" ||
          entity.state == "locking" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-green)
          icon:
            - color: var(--icon-green)
            - animation: blink 1s ease infinite
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "armed_away" || entity.state == "armed_home" || 
          entity.state == "armed_night" || entity.state == "unlocked" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: '[[[ return entity.state == "triggered" ]]]'
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
      - operator: template
        value: '[[[ return entity.state == "pending" ]]]'
        styles:
          img_cell:
            - background-color: var(--img-cell-orange)
          icon:
            - color: var(--icon-orange)
            - animation: blink 1s ease infinite
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  person_gps_button:
    show_icon: false
    show_label: true
    template:
      - police
    styles:
      name:
        - color: var(--text-off)
        - font-size: 11px
      label:
        - font-weight: 500
        - font-size: 12px
        - margin-top: '-3px'
      img_cell:
        - justify-self: end
        - background: none
      card:
        - padding: 0px
        - border-radius: 10px
  person_complete_card:
    entity: '[[[  return variables.entity ]]]'
    template:
      - police
    icon: |
      [[[ 
        var f_n_zone = states[entity.entity_id].state;

        // Supprime les accents
        var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
        c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
        d="";
        for(var i = 0, j = f_n_zone.length; i < j; i++) {
          var e = f_n_zone.substr(i, 1);
          d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
        }
        // Remplace " - " par "_"
        var id_zone = d.replaceAll(' - ', '_');
        // Remplace les espaces restants par "_"
        id_zone = id_zone.replaceAll(' ', '_');
        // Transforme le texte en minuscule 
        id_zone = id_zone.toLowerCase();

        if(states["zone." + id_zone] == undefined){
          return "mdi:home-export-outline"; 
        } else {
          return states["zone." + id_zone].attributes.icon; 
        }
      ]]]
    show_entity_picture: false
    show_name: false
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"info" "sensor" "gps" "map" "device"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content min-content 70px
      card:
        - padding: 10px
        - position: relative
        - '--mdc-ripple-press-opacity': 0
        - background-color: var(--card-background-color)
        - box-shadow: none
      img_cell:
        - position: absolute
      icon:
        - width: 30%
        - top: '-35%'
        - opacity: 0.4
        - filter: blur(7px)
        - color: |
            [[[
              if (states[entity.entity_id].state == 'home')
                return "var(--ocean-blue)"
              if (states[entity.entity_id].state == 'not_home')
                return "var(--icon-orange)" 
              return "var(--icon-green)"                 
            ]]] 
      custom_fields:
        battery:
          - position: absolute
          - width: 40%
          - left: 72%
          - top: '-01%'
          - z-index: 1
    custom_fields:
      battery:
        card:
          type: custom:hatc-gauge-card
          card_mod:
            style: |
              ha-card { 
               background: none;
               box-shadow: none;
               }             
          entity: '[[[ return variables.battery_level ]]]'
          card:
            height: 35px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 12px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--red)
                from: 0
                to: 30
              - color: var(--orange)
                from: 31
                to: 50
              - color: var(--text-off)
                from: 51
                to: 100
      info:
        card:
          type: custom:button-card
          entity: '[[[  return variables.entity ]]]'
          show_entity_picture: true
          entity_picture: null
          name: |
            [[[ return entity.attributes.friendly_name 
            ]]]
          label: '[[[  return variables.state ]]]'
          show_label: true
          show_icon: true
          custom_fields:
            info: '[[[ return variables.time ]]]'
          styles:
            grid:
              - grid-template-areas: '"i gutter n" "i gutter l" "i gutter info"'
              - grid-template-columns: min-content 15px 1fr
              - grid-template-rows: min-content auto
            card:
              - background: none
              - box-shadow: none
              - border-radius: 0
              - padding: 0px 35px 25px 8px
              - '--mdc-ripple-press-opacity': 0
            img_cell:
              - width: 65px
              - height: 65px
              - border-radius: 15px
            icon:
              - width: 100%
              - height: 100%
              - color: var(--dark-blue)
            name:
              - font-size: 13px
              - opacity: 1
              - font-weight: 500
              - color: var(--text-on)
              - width: 100%
              - text-align: left
              - align-self: end
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            label:
              - white-space: normal
              - font-size: 13px
              - font-weight: 600
              - color: |
                  [[[
                    if (states[entity.entity_id].state == 'home')
                      return "var(--ocean-blue)"
                    if (states[entity.entity_id].state == 'not_home')
                      return "var(--text-on)" 
                    return "var(--icon-green)"                 
                  ]]] 
              - opacity: 1
              - width: 100%
              - text-align: left
              - align-self: center
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            custom_fields:
              info:
                - white-space: normal
                - font-weight: 500
                - color: var(--text-on)
                - font-size: 11px
                - opacity: 1
                - font-style: italic
                - width: 90%
                - text-align: left
                - align-self: start
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.4))
                - max-height: 35px
      sensor:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              tap_action:
                action: more-info
                entity: '[[[  return variables.gps ]]]'
              entity: '[[[  return variables.entity ]]]'
              template:
                - mini_card
                - mini_card_state
              show_label: false
              icon: |
                [[[ 
                  var f_n_zone = states[entity.entity_id].state;

                  // Supprime les accents
                  var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
                  c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
                  d="";
                  for(var i = 0, j = f_n_zone.length; i < j; i++) {
                    var e = f_n_zone.substr(i, 1);
                    d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
                  }
                  // Remplace " - " par "_"
                  var id_zone = d.replaceAll(' - ', '_');
                  // Remplace les espaces restants par "_"
                  id_zone = id_zone.replaceAll(' ', '_');
                  // Transforme le texte en minuscule 
                  id_zone = id_zone.toLowerCase();

                  if(states["zone." + id_zone] == undefined){
                    return "mdi:home-export-outline"; 
                  } else {
                    return states["zone." + id_zone].attributes.icon; 
                  }
                ]]]
              styles:
                icon:
                  - color: |
                      [[[
                        if (states[entity.entity_id].state == 'home')
                          return "var(--ocean-blue)"
                        if (states[entity.entity_id].state == 'not_home')
                          return "var(--icon-orange)" 
                        return "var(--icon-green)"                 
                      ]]] 
                img_cell:
                  - background-color: |
                      [[[
                        if (states[entity.entity_id].state == 'home')
                          return "var(--img-cell-blue)"
                        if (states[entity.entity_id].state == 'not_home')
                          return "var(--img-cell-orange)" 
                        return "var(--img-cell-green)"                 
                      ]]]                       
            - type: custom:button-card
              template:
                - mini_card
                - mini_card_state
              show_label: false
              entity: '[[[ return variables.battery_state]]]'
              icon: mdi:battery-charging-medium
              state:
                - value: Charging
                  styles:
                    icon:
                      - color: var(--red)
                    img_cell:
                      - background-color: var(--img-cell-red)
                - value: Charged
                  styles:
                    icon:
                      - color: var(--orange)
                    img_cell:
                      - background-color: var(--img-cell-orange)
                - value: Full
                  styles:
                    icon:
                      - color: var(--green)
                    img_cell:
                      - background-color: var(--img-cell-green)
            - type: custom:button-card
              template:
                - mini_card
                - mini_card_state
              show_label: false
              entity: '[[[ return variables.phone_tracker ]]]'
              icon: mdi:cellphone
      gps:
        card:
          type: custom:button-card
          template:
            - person_gps_button
          label: >-
            [[[  return  variables.proximity + " - " + variables.trajet + " min"
            ]]]
          name: '[[[  return "Trajet vers le " + variables.destination  ]]]'
          tap_action:
            action: more-info
          styles:
            card:
              - background-color: rgba(var(--black-rgb),var(--tint2))
      map:
        card:
          type: map
          entities:
            - entity: '[[[  return variables.entity ]]]'
          dark_mode: true
          aspect_ratio: '2'
          hours_to_show: 24
  person_card:
    show_entity_picture: true
    show_state: false
    template:
      - base
      - base_high
      - person_state
    styles:
      entity_picture:
        - width: 100%
      custom_fields:
        notification:
          - border-radius: 100%
          - position: absolute
          - left: 32px
          - top: 4%
          - width: 17.5px
          - height: 17.5px
          - line-height: 14px
          - background-color: |
              [[[
                if (entity.state == 'home') 
                  return "var(--img-cell-blue)"
                if (entity.state == 'not_home') 
                  return "var(--img-cell-orange)"
                return "var(--img-cell-green)"
              ]]]
    custom_fields:
      notification: |
        [[[
              var f_n_zone = states[entity.entity_id].state;

              // supprime les accents
              var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
              c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
              d="";
              for(var i = 0, j = f_n_zone.length; i < j; i++) {
                var e = f_n_zone.substr(i, 1);
                d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
              }
              // remplace " - " par "_"
              var id_zone = d.replaceAll(' - ', '_');
              // remplace les espaces restants par "_"
              id_zone = id_zone.replaceAll(' ', '_');
              // transforme le texte en minuscule 
              id_zone = id_zone.toLowerCase();

              if(states["zone." + id_zone] == undefined){
                return `<ha-icon icon="mdi:home-export-outline" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }else{
                return `<ha-icon icon="${states["zone." + id_zone].attributes.icon}" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }
            ]]]
    tap_action:
      action: navigate
      navigation_path: /lovelace/Personnes
    double_tap_action:
      action: more-info
  person_card_var_activity:
    icon: |
      [[[
        if (variables.var_activity == 'Mouvement')
          return "mdi:human-handsdown"
        if (variables.var_activity == 'Stationnaire')
          return "mdi:human-male"
        if (variables.var_activity == 'Conduite')
          return "mdi:car"
        if (variables.var_activity == 'Marche')
          return "mdi:walk"
        if (variables.var_activity == 'Course')
          return "mdi:run-fast"
        if (variables.var_activity == 'Vélo')
          return "mdi:bike"
        return ""
      ]]]
  person_card_var_device:
    styles:
      card:
        - border: |
            [[[
              if (variables.var_state  == "Charging")
                return " 1px dashed var(--yellow) " 
              if (variables.var_state  == "Full" || variables.var_state  == "Charged")
                return " 1px solid var(--blue) "  
              if (variables.var_level < 31 && (variables.var_state == "Not Charging" || variables.var_state  == "NotCharging"))
                return " 1px solid var(--red) "                  
              return ""
            ]]] 
    tap_action:
      action: navigate
      navigation_path: /lovelace/batteries
  person_card_aurel:
    entity: person.herve
    template:
      - person_card
    label: |
      [[[return states["sensor.aurel_gps_simple"].state]]]
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.iphone_aurel_battery_level
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--blue)
                from: 99
                to: 51
              - color: var(--yellow)
                from: 31
                to: 50
              - color: var(--red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.iphone_aurel
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.iphone_aurel_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.iphone_aurel_battery_level'].state 
                  ]]]
              icon: mdi:cellphone
            - type: custom:button-card
              entity: sensor.aurel_activite
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.aurel_activite'].state 
                  ]]]
              template:
                - sub_button
                - sub_button_state
                - person_card_var_activity
            - type: custom:button-card
              entity: device_tracker.aurel_mac_ping
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.macbook_aurel_internal_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.macbook_aurel_internal_battery_level'].state 
                  ]]] 
                var_ping: |
                  [[[ 
                    return states['device_tracker.aurel_mac_ping'].state 
                  ]]]
              icon: mdi:laptop
            - type: custom:button-card
              entity: device_tracker.aurel_ipad_ping
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.aurel_ipad_batterie_apple'].attributes.battery_status 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.aurel_ipad_batterie_apple'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.aurel_ipad_ping'].state 
                  ]]]
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
  person_card_alex:
    entity: person.alex
    label: |
      [[[return states["sensor.alex_gps_simple"].state]]]
    template:
      - person_card
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.iphone_alex_battery_level
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--blue)
                from: 99
                to: 51
              - color: var(--yellow)
                from: 31
                to: 50
              - color: var(--red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.iphone_alex
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.iphone_alex_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.iphone_alex_battery_level'].state 
                  ]]]
              icon: mdi:cellphone
            - type: custom:button-card
              entity: sensor.alex_activite
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.alex_activite'].state 
                  ]]]
              template:
                - sub_button
                - sub_button_state
                - person_card_var_activity
            - type: custom:button-card
              entity: device_tracker.macbook_alex
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.macbook_alex_internal_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.macbook_alex_internal_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.macbook_alex'].state 
                  ]]]
              icon: mdi:laptop
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
            - type: custom:button-card
              entity: device_tracker.liseuse_alex
              icon: |
                [[[
                  if (states['device_tracker.liseuse_alex'].state == "home")
                    return 'mdi:book-open'
                  if (states['device_tracker.liseuse_alex'].state == "not_home")
                    return 'mdi:book-open'
                ]]]
              template:
                - sub_button
                - sub_button_state
  person_card_tom:
    entity: person.tom
    label: |
      [[[return states["sensor.tom_gps"].state]]]
    template:
      - person_card
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.iphone_tom_batterie_apple
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--blue)
                from: 99
                to: 51
              - color: var(--yellow)
                from: 31
                to: 50
              - color: var(--red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.iphone_tom_box
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.iphone_tom_box'].state 
                  ]]]             
                var_state: |
                  [[[ 
                    return states['sensor.iphone_tom_batterie_apple'].attributes.battery_status 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.iphone_tom_batterie_apple'].state 
                  ]]]                  
              icon: mdi:cellphone
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
            - type: custom:button-card
              entity: device_tracker.macbook_air_de_tom
              icon: mdi:laptop
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: switch.trottinette
              icon: mdi:scooter
              template:
                - sub_button
                - sub_button_state
              styles:
                card:
                  - border: |
                      [[[
                        if (states['switch.trottinette'].state == "on" &&  (states['sensor.trottinette_active_power'].state != 0 && states['sensor.trottinette_rms_current'].state != 0) )
                          return " 1px dashed var(--icon-yellow) "    
                        if (states['switch.trottinette'].state == "on" &&  (states['sensor.trottinette_active_power'].state == 0 && states['sensor.trottinette_rms_current'].state == 0) )
                          return " 1px dashed var(--icon-red) "                            
                        return ""
                      ]]]                       
  person_card_manon:
    entity: person.manon
    label: |
      [[[return states["sensor.manon_gps"].state]]]
    template:
      - person_card
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.iphone_manon_batterie_apple
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--blue)
                from: 99
                to: 51
              - color: var(--yellow)
                from: 31
                to: 50
              - color: var(--red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.iphone_manon
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.iphone_manon'].state 
                  ]]]
                var_state: |
                  [[[ 
                    return states['sensor.iphone_manon_batterie_apple'].attributes.battery_status 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.iphone_manon_batterie_apple'].state 
                  ]]]                  
              icon: mdi:cellphone
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
            - type: custom:button-card
              entity: device_tracker.tablette_manon
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
  person_card_leane:
    entity: person.leane
    label: |
      [[[
        if (states['device_tracker.leane_tab_ping'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - person_card
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.leane_tab_ping
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
  person_card_nina:
    entity: person.nina
    label: |
      [[[
        if (states['device_tracker.tab_nina'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - person_card
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.tab_nina
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
  vacuum_header:
    entity: '[[[  return variables.entity ]]]'
    aspect_ratio: 2/1
    template:
      - police
    icon: phu:roborock
    show_entity_picture: true
    entity_picture: '[[[  return variables.picture ]]]'
    show_name: false
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"info"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content min-content
      card:
        - padding: 0px
        - position: relative
        - '--mdc-ripple-press-opacity': 0
      img_cell:
        - position: absolute
      icon:
        - width: 120%
        - opacity: 0.4
        - filter: blur(6px)
        - color: var(--ocean-blue)
      custom_fields:
        commands:
          - position: absolute
          - width: 90%
          - left: 05%
          - top: 50%
        battery:
          - position: absolute
          - width: 100%
          - left: 40%
          - top: 1%
        options:
          - position: absolute
          - width: 90%
          - left: 5%
          - top: 79%
    custom_fields:
      battery:
        card:
          type: custom:hatc-gauge-card
          card_mod:
            style: |
              ha-card { 
               background: none;
               box-shadow: none;
               }             
          entity: '[[[ return variables.battery ]]]'
          card:
            height: 40px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 14px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--red)
                from: 0
                to: 30
              - color: var(--orange)
                from: 31
                to: 50
              - color: var(--blue)
                from: 51
                to: 98
              - color: var(--text-off)
                from: 99
                to: 100
      info:
        card:
          type: custom:button-card
          entity: '[[[  return variables.entity ]]]'
          show_entity_picture: true
          entity_picture: '[[[  return variables.picture ]]]'
          name: |
            [[[ return entity.attributes.friendly_name 
            ]]]
          label: '[[[  return variables.state ]]]'
          show_label: true
          show_icon: true
          icon: phu:roborock
          custom_fields:
            info: '[[[ return variables.error ]]]'
          styles:
            grid:
              - grid-template-areas: '"i gutter n" "i gutter l" "i gutter info"'
              - grid-template-columns: min-content 15px 1fr
              - grid-template-rows: min-content 18px
            card:
              - background: none
              - box-shadow: none
              - border-radius: 0
              - padding: 10px 15px
              - '--mdc-ripple-press-opacity': 0
            img_cell:
              - width: 65px
              - height: 65px
              - border-radius: 12px
            icon:
              - width: 240%
              - height: 140%
              - color: var(--dark-blue)
            name:
              - font-size: 15px
              - opacity: 1
              - font-weight: 500
              - color: var(--text-on)
              - width: 100%
              - text-align: left
              - align-self: end
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            label:
              - font-size: 15px
              - font-weight: 600
              - color: |
                  [[[
                    if (variables.state == "Nettoyage")
                      return 'var(--text-on)';
                    if (variables.state == "Base")  
                     return "var(--text-off)"                    
                    return "var(--red)"
                  ]]]               
              - opacity: 1
              - width: 90%
              - width: 100%
              - text-align: left
              - align-self: center
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            custom_fields:
              info:
                - white-space: normal
                - font-weight: 500
                - color: var(--red)
                - font-size: 13px
                - opacity: 1
                - font-style: italic
                - width: 90%
                - text-align: left
                - align-self: start
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.4))
                - max-height: 35px
      commands:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: |
                [[[
                  if (variables.state == "Nettoyage")
                    return 'phu:roborock';
                  return "mdi:play"
                ]]]              
              template:
                - media_controls
              tap_action:
                action: call-service
                service: vacuum.start
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.state == "Nettoyage")
                          return 'var(--blue)';
                        return "rgba(var(--white-rgb),1)"
                      ]]]
                  - animation: |
                      [[[
                        if (variables.state == "Nettoyage")
                          return 'rotating 3s ease infinite';
                        return ""
                      ]]]                 
                                       
                img_cell:
                  - background-color: |
                      [[[
                        if (variables.state == "Nettoyage")
                          return 'var(--img-cell-blue)';
                        return "transparent"
                      ]]]                      
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:pause
              template:
                - media_controls
              tap_action:
                action: call-service
                service: vacuum.pause
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.state == "Pause")
                          return 'var(--icon-red)';
                        return "rgba(var(--white-rgb),1)"
                      ]]]
                img_cell:
                  - background-color: |
                      [[[
                        if (variables.state == "Pause")
                          return 'var(--img-cell-red)';
                        return "transparent"
                      ]]]                       
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: |
                [[[
                  if (variables.fan_speed == "Standard")
                    return 'mdi:fan-speed-1';
                  return "mdi:fan-speed-3";
                ]]]              
              template:
                - media_controls
              tap_action:
                action: call-service
                service: vacuum.set_fan_speed
                service_data:
                  fan_speed: Standard
                  entity_id: '[[[  return variables.entity ]]]'
              double_tap_action:
                action: call-service
                service: vacuum.set_fan_speed
                service_data:
                  fan_speed: Turbo
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.fan_speed != "Standard")
                          return 'var(--icon-orange)';
                        return "rgba(var(--white-rgb),1)"
                      ]]]
                img_cell:
                  - background-color: |
                      [[[
                        if (variables.fan_speed != "Standard")
                          return 'var(--img-cell-orange)';
                        return "transparent"
                      ]]]                       
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:map-marker
              template:
                - media_controls
              tap_action:
                confirmation:
                  text: '[[[ return `Localiser le robot ?` ]]]'
                action: call-service
                service: vacuum.locate
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: rgba(var(--white-rgb),1)
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:battery-charging-outline
              template:
                - media_controls
              tap_action:
                action: call-service
                service: vacuum.return_to_base
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.state == "Base"  && entity.attributes.battery_level != 100 )
                          return 'var(--yellow)';
                        if (variables.state == "Base"  && entity.attributes.battery_level == 100 )
                          return 'var(--blue)';                          
                        return "rgba(var(--white-rgb),1)"                        
                      ]]]
                img_cell:
                  - background-color: |
                      [[[
                        if (variables.state == "Base"  && entity.attributes.battery_level != 100 )
                          return 'var(--img-cell-yellow)';
                        if (variables.state == "Base"  && entity.attributes.battery_level == 100 )
                          return 'var(--img-cell-blue)';                          
                        return "transparent"                        
                      ]]]                      
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:reload
              template:
                - media_controls
              tap_action:
                action: call-service
                service: homeassistant.update_entity
                service_data:
                  entity_id: '[[[  return variables.camera ]]]'
              styles:
                icon:
                  - color: rgba(var(--white-rgb),1)
      options:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              template:
                - vacuum_header_options
              label: '[[[  return variables.hours_main_brush + " h"]]]'
              name: Brosse
              icon: mdi:vacuum-outline
              tap_action:
                action: call-service
                haptic: medium
                service: '[[[  return variables.script_main_brush ]]]'
              confirmation:
                text: >-
                  Réinitialiser les heures d'utilisation de la brosse principale
                  ?
              styles:
                card:
                  - background-color: |
                      [[[ 
                        if (variables.hours_main_brush <= 10)
                          return "var(--img-cell-red)"
                        return "rgba(var(--black-rgb),var(--tint2))"
                      ]]] 
            - type: custom:button-card
              template:
                - vacuum_header_options
              label: '[[[  return variables.hours_side_brush + " h"]]]'
              name: Brossette
              icon: mdi:broom
              tap_action:
                action: call-service
                haptic: medium
                service: '[[[  return variables.script_side_brush ]]]'
              confirmation:
                text: Réinitialiser les heures d'utilisation de la brosse latérale ?
              styles:
                card:
                  - background-color: |
                      [[[ 
                        if (variables.hours_side_brush <= 5)
                          return "var(--img-cell-red)"
                        return "rgba(var(--black-rgb),var(--tint2))"
                      ]]]                     
            - type: custom:button-card
              template:
                - vacuum_header_options
              label: '[[[  return variables.hours_sensor_dirty + " h"]]]'
              name: Capteurs
              icon: mdi:laser-pointer
              tap_action:
                action: call-service
                haptic: medium
                service: '[[[  return variables.script_sensor_dirty ]]]'
              confirmation:
                text: Réinitialiser les heures d'utilisation des capteurs ?
              styles:
                card:
                  - background-color: |
                      [[[ 
                        if (variables.hours_sensor_dirty <= 5)
                          return "var(--img-cell-red)"
                        return "rgba(var(--black-rgb),var(--tint2))"
                      ]]]                 
            - type: custom:button-card
              template:
                - vacuum_header_options
              label: '[[[  return variables.hours_filter +" h" ]]]'
              name: Filtre
              icon: mdi:air-filter
              tap_action:
                action: call-service
                haptic: medium
                service: '[[[  return variables.script_filter ]]]'
              confirmation:
                text: Réinitialiser les heures d'utilisation du filte ?
              styles:
                card:
                  - background-color: |
                      [[[ 
                        if (variables.hours_filter <= 5)
                          return "var(--img-cell-red)"
                        return "rgba(var(--black-rgb),var(--tint2))"
                      ]]]                       
  vacuum_header_options:
    show_icon: false
    show_label: true
    template:
      - police
    styles:
      name:
        - color: var(--text-off)
        - font-size: 11px
      label:
        - font-weight: 500
        - font-size: 12px
        - margin-top: '-3px'
      img_cell:
        - justify-self: end
        - background: none
      card:
        - padding: 0px
        - border-radius: 10px
  vacuum_card:
    entity: '[[[ return variables.entity ]]]'
    icon: phu:roborock
    show_state: false
    show_label: true
    template:
      - base
      - base_high
      - card_state
    label: '[[[ return variables.state ]]]'
    styles:
      icon:
        - animation: |
            [[[
              if (variables.state == 'cleaning')
              return 'rotating 4s ease infinite'
            ]]]
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: '[[[ return variables.battery ]]]'
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: rgb(180, 70, 70)
                from: 0
                to: 40
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:play
              template:
                - sub_button
              tap_action:
                action: call-service
                service: vacuum.start
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.state == "Nettoyage")
                          return 'var(--icon-blue)';
                        return "var(--icon-off)"
                      ]]]
                card:
                  - background-color: |
                      [[[
                        if (variables.state == "Nettoyage")
                          return 'var(--card-blue)';
                        return ""
                      ]]] 
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:pause
              template:
                - sub_button
              tap_action:
                action: call-service
                service: vacuum.pause
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.state == "Pause")
                          return 'var(--icon-red)';
                        return "var(--icon-off)"
                      ]]]
                card:
                  - background-color: |
                      [[[
                        if (variables.state == "Pause")
                          return 'var(--card-red)';
                        return ""
                      ]]]                   
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:map-marker
              template:
                - sub_button
              tap_action:
                confirmation:
                  text: '[[[ return `Localiser ?` ]]]'
                action: call-service
                service: vacuum.locate
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
            - type: custom:button-card
              entity: '[[[  return variables.entity ]]]'
              icon: mdi:home
              template:
                - sub_button
              tap_action:
                action: call-service
                service: vacuum.return_to_base
                service_data:
                  entity_id: '[[[  return variables.entity ]]]'
              styles:
                icon:
                  - color: |
                      [[[
                        if (variables.state == "Base")
                          return 'var(--icon-blue)';
                        return "var(--icon-off)"
                      ]]]
                card:
                  - background-color: |
                      [[[
                        if (variables.state == "Base")
                          return 'var(--card-blue)';
                        return ""
                      ]]]                  
    tap_action:
      action: navigate
      navigation_path: /lovelace/Aspis
  walle_card:
    template:
      - vacuum_card
    variables:
      entity: vacuum.wall_e
      state: '[[[ return states[''sensor.walle_state''].state ]]]'
      battery: sensor.walle_batterie
  r2d2_card:
    template:
      - vacuum_card
    variables:
      entity: vacuum.r2d2
      state: '[[[ return states[''sensor.r2d2_state''].state ]]]'
      battery: sensor.r2d2_batterie
  dishwasher_card:
    entity: switch.lave_vaisselle_power
    name: Vaisselle
    icon: mdi:dishwasher
    show_label: true
    template:
      - base
      - base_high
      - card_state
    label: |
      [[[
        if (states['switch.lave_vaisselle_power'].state == "on" && states['switch.lave_vaisselle_program_machinecare'].state == "on")
          return "Entretien"+"<br>"+states['sensor.lave_vaisselle'].state
        if (states['switch.lave_vaisselle_power'].state == "on" && states['switch.lave_vaisselle_program_machinecare'].state == "off")
          return states['sensor.lave_vaisselle'].state
        if (states['switch.lave_vaisselle_power'].state == "off")
          return "Éteint "
        return states['sensor.lave_vaisselle'].state 
      ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      gauge:
        card:
          type: conditional
          conditions:
            - condition: state
              entity: switch.lave_vaisselle_power
              state: 'on'
            - condition: state
              entity: sensor.lave_vaisselle_program_progress
              state_not: unavailable
          card:
            type: custom:button-card
            variables:
              entity: sensor.lave_vaisselle_program_progress
            name: |
              [[[ return " " ]]]
            template:
              - sensor_level_card
            custom_fields:
              barre:
                card:
                  severity:
                    - color: var(--img-cell-red)
                      from: 0
                      to: 20
                    - color: var(--img-cell-orange)
                      from: 20.1
                      to: 80
                    - color: var(--img-cell-blue)
                      from: 80.1
                      to: 100
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: switch.lave_vaisselle_power
              icon: mdi:power
              template:
                - sub_button
                - sub_button_state
              tap_action:
                confirmation:
                  text: >-
                    [[[ return `${entity.attributes.friendly_name} : confirmer
                    la bascule ON / OFF ?` ]]]
            - type: custom:button-card
              entity: switch.lave_vaisselle_program_auto2
              icon: mdi:flag-checkered
              template:
                - sub_button
                - sub_button_state
              tap_action:
                confirmation:
                  text: >-
                    [[[ return `${entity.attributes.friendly_name} : confirmer
                    la bascule du programme ?` ]]]
            - type: custom:button-card
              entity: binary_sensor.lave_vaisselle_door
              template:
                - sub_button
                - sub_button_state
              tap_action:
                action: more-info
    styles:
      custom_fields:
        gauge:
          - top: 42%
          - left: 0%
          - width: 100%
          - position: absolute
  washing_machine_card:
    entity: input_select.lave_linge
    name: Lave-linge
    icon: mdi:washing-machine
    template:
      - base
      - base_high
      - card_state
    label: |
      [[[
        if (states['input_select.lave_linge'].state == "off")
          return "Éteint"
        return "Depuis "+ states['sensor.lave_linge_duree'].state
      ]]]
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: input_select.lave_linge
              icon: mdi:play
              template:
                - sub_button
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "on" )
                          return "var(--card-blue)";
                        return "";
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "on" )
                          return "var(--icon-blue)";
                        return "var(--icon-off)";
                      ]]]                  
              tap_action:
                action: more-info
            - type: custom:button-card
              entity: input_select.lave_linge
              icon: mdi:pause
              template:
                - sub_button
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "veille" )
                          return "var(--card-red)";
                        return "";
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "veille" )
                          return "var(--icon-red)";
                        return "var(--icon-off)";
                      ]]]                  
              tap_action:
                action: more-info
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  printer_card:
    type: custom:button-card
    entity: input_boolean.imprimante
    name: Imprimante
    icon: mdi:printer
    label: |
      [[[
        if (states['sensor.canon_g5000_series'].state == "unavailable")
          return "Éteint"
        if (states['sensor.canon_g5000_series'].state == "printing")
          return "Impression"
        if (states['sensor.canon_g5000_series'].state == "stopped")
          return "Arrêt"
        if (states['sensor.canon_g5000_series'].state == "idle")
          return "Veille"
        return states['sensor.canon_g5000_series'].state
      ]]]
    template:
      - base
      - base_high
      - card_state
    custom_fields:
      printer_bar_black:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Black
            entities:
              - entity: sensor.canon_g5000_series_black_pgbk
                color: rgb(29, 28, 26)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 50px
            width: 20%
            icon: 'off'
            card_mod:
              style: |-
                bar-card-value {
                  margin-left: 40px;
                  font-size: 12px;
                  font-weight: bold;
                  color: var(--text-off);
                }
      printer_bar_cyan:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Cyan
            entities:
              - entity: sensor.canon_g5000_series_cyan
                color: rgb(0,206,209)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 50px
            width: 20%
            icon: 'off'
            card_mod:
              style: |-
                bar-card-value {
                  margin-left: 40px;
                  font-size: 12px;
                  font-weight: bold;
                  color: var(--text-off);
                  filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7));
                }
      printer_bar_magenta:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Magenta
            entities:
              - entity: sensor.canon_g5000_series_magenta
                color: rgb(244,154,194)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 50px
            width: 20%
            icon: 'off'
            card_mod:
              style: |-
                bar-card-value {
                  margin-left: 40px;
                  font-size: 12px;
                  font-weight: bold;
                  color: var(--text-off);
                  filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7));
                }
      printer_bar_yellow:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Yellow
            entities:
              - entity: sensor.canon_g5000_series_yellow
                color: rgb(253,253,150)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 50px
            width: 20%
            icon: 'off'
            card_mod:
              style: |-
                bar-card-value {
                  margin-left: 40px;
                  font-size: 12px;
                  font-weight: bold;
                  color: var(--text-off);
                  filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7))
                }              
    styles:
      custom_fields:
        printer_bar_black:
          - opacity: 100%
          - position: absolute
          - top: 82%
          - left: 6%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_cyan:
          - opacity: 100%
          - position: absolute
          - top: 82%
          - left: 28%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_magenta:
          - opacity: 100%
          - position: absolute
          - top: 82%
          - left: 50%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_yellow:
          - opacity: 100%
          - position: absolute
          - top: 82%
          - left: 72%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  tv_card:
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    label: |
      [[[
        if ( variables.entity_state  == 'on')
          return variables.source
        if ( variables.entity_state  == 'off')
            return 'Éteint'
        return ''
      ]]]
    icon: |
      [[[
        if( variables.entity_state == "off")
              return "mdi:television"
        if( variables.source == "YouTube")
              return "mdi:youtube"          
        if( variables.source == "Netflix")
              return "phu:netflix"
        if( variables.source == "Plex")
              return "mdi:plex"
        if( variables.source == "Prime Video")
              return "phu:amazon-logo"
        if( variables.source == "Apple TV")
              return "mdi:apple"  
        if( variables.source == "Menu")
              return "mdi:apple"               
        if( variables.source == "Disque Dur")
              return "mdi:movie-open"           
        if( variables.source == "Wii")
              return "mdi:nintendo-wii"
        if( variables.source == "Switch")
              return "mdi:nintendo-switch"

        return "mdi:television"
      ]]]
    entity_picture: |
      [[[ 
         if ( variables.source  == 'YouTube' ) 
           return '/local/TV/youtube.png'  
         if ( variables.source  == 'Prime Video' ) 
           return '/local/TV/amazon-video.png'  
         if ( variables.source  == 'Plex' ) 
           return '/local/TV/plex.png'  
         if ( variables.source  == 'Netflix' ) 
           return '/local/TV/netflix.png'  
         if ( variables.source  == 'Molotov' ) 
           return '/local/TV/molotov.png'            
          return ''
      ]]] 
    aspect_ratio: 1/1
    show_entity_picture: true
    template:
      - base
      - card_state
    styles:
      card:
        - z-index: 1
      name:
        - z-index: 1
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
      label:
        - z-index: 1
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
        - color: |
            [[[
              if ( variables.entity_state  == 'on')
                return "var(--text-on)"
              if ( variables.entity_state  == 'off')
                  return 'var(--text-off)'
            ]]]      
      icon:
        - z-index: 1
      img_cell:
        - z-index: 1
      entity_picture:
        - border-radius: 100%
        - width: 100%
      custom_fields:
        programme:
          - color: var(--text-on)
          - top: 33%
          - left: 8%
          - font-weight: 500
          - font-size: 13px
          - font-style: null
          - position: absolute
          - text-transform: capitalize
          - text-align: left
          - max-height: 70px
          - line-height: 14px
          - padding-right: 15px
          - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
          - z-index: 4
          - white-space: normal
        bouton:
          - top: 83%
          - z-index: 8
        image:
          - top: 0%
          - left: 0%
          - width: 100%
          - border-radius: 0%
          - position: absolute
          - z-index: 0
        icon:
          - top: 0%
          - left: 0%
          - width: 100%
          - border-radius: 0%
          - position: absolute
          - z-index: 0
    custom_fields:
      programme: '[[[ return variables.programme ]]]'
      jauge-cercle:
        card:
          type: conditional
          conditions:
            - entity: '[[[ return variables.entity ]]]'
              state: 'on'
          card:
            type: custom:hatc-gauge-card
            entity: '[[[ return variables.volume ]]]'
            card:
              height: 35px
            title:
              name: false
              icon: false
              text-align: center
              text-color: red
              font-size: 28px
            gauge:
              icon: false
              font-size: 11px
              text-color: white
              max_value: 100
              friendly_name: false
              unit_of_measurement: false
              severity:
                - color: var(--text-off)
                - color: rgb(180, 70, 70)
                  from: 50
                  to: 100
      image:
        card:
          square: false
          type: grid
          columns: 1
          cards:
            - type: conditional
              conditions:
                - entity: '[[[ return variables.entity_apple_tv ]]]'
                  state: playing
              card:
                type: custom:button-card
                entity: '[[[ return variables.entity_apple_tv ]]]'
                aspect_ratio: 1/1
                show_icon: false
                show_name: false
                show_entity_picture: true
                styles:
                  card:
                    - border-radius: 0%
                    - padding: 0%
                  entity_picture:
                    - width: 100%
                    - position: center
                    - opacity: 60%
                    - filter: blur(0px)
      icon:
        card:
          square: false
          type: grid
          columns: 1
          cards:
            - type: conditional
              conditions:
                - entity: '[[[ return variables.entity ]]]'
                  state: 'off'
              card:
                type: custom:button-card
                entity: '[[[ return variables.entity]]]'
                aspect_ratio: 1/1
                show_icon: true
                show_name: false
                icon: mdi:television
                template:
                  - no_style
                styles:
                  card:
                    - border-radius: 0%
                    - padding: 0%
                    - background: none
                  icon:
                    - width: 70%
                    - opacity: 90%
                    - filter: blur(7px)
                    - color: var(--img-cell-off)
            - type: conditional
              conditions:
                - entity: '[[[ return variables.entity_source ]]]'
                  state: Live TV
              card:
                type: custom:button-card
                entity: '[[[ return variables.entity]]]'
                aspect_ratio: 1/1
                show_icon: true
                show_name: false
                icon: mdi:play
                template:
                  - no_style
                styles:
                  card:
                    - border-radius: 0%
                    - padding: 0%
                    - background: none
                  icon:
                    - width: 70%
                    - opacity: 90%
                    - filter: blur(7px)
                    - color: var(--img-cell-off)
            - type: conditional
              conditions:
                - entity: '[[[ return variables.entity_source ]]]'
                  state: Wii
              card:
                type: custom:button-card
                entity: '[[[ return variables.entity]]]'
                aspect_ratio: 1/1
                show_icon: true
                show_name: false
                icon: mdi:nintendo-wii
                template:
                  - no_style
                styles:
                  card:
                    - border-radius: 0%
                    - padding: 0%
                    - background: none
                  icon:
                    - width: 70%
                    - opacity: 90%
                    - filter: blur(7px)
                    - color: var(--img-cell-off)
  tv_sejour_card:
    template:
      - tv_card
    variables:
      entity: media_player.tv_salon
      entity_state: '[[[ return states[''media_player.tv_salon''].state ]]]'
      name: Salon
      entity_apple_tv: media_player.apple_tv_sejour
      apple_tv: '[[[ return states[''media_player.apple_tv_sejour''].state ]]]'
      entity_app_name: sensor.apple_tv_salon_app_name
      app_name: '[[[ return states[''sensor.apple_tv_salon_app_name''].state ]]]'
      programme: '[[[ return states[''sensor.tv_salon_programme''].state ]]]'
      entity_pourcentage: sensor.tv_salon_duree_media_pourcentage
      entity_source: sensor.tv_salon_source
      source: '[[[ return states[''sensor.tv_salon_source''].state ]]]'
      volume: sensor.tv_salon_vol
      volume_muted: >-
        [[[ return states["media_player.tv_salon"].attributes.is_volume_muted
        ]]]
      app_id: '[[[ return states["media_player.apple_tv_sejour"].attributes.app_id ]]]'
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_volume_mute
                service_data: null
              entity: script.tv_salon_volume_mute
              icon: mdi:volume-variant-off
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]]           
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_volume_bas
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:volume-minus
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]]                      
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_volume_haut
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:volume-plus
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]] 
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_chaine_bas
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:chevron-double-down
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]]              
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_chaine_haut
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:chevron-double-up
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]]                        
    double_tap_action:
      action: call-service
      service: script.tv_salon_on_off
      service_data: null
    tap_action:
      action: more-info
  tv_parents_card:
    template:
      - tv_card
    variables:
      entity: switch.tele_des_parents
      entity_state: '[[[ return states[''switch.tele_des_parents''].state ]]]'
      name: Parents
      entity_apple_tv: media_player.apple_tv_parents
      apple_tv: '[[[ return states[''media_player.apple_tv_parents''].state ]]]'
      entity_app_name: sensor.apple_tv_parents_app_name
      app_name: '[[[ return states[''sensor.apple_tv_parents_app_name''].state ]]]'
      programme: '[[[ return states[''sensor.tv_parents_programme''].state ]]]'
      entity_pourcentage: sensor.tv_parents_duree_media_pourcentage
      entity_source: sensor.tv_parents_source
      source: '[[[ return states[''sensor.tv_parents_source''].state ]]]'
      volume: sensor.tv_parents_vol
      app_id: '[[[ return states["media_player.apple_tv_parents"].attributes.app_id ]]]'
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: switch.tele_des_parents
              icon: mdi:volume-minus
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]] 
              tap_action:
                action: call-service
                service: script.tv_parents_volume_bas
                service_data: null
            - type: custom:button-card
              entity: switch.tele_des_parents
              icon: mdi:volume-plus
              template:
                - - media_controls
              styles:
                icon:
                  - color: |
                      [[[ 
                         if ( variables.entity_state  == 'off' ) 
                         return 'transparent'  
                         if ( variables.entity_state  == 'on'  ) 
                         return 'white'
                      ]]] 
              tap_action:
                action: call-service
                service: script.tv_parents_volume_haut
                service_data: null
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  system_card:
    aspect_ratio: 1/1
    show_state: false
    styles:
      custom_fields:
        graph:
          - position: absolute
          - opacity: 70%
          - top: 73%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
        graph_bar:
          - position: absolute
          - opacity: 70%
          - top: 81%
          - left: 51%
          - width: calc(100% + 35px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        info:
          - top: 33%
          - z-index: 2
          - position: absolute
          - left: 7%
          - width: 100%
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
  system_card_info:
    template:
      - badge_auto_card
      - no_style
    show_state: false
    show_label: true
    styles:
      icon:
        - width: 14px
      label:
        - font-size: 12px
        - color: var(--text-off)
        - align-self: end
      img_cell:
        - background-color: none
      card:
        - padding: 0
        - height: 17px
        - border-radius: 0
        - margin-bottom: '-5px'
  system_card_info_temp_state:
    state:
      - value: 19
        operator: <
        styles:
          icon:
            - color: var(--blue)
      - value: 27
        operator: '>'
        styles:
          icon:
            - color: var(--red)
      - value: 25
        operator: '>'
        styles:
          icon:
            - color: var(--orange)
  system_card_info_state:
    state:
      - value: 80
        operator: '>'
        styles:
          icon:
            - color: var(--red)
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--orange)
  system_card_plant_state:
    state:
      - value: 1
        operator: <
        styles:
          icon:
            - color: var(--red)
      - value: 5
        operator: <
        styles:
          icon:
            - color: var(--orange)
title: Chez On
views:
  - theme: Backend-selected
    icon: mdi:home-outline
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: d8316597eafd4333b737464a5b4c62d0
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                styles:
                  card:
                    - margin-top: 3px
                  name:
                    - justify-self: middle
                name: |
                  [[[ return states['sensor.bonjour'].state ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    styles:
                      card:
                        - padding: 0
                    custom_fields:
                      info:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Calendrier
                              label: >
                                [[[return states['sensor.date_jour'].state + "
                                "+states['sensor.date_numero'].state + " " +
                                states['sensor.date_mois_court'].state +"." ]]] 
                              template:
                                - badge_card
                                - no_style
                              show_icon: false
                              styles:
                                card:
                                  - padding: 0px 06px
                                label:
                                  - margin-top: 6px
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/air
                              entity: sensor.qualite_air_pourcentage
                              label: >
                                [[[return
                                (states['sensor.qualite_air_pourcentage'].state*1).toFixed(1)
                                + " %" ]]] 
                              icon: mdi:blur
                              template:
                                - badge_auto_card
                                - no_style
                                - air_mini_card_state
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Temp
                              entity: sensor.temp_moyenne_maison
                              label: >
                                [[[return
                                (states['sensor.temp_moyenne_maison'].state*1).toFixed(1)
                                + " °C" ]]] 
                              icon: mdi:home-thermometer
                              template:
                                - badge_auto_card
                                - no_style
                                - temperature_mini_card_state
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    styles:
                      card:
                        - padding: 0
                    custom_fields:
                      info:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Calendrier
                              label: |
                                [[[return states['sensor.time'].state  ]]]
                              template:
                                - badge_card
                                - no_style
                              show_icon: false
                              styles:
                                card:
                                  - line-height: 20px
                                label:
                                  - font-size: 20px
                                  - font-weight: 600
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Calendrier
                              entity: weather.ville
                              label: >
                                [[[return
                                states['sensor.weather_temperature'].state + "°
                                "
                                  +states['sensor.weather_conditions'].state]]]
                              template:
                                - badge_auto_card
                                - no_style
                                - weather_icon
                              show_entity_picture: true
                              styles:
                                img_cell:
                                  - overflow: visible
                                  - margin-right: 10px
                                icon:
                                  - width: 35px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.49_weather_alert
                        state_not: Vert
                    card:
                      type: custom:button-card
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Calendrier
                      entity: sensor.49_weather_alert
                      icon: mdi:alert
                      show_icon: true
                      template:
                        - badge_card
                        - no_style
                      label: |
                        [[[
                          let alerts = states['sensor.49_weather_alert'].attributes;
                          let alertMessages = [];

                          for (const attribut of ['Vent violent', 'Orages', 'Inondation', 'Pluie-inondation', 'Neige-verglas', 'Canicule', 'Grand-froid', 'Avalanches', 'Vagues-submersion']) {
                            if (alerts[attribut] !== 'Vert' && alerts[attribut] !== undefined) {
                              alertMessages.push(`${attribut}`);
                            }
                          }

                          if (states['sensor.49_weather_alert'].state != 'Vert')
                          return alertMessages.join(' / ');
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                if (states['sensor.49_weather_alert'].state == 'Vert')
                                  return 'lightgrey';
                                if (states['sensor.49_weather_alert'].state == 'Jaune')
                                  return 'var(--yellow)';  
                                if (states['sensor.49_weather_alert'].state == 'Orange')
                                  return 'var(--orange)';     
                                if (states['sensor.49_weather_alert'].state == 'Rouge')
                                  return 'var(--red)';               
                              ]]]
                card_mod:
                  style: |
                    ha-card { 
                      padding: 0px;
                      border-radius: 0px !important;
                      margin: 05px 10px 0px 10px ;
                      background: none;
                      border-color: none;
                      box-shadow: none;

                    }
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Alarmes
                          entity: alarm_control_panel.alarme
                          double_tap_action:
                            action: more-info
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                          icon: |
                            [[[
                              var entity = states['alarm_control_panel.alarme'].state;
                              if (entity == "disarmed" )
                                return "mdi:shield-off";
                              if (entity == "armed_away" )
                                return "mdi:shield-lock";
                              if (entity  == "armed_home" )
                                return "mdi:shield-home";
                              if (entity  == "armed_night" )
                                return "mdi:shield-moon";
                              if (entity  == "arming" )
                                return "mdi:shield-half-full";
                              if (entity  == "triggered" )
                                return "mdi:shield-alert";
                              return "mdi:shield-off";
                            ]]]
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_home'].state )
                              ]]]  
                        - type: custom:button-card
                          double_tap_action:
                            action: navigate
                            navigation_path: /lovelace/Alarmes
                          tap_action:
                            action: more-info
                          entity: alarm_control_panel.aarlo_sonnette
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                          name: Sonnette
                          icon: phu:arlo-video-doorbell
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.aarlo_battery_level_sonnette'].state
                              ) ]]]
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Lumières
                          double_tap_action:
                            action: more-info
                          entity: light.tout
                          template:
                            - mini_card
                            - light_mini_card_state
                          show_name: false
                          show_label: false
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_lumiere'].state
                              ) ]]] 
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                          double_tap_action:
                            action: more-info
                          entity: binary_sensor.portes
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                            - custom_icon
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_portes'].state
                              ) ]]]            
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                          double_tap_action:
                            action: more-info
                          entity: lock.garage
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                          icon: |
                            [[[ 
                              if (states['lock.garage'].state == 'unlocked')
                                return "mdi:lock-open"
                              return "mdi:lock"
                            ]]]  
                          styles:
                            icon:
                              - animation: |
                                  [[[
                                    if (states['lock.garage'].state == 'jammed')
                                      return 'blink 0.8s ease infinite'  
                                  ]]]                           
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                          double_tap_action:
                            action: more-info
                          entity: binary_sensor.mouvements
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                            - custom_icon
                          name: Présences
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_mouvement'].state
                              ) ]]]  
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.alarme
                    state_not: disarmed
                card:
                  type: custom:vertical-stack-in-card
                  cards:
                    - square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: picture-glance
                          aspect_ratio: 60%
                          camera_image: camera.aarlo_sonnette
                          camera_view: auto
                          entities: []
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
                        - type: picture-glance
                          aspect_ratio: 60%
                          camera_image: camera.camera_entree
                          camera_view: auto
                          entities: []
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
                        - type: picture-glance
                          camera_image: camera.camera_sejour
                          camera_view: live
                          entities: []
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
                        - type: picture-glance
                          camera_image: camera.camera_g2hpro
                          camera_view: live
                          entities: []
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
                  card_mod:
                    style: |
                      ha-card {
                        background: none;
                        margin: -10px 20px 10px 20px;
                        overflow: hidden !important;
                        border-radius: 24px !important;
                      }
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.aarlo_sonnette
                    state: armed_away
                  - entity: alarm_control_panel.alarme
                    state: disarmed
                card:
                  type: custom:vertical-stack-in-card
                  cards:
                    - entity: camera.aarlo_sonnette
                      title: Sonnette
                      hide:
                        - date
                      global: small
                      image_click: play
                      image_view: arlo-stream
                      show:
                        - image_date
                        - motion
                        - snapshot
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
                  card_mod:
                    style: |
                      ha-card {

                        margin: -10px 20px 0px 20px;
                        overflow: hidden !important;
                        border-radius: 24px !important;
                      }
              - type: horizontal-stack
                cards:
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.le_bureau_next_timer
                      - sensor: sensor.minuteur_bureau
                      - name: Bureau
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.la_cuisine_next_timer
                      - sensor: sensor.minuteur_cuisine
                      - name: Cuisine
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.le_salon_next_timer
                      - sensor: sensor.minuteur_salon
                      - name: Salon
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.la_salle_de_bain_next_timer
                      - sensor: sensor.minuteur_sdb
                      - name: SDB
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.papa_next_timer
                      - sensor: sensor.minuteur_aurel
                      - name: Aurel
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.maman_next_timer
                      - sensor: sensor.minuteur_alex
                      - name: Alex
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.tom_next_timer
                      - sensor: sensor.minuteur_tom
                      - name: Tom
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.nina_next_timer
                      - sensor: sensor.minuteur_nina
                      - name: Nina
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.leane_next_timer
                      - sensor: sensor.minuteur_leane
                      - name: Léane
                  - type: custom:decluttering-card
                    template: next_timer
                    variables:
                      - entity: sensor.manon_next_timer
                      - sensor: sensor.minuteur_manon
                      - name: Manon
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template:
                      - title_activity_card
                    icon: mdi:calendar
                    label: |
                      [[[ return  "Programme" ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Calendrier
                    styles:
                      card:
                        - - margin-top: 5px
                  - type: custom:button-card
                    template:
                      - separator_activity_card
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Calendrier
                    template:
                      - sensor_activity_card
                    entity: sensor.calendrier_famille
                    name: Calendrier familial
                    label: |
                      [[[ return  states['sensor.calendrier_famille'].state ]]]
                    show_icon: true
                    custom_fields:
                      name: >
                        [[[ return 
                        states['sensor.calendrier_famille_jour'].state ]]]    
                      label: >
                        [[[ return 
                        states['sensor.calendrier_famille_date'].state ]]]    
                      bubble: ●
                    styles:
                      custom_fields:
                        bubble:
                          - color: |
                              [[[ 
                                if (states['sensor.calendrier_famille_date'].state == states['sensor.date_numero'].state )
                                  return "var(--blue)"
                                return "transparent"
                              ]]]
                        name:
                          - position: absolute
                          - left: 10px
                          - top: 10px
                          - font-weight: null
                          - color: var(--text-on)
                          - font-size: 7px
                          - text-transform: uppercase
                        label:
                          - position: absolute
                          - left: 10px
                          - top: 16px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--text-on)
                      icon:
                        - color: transparent
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.anniversaire
                        state_not: Aucun
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.anniversaire
                      name: Anniversaire
                      label: |
                        [[[ return  states['sensor.anniversaire'].state ]]]
                      icon: mdi:party-popper
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Calendrier
                    template:
                      - sensor_activity_card
                    entity: sensor.calendrier_des_poubelles
                    name: Poubelles
                    label: |
                      [[[
                          return `<ha-icon
                          icon="mdi:trash-can-outline"
                          style="width: 14px; height: 16px; color: var(--icon-off); margin-top: -2px ;vertical-align: top;"> 
                          </ha-icon> <span> ${states['sensor.passage_dechets_menagers'].state} </span>
                          <ha-icon
                          icon="mdi:recycle"
                          style="width: 14px; height: 16px; color: var(--icon-off); margin-top: -2px ;vertical-align: top;"> 
                          </ha-icon> <span> ${states['sensor.passage_tri_selectif'].state}</span>`          
                      ]]]
                    icon: mdi:delete-outline
                    custom_fields:
                      bubble: ●
                    styles:
                      label:
                        - margin-top: '-1px'
                      custom_fields:
                        bubble:
                          - color: |
                              [[[ 
                                if (states['calendar.dechets_menagers'].state == "on" )
                                  return "var(--green)"
                                if (states['calendar.tri_selectif'].state == "on")
                                  return "var(--yellow)"
                                return "transparent"
                              ]]]
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.compteur_rappel
                        state_not: '0'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.rappel
                      name: Rappel
                      label: |
                        [[[ return  states['sensor.rappel'].state ]]]
                      icon: mdi:clock-outline
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.vacances_scolaires_verif_si_bientot
                            state: 'true'
                    card:
                      type: custom:button-card
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Calendrier
                      template:
                        - sensor_activity_card
                      entity: sensor.vacances_scolaires
                      name: Vacances
                      label: >
                        [[[ return 
                        states['sensor.calendrier_vacances_scolaires_detaillees'].state
                        ]]]
                      icon: mdi:beach
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.verif_avertissement
                            state: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - title_activity_card
                      icon: mdi:alert
                      label: |
                        [[[ return  "Avertissement" ]]]
                      styles:
                        icon:
                          - color: var(--red)
                        label:
                          - color: var(--red)
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.verif_avertissement
                            state: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.systeme_avertissement
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.systeme_avertissement
                      name: Indisponibles
                      label: |
                        [[[
                          if (states['sensor.systeme_avertissement'].state == '')
                            return "Aucun" 
                          return states['sensor.systeme_avertissement'].state ;
                        ]]]    
                      icon: mdi:skull-crossbones-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.avertissement_rpi
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.avertissement_rpi
                      name: Raspberry
                      label: >
                        [[[ return states['sensor.avertissement_rpi'].state
                        ]]]    
                      icon: mdi:raspberry-pi
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.spook
                        state_not: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.spook
                      name: Spook
                      label: |
                        [[[ return states['sensor.spook'].state ]]]    
                      icon: mdi:ghost-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.fuites_eau
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: binary_sensor.fuites_d_eau_water_leak
                      name: Fuite d'eau
                      label: |
                        [[[ return states['sensor.fuites_eau'].state ]]]    
                      icon: mdi:water-alert
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.batterie_faible
                        state_not: Aucune
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.batterie_faible
                      name: Batteries faibles
                      label: >
                        [[[ return states['sensor.batterie_faible'].state
                        ]]]    
                      icon: mdi:battery-low
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/batteries
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.serrures_bloquees
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: group.serrures
                      name: Serrures bloquées
                      label: |
                        [[[ return  states['sensor.serrures_bloquees'].state ]]]
                      icon: mdi:lock-alert
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/porte_mouv_serrure
                  - type: conditional
                    conditions:
                      - condition: or
                        conditions:
                          - condition: state
                            entity: vacuum.wall_e
                            state: error
                          - condition: state
                            entity: vacuum.r2d2
                            state: error
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: group.aspis
                      name: Aspis
                      label: |
                        [[[ return states['sensor.erreur_aspi'].state ]]]    
                      icon: mdi:vacuum-outline
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.avertissement_humidite_plantes
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.avertissement_humidite_plantes
                      name: Plantes
                      label: >
                        [[[ return
                        states['sensor.avertissement_humidite_plantes'].state
                        ]]]    
                      icon: mdi:watering-can-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Plantes
                  - type: custom:button-card
                    template:
                      - title_activity_card
                    icon: mdi:home-outline
                    label: |
                      [[[ return  "Maison" ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Appareils
                  - type: custom:button-card
                    template:
                      - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.pieces_allumees
                            state_not: Aucune
                          - condition: state
                            entity: input_boolean.show_lumiere
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: light.tout
                      name: Lumières
                      label: |
                        [[[ return states['sensor.pieces_allumees'].state  ]]]
                      icon: mdi:lightbulb-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Lumières
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.mouv_on
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.show_mouvement
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.mouv_on
                      name: Mouvements
                      label: |
                        [[[ return states['sensor.mouv_on'].state  ]]]
                      icon: mdi:run-fast
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/porte_mouv_serrure
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.porte_on
                            state_not: Aucune
                          - condition: state
                            entity: input_boolean.show_porte
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: binary_sensor.portes
                      name: Portes
                      label: |
                        [[[ return states['sensor.porte_on'].state  ]]]
                      icon: mdi:door-open
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/porte_mouv_serrure
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.serrure_ouverte
                            state_not: Aucune
                          - condition: state
                            entity: input_boolean.show_serrures
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: group.serrures
                      name: Serrures
                      label: |
                        [[[ return states['sensor.serrure_ouverte'].state  ]]]
                      icon: mdi:lock-outline
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.temperature_basse
                            state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.temperature_basse
                      name: Témpérature basse
                      label: |
                        [[[ return states['sensor.temperature_basse'].state  ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Temp
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: group.aspis
                            state: 'on'
                          - condition: state
                            entity: input_boolean.show_appareils
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: group.aspis
                      name: Aspirateur
                      label: |
                        [[[ return states['sensor.aspi_info'].state  ]]]
                      icon: mdi:vacuum-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Appareils
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: group.tv
                            state: 'on'
                          - condition: state
                            entity: input_boolean.show_appareils
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: group.tv
                      name: Télévision
                      label: >
                        [[[ return states['sensor.tv_salon_info'].state + '<br>'
                        + states['sensor.tv_parents_info'].state ]]]
                      icon: mdi:television
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Appareils
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: group.appareils
                            state: 'on'
                          - condition: state
                            entity: input_boolean.show_appareils
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: group.appareils
                      name: Appareils
                      label: |
                        [[[ return states['sensor.appareils'].state  ]]]
                      icon: mdi:connection
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Appareils
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: input_boolean.musique
                            state: 'on'
                          - condition: state
                            entity: input_boolean.show_musique
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.musique
                      name: Musique
                      label: |
                        [[[ return states['sensor.musique'].state  ]]]
                      icon: mdi:speaker-multiple
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Musique
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.appareils_connectes
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.show_connecte
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: group.connectes
                      name: Connectés
                      label: >
                        [[[ return states['sensor.appareils_connectes'].state 
                        ]]]
                      icon: mdi:wifi-strength-outline
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.appareils_charges
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.show_appareils_charges
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.appareils_charges
                      name: Chargés
                      label: |
                        [[[ return states['sensor.appareils_charges'].state  ]]]
                      icon: mdi:battery-charging-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/batteries
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: input_boolean.show_presence
                            state: 'on'
                          - condition: state
                            entity: person.herve
                            state_not: home
                          - condition: state
                            entity: sensor.presents
                            state_not: Personne
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.presents
                      name: Présence
                      label: |
                        [[[ return states['sensor.presents'].state  ]]]
                      icon: mdi:home-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Personnes
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.modes
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.show_mode
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.modes
                      name: Modes
                      label: |
                        [[[ return states['sensor.modes'].state  ]]]
                      icon: mdi:order-bool-descending-variant
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/reglages
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: input_boolean.vacances
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: schedule.mode_absent_calendrier_aspi
                      name: Aspirateur
                      label: >
                        [[[ return states['sensor.aspi_mode_vacances'].state 
                        ]]]
                      icon: mdi:vacuum-outline
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.linky_verif_j1
                            state_not: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.linky_093xxxxxxxx5420_consumption
                      name: Conso électrique
                      label: >
                        [[[ return
                        states['sensor.electricite_cout_jour_avec_abo'].state +"
                        € / " + entity.state + " kWh" ]]]
                      icon: mdi:flash-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Energie
                      custom_fields:
                        bubble: ●
                      styles:
                        custom_fields:
                          bubble:
                            - color: |
                                [[[ 
                                  if (states["sensor.linky_verif_j1"].state == "false") return ''
                                  if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 6) return 'transparent';          
                                  if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 9) return 'var(--blue)';
                                  if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 12) return 'var(--yellow)'; 
                                  if (states["sensor.linky_093xxxxxxxx5420_consumption"].state < 15) return 'var(--orange)';
                                  if (states["sensor.linky_093xxxxxxxx5420_consumption"].state >= 15) return 'var(--red)';          
                                  else return 'transparent';
                                ]]]        
                  - type: conditional
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.maj
                                state_not: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.show_maj
                                state: 'on'
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.verif_avertissement
                                state: 'true'
                              - condition: state
                                entity: sensor.maj
                                state: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.show_info
                                state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - title_activity_card
                      icon: mdi:information-outline
                      label: |
                        [[[ return  "Infos" ]]]
                  - type: conditional
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.maj
                                state_not: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.show_maj
                                state: 'on'
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.verif_avertissement
                                state: 'true'
                              - condition: state
                                entity: sensor.maj
                                state: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.show_info
                                state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.maj
                            state_not: Aucune mise à jour
                          - condition: state
                            entity: input_boolean.show_maj
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.maj
                      name: Mises à jour
                      label: |
                        [[[ return states['sensor.maj'].state  ]]]
                      icon: mdi:update
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.verif_avertissement
                            state: 'true'
                          - condition: state
                            entity: sensor.maj
                            state: Aucune mise à jour
                          - condition: state
                            entity: input_boolean.show_info
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.web_scrape
                      name: Le saviez-vous ?
                      label: |
                        [[[ return states['sensor.web_scrape'].state ]]]
                      styles:
                        label:
                          - font-style: italic
                      icon: mdi:newspaper-variant-outline
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    card_mod:
                      style: |
                        ha-card { 
                          border-radius: 0px;
                          background: transparent !important;
                          box-shadow: none;         
                          margin-top: 10px !important;
                          margin-bottom: 2px !important;
                        }
                    cards:
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: switch.adguard_protection
                            icon: mdi:shield-check-outline
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: >-
                              binary_sensor.home_assistant_versions_update_available
                            icon: mdi:home-assistant
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['binary_sensor.home_assistant_versions_update_available'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                                        return 'var(--icon-blue)'
                                      return 'var(--icon-off)'
                                    ]]] 
                              card:
                                - background-color: |
                                    [[[
                                      if (states['binary_sensor.home_assistant_versions_update_available'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                                        return 'var(--card-blue)'
                                      return ''
                                    ]]]                  
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/systeme
                            double_tap_action:
                              action: call-service
                              service: input_boolean.toggle
                              service_data:
                                entity_id: input_boolean.show_maj
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: sensor.hacs
                            icon: mdi:package-variant
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/systeme
                            double_tap_action:
                              action: call-service
                              service: input_boolean.toggle
                              service_data:
                                entity_id: input_boolean.show_maj
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            icon: mdi:qrcode
                            show_label: false
                            template:
                              - sub_button
                            label: wifi
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/invités
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: group.mode
                            icon: mdi:cog-outline
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/reglages
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: group.annonces
                            icon: mdi:message-processing-outline
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Annonces
                card_mod:
                  style: |
                    ha-card {
                      padding: 05px 18px 2px 18px!important;
                      margin-top: -3px;
                      margin-bottom: 0px;
                    }
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - tom_alarm
                  - type: custom:button-card
                    template:
                      - manon_alarm
                  - type: custom:button-card
                    template:
                      - leane_alarm
                  - type: custom:button-card
                    template:
                      - nina_alarm
                columns: 2
        layout:
          width: 350
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Rez-de-chaussée" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.sejour
                        variables:
                          temp: sensor.temp_sejour
                          slider: input_number.luminosite_sejour
                          temp_state: >
                            [[[ return (states['sensor.temp_sejour'].state *
                            1).toFixed(1) ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        name: Séjour
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_sejour'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.tv_salon
                                  icon: mdi:television-play
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.sejour
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouvements_sejour
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                                - type: custom:button-card
                                  entity: binary_sensor.presence_sejour_fp2
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  icon: |
                                    [[[ 
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_bureau_fp2'].state == "on")
                                        return "mdi:desk"
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_salon_fp2'].state == "on")
                                        return "mdi:television"
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_canape_fp2'].state == "on")
                                        return "mdi:sofa"
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_sam_fp2'].state == "on")
                                        return "mdi:silverware"                
                                      return ""
                                    ]]]
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Séjour
                      - type: custom:button-card
                        entity: light.entree_et_couloir
                        variables:
                          slider: input_number.luminosite_entree
                          temp: sensor.temp_couloir_rdc
                          temp_state: >
                            [[[ return (states['sensor.temp_couloir_rdc'].state*
                            1).toFixed(1) ]]]  
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        name: Entrée
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_entree'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: camera.camera_entree
                                  icon: mdi:cctv
                                  template:
                                    - sub_button
                                  styles:
                                    icon:
                                      - color: var(--icon-off)
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_couloir
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Entrée
                      - type: custom:button-card
                        entity: binary_sensor.porte_cuisine
                        variables:
                          temp: sensor.temp_cuisine
                          temp_state: >
                            [[[ return (states['sensor.temp_cuisine'].state *
                            1).toFixed(1) ]]] 
                        label: |
                          [[[
                              if (variables.temp_state == 'unavailable')
                                return " ?"
                              return variables.temp_state+"°"
                          ]]]    
                        template:
                          - base
                          - base_high
                          - room_card_graph
                          - room_card
                        icon: phu:rooms-kitchen
                        name: Cuisine
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/cuisine
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.la_cuisine
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: switch.lave_vaisselle_power
                                  icon: mdi:dishwasher
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                      - type: custom:button-card
                        variables:
                          slider: light.lavabo
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return ''
                              return 'Éteint '
                            ]]]
                          temp: |
                            [[[ 
                              return "null"
                            ]]]
                          temp.state: |
                            [[[ return "null"]]]
                        entity: light.lavabo
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        name: Lavabo
                        icon: phu:rooms-toilet
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_wc'].state ) ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_d_eau
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Lavabo
                      - type: custom:button-card
                        entity: light.parents
                        variables:
                          slider: input_number.luminosite_parents
                          temp: sensor.temp_parents
                          temp_state: >
                            [[[ return (states['sensor.temp_parents'].state*
                            1).toFixed(1) ]]]  
                        name: Parents
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_parents'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_parents
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.chambre_des_parents
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: switch.tele_des_parents
                                  icon: mdi:television
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Parents
                      - type: custom:button-card
                        entity: light.cagibi
                        variables:
                          slider: light.cagibi
                          temp: sensor.sonde_garage_temperature
                          temp_state: >
                            [[[ return
                            (states['sensor.sonde_garage_temperature'].state*
                            1).toFixed(1) ]]]  
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        name: Garage
                        icon: mdi:car
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Garage
                        custom_fields:
                          lock:
                            card:
                              type: custom:button-card
                              entity: lock.garage
                              template:
                                - sub_button
                                - sub_button_state
                                - custom_icon
                              tap_action:
                                action: more-info
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cagibi
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                                - type: custom:button-card
                                  entity: binary_sensor.porte_garage
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  icon: mdi:garage-open-variant
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_garage
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                                - type: custom:button-card
                                  entity: media_player.le_garage
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: input_boolean.lave_linge
                                  icon: mdi:washing-machine
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.fuites_d_eau_water_leak
                                  icon: null
                                  template:
                                    - sub_button
                                    - sub_button_state
                    columns: 2
                    square: false
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Etage" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.tom
                        name: Tom
                        variables:
                          slider: input_number.luminosite_tom
                          temp: sensor.temp_tom
                          temp_state: >
                            [[[ return (states['sensor.temp_tom'].state*
                            1).toFixed(1) ]]]  
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        icon: |
                          [[[
                            if (states['sensor.compteur_tom'].state == 1 && states['light.lampe_de_bureau_tom'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:bat';
                          ]]] 
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_tom'].state ) ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_tom
                                  icon: mdi:spray
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.tom
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_tom
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Tom
                      - type: custom:button-card
                        entity: light.manon_et_leane
                        name: Manon Lélé
                        icon: mdi:death-star-variant
                        variables:
                          slider: input_number.luminosite_manon_leane
                          temp: sensor.temp_manon
                          temp_state: >
                            [[[ return (states['sensor.temp_manon'].state*
                            1).toFixed(1) ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_manon'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_manon
                                  icon: mdi:spray
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.chambre_de_manon_et_leane
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_manon
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_leane
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Manon Léane
                      - type: custom:button-card
                        entity: light.nina
                        name: Nina
                        icon: |
                          [[[
                            if (states['sensor.compteur_nina'].state == 1 && states['light.lampe_de_bureau_nina'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:face-woman-outline';
                          ]]]
                        variables:
                          slider: input_number.luminosite_nina
                          temp: sensor.temp_nina
                          temp_state: >
                            [[[ return (states['sensor.temp_nina'].state*
                            1).toFixed(1) ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_nina'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_nina
                                  icon: mdi:spray
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.nina
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_nina
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Nina
                      - type: custom:button-card
                        entity: switch.radiateur
                        name: S. de bain
                        icon: phu:rooms-bathroom
                        label: |
                          [[[
                              if (states['sensor.temp_salle_de_bain'].state == 'unavailable')
                                return " ?"
                              return states['sensor.temp_salle_de_bain'].state+"°"
                          ]]]
                        variables:
                          temp: sensor.temp_salle_de_bain
                          temp_state: >
                            [[[ return
                            states['sensor.temp_salle_de_bain'].state]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: input_boolean.bruits_deau_sdb
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.la_salle_de_bain
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/SDB
                      - type: custom:button-card
                        entity: light.escalier
                        name: Escalier
                        icon: mdi:stairs
                        variables:
                          slider: input_number.luminosite_escaliers
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return ""
                              return 'Éteint '
                            ]]]
                          temp: |
                            [[[ 
                              return "null"
                            ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_escalier
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                      - type: custom:button-card
                        entity: light.palier
                        name: Palier
                        icon: phu:rooms-attic
                        variables:
                          slider: input_number.luminosite_escaliers
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return ""
                              return 'Éteint '
                            ]]]
                          temp: |
                            [[[ 
                              return "null"
                            ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_slider
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_palier
                                  template:
                                    - sub_button
                                    - sub_button_state
                                    - custom_icon
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                    columns: 2
                    square: false
                type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Multimédia" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - tv_sejour_card
                  - type: custom:button-card
                    template:
                      - tv_parents_card
                columns: 2
                square: false
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.musique
                    state: 'off'
                card:
                  type: custom:button-card
                  template:
                    - multimedia_card
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.musique
                    state: 'on'
                card:
                  type: custom:swipe-card
                  parameters:
                    fadeEffect:
                      crossFade: true
                    autoplay:
                      delay: 3000
                    speed: 2000
                  cards:
                    - type: conditional
                      conditions:
                        - entity: media_player.partout
                          state: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.partout
                          - gauge: sensor.partout_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.sejour
                          state: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.sejour
                          - gauge: sensor.sejour_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.la_cuisine
                          state: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.la_cuisine
                          - gauge: sensor.cuisine_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.le_garage
                          state: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.le_garage
                          - gauge: sensor.garage_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.chambre_des_parents
                          state: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.chambre_des_parents
                          - gauge: sensor.parents_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.en_bas
                          state: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.en_bas
                          - gauge: sensor.en_bas_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.la_salle_de_bain
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.la_salle_de_bain
                          - gauge: sensor.salle_de_bain_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.leane
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                        - entity: media_player.chambre_de_manon_et_leane
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.leane
                          - gauge: sensor.leane_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.tom
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.tom
                          - gauge: sensor.tom_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.nina
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.nina
                          - gauge: sensor.nina_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.manon
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                        - entity: media_player.etage
                          state_not: playing
                        - entity: media_player.chambre_de_manon_et_leane
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.manon
                          - gauge: sensor.manon_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.etage
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.etage
                          - gauge: sensor.etage_progression
                    - type: conditional
                      conditions:
                        - entity: media_player.chambre_de_manon_et_leane
                          state: playing
                        - entity: media_player.partout
                          state_not: playing
                      card:
                        type: custom:decluttering-card
                        template: music
                        variables:
                          - entity: media_player.chambre_de_manon_et_leane
                          - gauge: sensor.manon_et_leane_progression
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - walle_card
                  - type: custom:button-card
                    template:
                      - r2d2_card
                  - type: custom:button-card
                    template:
                      - dishwasher_card
                  - type: custom:button-card
                    template:
                      - washing_machine_card
                  - type: custom:button-card
                    entity: input_boolean.boite_aux_lettres_ouverte
                    name: Courrier
                    icon: |
                      [[[
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" )
                          return "mdi:mailbox-open"
                        return "mdi:mailbox"

                      ]]]
                    label: |
                      [[[
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" && states['input_boolean.courrier_releve'].state == "on")
                          return "Relevé à "+states['sensor.courrier_releve'].state
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "off" && states['input_boolean.courrier_releve'].state == "on")
                          return "Relevé à "+states['sensor.courrier_releve'].state
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" && states['input_boolean.courrier_releve'].state == "off")
                          return "Ouvert à "+states['sensor.boite_aux_lettres_ouvertee'].state
                        return "Non relevé"
                      ]]]
                    template:
                      - base
                      - base_high
                      - card_state
                    custom_fields:
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: input_boolean.courrier_releve
                              template:
                                - sub_button
                                - sub_button_state
                              icon: |
                                [[[
                                  if( states['input_boolean.courrier_releve'].state == "on")
                                    return "mdi:check"
                                  return "mdi:toggle-switch-off"
                                ]]]
                              styles:
                                icon:
                                  - width: 20px
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              template:
                                - sub_button
                              icon: mdi:door-closed
                              tap_action:
                                action: more-info
                  - type: custom:button-card
                    template:
                      - printer_card
                columns: 2
                square: false
            type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Personnes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - person_card_aurel
                  - type: custom:button-card
                    template:
                      - person_card_alex
                  - type: custom:button-card
                    template:
                      - person_card_tom
                  - type: custom:button-card
                    template:
                      - person_card_manon
                  - type: custom:button-card
                    template:
                      - person_card_leane
                  - type: custom:button-card
                    template:
                      - person_card_nina
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Relevés" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.cpu_temperature
                    name: Système
                    icon: mdi:raspberry-pi
                    template:
                      - base
                      - system_card
                    label: |
                      [[[
                        var entity = states['sensor.cpu_temperature'].state;
                        var tendance = states['sensor.cpu_tendance_icon'].state;   
                        return entity + " °C"
                      ]]]
                    styles:
                      card:
                        - background-color: |
                            [[[
                              var temp = states['sensor.cpu_temperature'].state;
                              var ram = states['sensor.memory_use_percent'].state;
                              var cpu = states['sensor.processor_use_percent'].state;
                              var ssd = states['sensor.disk_use_percent_config'].state;
                              
                              if (temp > 50 || ram > 70 || cpu > 70|| ssd > 50)
                                return 'var(--card-red)'
                              return ''
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              var temp = states['sensor.cpu_temperature'].state;
                              var ram = states['sensor.memory_use_percent'].state;
                              var cpu = states['sensor.processor_use_percent'].state;
                              var ssd = states['sensor.disk_use_percent_config'].state;
                              
                              if (temp > 50 || ram > 70 || cpu > 70|| ssd > 50)
                                return 'var(--img-cell-red)'
                              return 'var(--img-cell-off)'
                            ]]]
                      icon:
                        - color: |
                            [[[
                              var temp = states['sensor.cpu_temperature'].state;
                              var ram = states['sensor.memory_use_percent'].state;
                              var cpu = states['sensor.processor_use_percent'].state;
                              var ssd = states['sensor.disk_use_percent_config'].state;
                              
                              if (temp > 50 || ram > 70 || cpu > 70|| ssd > 50)
                                return 'var(--icon-red)'
                              return 'var(--icon-off)'
                            ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.memory_use_percent
                              label: |
                                [[[ 
                                   var name = "Ram : ";
                                   var trend = states['sensor.memory_tendance_icon'].state+ " ";
                                   var state = states['sensor.memory_use_percent'].state + " ";
                                   var unit = states['sensor.memory_use_percent'].attributes.unit_of_measurement+ " " ;
                                   return name + state + unit + trend
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_state
                            - type: custom:button-card
                              entity: sensor.processor_use_percent
                              label: |
                                [[[ 
                                   var name = "Cpu : ";
                                   var trend = states['sensor.processor_tendance_icon'].state+ " ";
                                   var state = states['sensor.processor_use_percent'].state + " ";
                                   var unit = states['sensor.processor_use_percent'].attributes.unit_of_measurement+ " " ;
                                   return name + state + unit + trend
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_state
                            - type: custom:button-card
                              entity: sensor.disk_use_percent_config
                              label: |
                                [[[ 
                                   var name = "Ssd : ";
                                   var trend = states['sensor.ssd_tendance_icon'].state+ " ";
                                   var state = states['sensor.disk_use_percent_config'].state + " ";
                                   var unit = states['sensor.disk_use_percent_config'].attributes.unit_of_measurement+ " " ;
                                   return name + state + unit + trend
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_state
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(150,150,150,0.8)
                              entity: sensor.cpu_temperature
                          height: 150
                          line_width: 1
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/systeme
                  - type: custom:button-card
                    entity: sensor.linky_093xxxxxxxx5420_consumption
                    name: Électricité
                    icon: mdi:flash
                    template:
                      - base
                      - system_card
                      - electricity_state
                    show_state: false
                    label: |
                      [[[
                        if (states["sensor.linky_verif_j1"].state == "false") return 'Attente' 
                        else return states["sensor.electricite_cout_jour_avec_abo"].state+" €";
                      ]]]    
                    state:
                      - value: unavailable
                        styles:
                          label:
                            - color: red
                          state:
                            - color: red
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.electricite_cout_semaine_avec_abo
                              label: |
                                [[[ 
                                   var name = "Semaine : ";
                                   var state = states['sensor.electricite_cout_semaine_avec_abo'].state + " ";
                                   var unit = "€" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                              icon: mdi:view-week
                            - type: custom:button-card
                              entity: sensor.electricite_cout_mois_avec_abo
                              label: |
                                [[[ 
                                   var name = "Mois : ";
                                   var state = states['sensor.electricite_cout_mois_avec_abo'].state + " ";
                                   var unit = "€" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                              icon: mdi:calendar-month
                            - type: custom:button-card
                              entity: sensor.electricite_cout_annee_avec_abo
                              label: |
                                [[[ 
                                   var name = "Année : ";
                                   var state = states['sensor.electricite_cout_annee_avec_abo'].state + " ";
                                   var unit = "€" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                              icon: mdi:calendar
                      graph_bar:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.electricite_conso_j7
                              color: rgba(var(--ocean-blue-rgb),0.3)
                            - entity: sensor.electricite_conso_j6
                              color: rgba(var(--ocean-blue-rgb),0.4)
                            - entity: sensor.electricite_conso_j5
                              color: rgba(var(--ocean-blue-rgb),0.5)
                            - entity: sensor.electricite_conso_j4
                              color: rgba(var(--ocean-blue-rgb),0.6)
                            - entity: sensor.electricite_conso_j3
                              color: rgba(var(--ocean-blue-rgb),0.7)
                            - entity: sensor.electricite_conso_j2
                              color: rgba(var(--ocean-blue-rgb),0.8)
                            - entity: sensor.electricite_conso_veille
                              color: rgba(var(--ocean-blue-rgb),0.8)
                          group_by: date
                          height: 170
                          points_per_hour: 1
                          min_bound_range: 10
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: true
                            labels: false
                          style:
                            .: |
                              ha-card {
                                  font-family: Avenir
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Energie
                  - type: custom:button-card
                    entity: sensor.temp_moyenne_maison
                    name: Climat
                    icon: mdi:home-thermometer
                    template:
                      - base
                      - system_card
                      - temperature_state
                    label: |
                      [[[
                        return states["sensor.temp_moyenne_maison"].state+" °C"
                      ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.weather_temperature
                              label: |
                                [[[ 
                                   var name = "Dehors : ";
                                   var state = states['sensor.weather_temperature'].state + " ";
                                   var unit = "°C" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:weather-sunny
                              template:
                                - system_card_info
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.weather_temperature'].state < 15 )
                                          return "var(--icon-blue)" 
                                        if (states['sensor.weather_temperature'].state > 25 )
                                          return "var(--icon-orange)" 
                                        return "var(--icon-off)" 
                                      ]]]             
                            - type: custom:button-card
                              entity: sensor.temp_sejour_arrondie
                              label: |
                                [[[ 
                                   var name = "Rdc : ";
                                   var state = states['sensor.temp_sejour_arrondie'].state + " ";
                                   var unit = "°C" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:sofa
                              template:
                                - system_card_info
                                - system_card_info_temp_state
                            - type: custom:button-card
                              entity: sensor.temp_moyenne_etage
                              icon: mdi:bed
                              label: |
                                [[[ 
                                   var name = "Etage : ";
                                   var state = states['sensor.temp_moyenne_etage'].state + " ";
                                   var unit = "°C" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_temp_state
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(var(--orange-rgb),0.8)
                              entity: sensor.temp_moyenne_rdc
                          height: 150
                          line_width: 1
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Temp
                  - type: custom:button-card
                    entity: sensor.plante_citro_temp
                    name: Plantes
                    icon: mdi:flower-tulip
                    template:
                      - base
                      - system_card
                    label: |
                      [[[
                        if (states['sensor.plante_citro_humidite'].state < 1 || 
                        states['sensor.plante_hum_pied_elephant'].state < 0.5 || 
                        states['sensor.plante_hum_dracaena'].state < 1)  
                          return "Besoin d'eau !"
                        return "RAS"
                      ]]]
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || 
                              states['sensor.plante_hum_pied_elephant'].state < 0.5 || 
                              states['sensor.plante_hum_dracaena'].state < 1) 
                              return 'var(--card-red)'
                              else return '';
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || 
                              states['sensor.plante_hum_pied_elephant'].state < 0.5 || 
                              states['sensor.plante_hum_dracaena'].state < 1) 
                              return 'var(--img-cell-red)'
                              else return 'var(--img-cell-off)';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || 
                              states['sensor.plante_hum_pied_elephant'].state < 0.5 || 
                              states['sensor.plante_hum_dracaena'].state < 1) 
                              return 'var(--icon-red)'
                              else return 'var(--icon-off)';
                            ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.plante_hum_dracaena
                              label: |
                                [[[ 
                                   var name = "Dracaena : ";
                                   var state = states['sensor.plante_hum_dracaena'].state + " ";
                                   var unit = "%" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:water
                              template:
                                - system_card_info
                                - system_card_plant_state
                            - type: custom:button-card
                              entity: sensor.plante_hum_pied_elephant
                              label: |
                                [[[ 
                                   var name = "Pied Eleph : ";
                                   var state = states['sensor.plante_hum_pied_elephant'].state + " ";
                                   var unit = "%" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:water
                              template:
                                - system_card_info
                                - system_card_plant_state
                            - type: custom:button-card
                              entity: sensor.plante_citro_humidite
                              label: |
                                [[[ 
                                   var name = "Citronnier : ";
                                   var state = states['sensor.plante_citro_humidite'].state + " ";
                                   var unit = "%" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:water
                              units: '%'
                              template:
                                - system_card_info
                                - system_card_plant_state
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(var(--ocean-blue-rgb),0.8)
                              entity: sensor.plante_citro_humidite
                          height: 150
                          line_width: 1
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Plantes
            type: vertical-stack
        layout:
          width: 280
  - title: Pronote
    path: pronote
    icon: mdi:account-school-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 340
        cards:
          - type: custom:decluttering-card
            template: pronote_header
            variables:
              - entity: person.tom
              - name: Tom
              - attributes_class_name: states['sensor.pronote_xxx_tom'].attributes.class_name
              - cours_aujourdhui: states['sensor.journee_de_cours_de_tom_aujourd_hui'].state
              - cours_demain: states['sensor.journee_de_cours_de_tom_demain'].state
          - type: custom:decluttering-card
            template: pronote
            variables:
              - name: Tom
              - timetable_period: sensor.pronote_xxx_tom_timetable_period
              - timetable_period_attributes: >-
                  state_attr('sensor.pronote_xxx_tom_timetable_period','lessons')
              - evaluations: sensor.pronote_xxx_tom_evaluations
              - evaluations_attributes: >-
                  state_attr('sensor.pronote_xxx_tom_evaluations','evaluations')
              - grades: sensor.pronote_xxx_tom_grades
              - grades_attributes: state_attr('sensor.pronote_xxx_tom_grades','grades')
              - averages: sensor.pronote_xxx_tom_averages
              - averages_attributes: state_attr('sensor.pronote_xxx_tom_averages','averages')
              - homework: sensor.pronote_xxx_tom_homework
              - homework_attributes: state_attr('sensor.pronote_xxx_tom_homework','homework')
              - delays: sensor.pronote_xxx_tom_delays
              - delays_attributes: state_attr('sensor.pronote_xxx_tom_delays','delays')
              - absences: sensor.pronote_xxx_tom_absences
              - absences_attributes: state_attr('sensor.pronote_xxx_tom_absences','absences')
              - update: sensor.derniere_mise_a_jour_de_pronote_tom
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 340
        cards:
          - type: custom:decluttering-card
            template: pronote_header
            variables:
              - entity: person.manon
              - name: Manon
              - attributes_class_name: states['sensor.pronote_xxx_manon'].attributes.class_name
              - cours_aujourdhui: states['sensor.journee_de_cours_de_manon_aujourd_hui'].state
              - cours_demain: states['sensor.journee_de_cours_de_manon_demain'].state
          - type: custom:decluttering-card
            template: pronote
            variables:
              - name: Manon
              - timetable_period: sensor.pronote_xxx_manon_timetable_period
              - timetable_period_attributes: >-
                  state_attr('sensor.pronote_xxx_manon_timetable_period','lessons')
              - evaluations: sensor.pronote_xxx_manon_evaluations
              - evaluations_attributes: >-
                  state_attr('sensor.pronote_xxx_manon_evaluations','evaluations')
              - grades: sensor.pronote_xxx_manon_grades
              - grades_attributes: state_attr('sensor.pronote_xxx_manon_grades','grades')
              - averages: sensor.pronote_xxx_manon_averages
              - averages_attributes: state_attr('sensor.pronote_xxx_manon_averages','averages')
              - homework: sensor.pronote_xxx_manon_homework
              - homework_attributes: state_attr('sensor.pronote_xxx_manon_homework','homework')
              - delays: sensor.pronote_xxx_manon_delays
              - delays_attributes: state_attr('sensor.pronote_xxx_manon_delays','delays')
              - absences: sensor.pronote_xxx_manon_absences
              - absences_attributes: state_attr('sensor.pronote_xxx_manon_absences','absences')
              - update: sensor.derniere_mise_a_jour_de_pronote_manon
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 340
        cards:
          - type: custom:decluttering-card
            template: pronote_header
            variables:
              - entity: person.leane
              - name: Léane
              - attributes_class_name: states['sensor.pronote_xxx_l_ane'].attributes.class_name
              - cours_aujourdhui: states['sensor.journee_de_cours_de_leane_aujourd_hui'].state
              - cours_demain: states['sensor.journee_de_cours_de_leane_demain'].state
          - type: custom:decluttering-card
            template: pronote
            variables:
              - name: Léane
              - timetable_period: sensor.pronote_xxx_l_ane_timetable_period
              - timetable_period_attributes: >-
                  state_attr('sensor.pronote_xxx_l_ane_timetable_period','lessons')
              - evaluations: sensor.pronote_xxx_l_ane_evaluations
              - evaluations_attributes: >-
                  state_attr('sensor.pronote_xxx_l_ane_evaluations','evaluations')
              - grades: sensor.pronote_xxx_l_ane_grades
              - grades_attributes: state_attr('sensor.pronote_xxx_l_ane_grades','grades')
              - averages: sensor.pronote_xxx_l_ane_averages
              - averages_attributes: state_attr('sensor.pronote_xxx_l_ane_averages','averages')
              - homework: sensor.pronote_xxx_l_ane_homework
              - homework_attributes: state_attr('sensor.pronote_xxx_l_ane_homework','homework')
              - delays: sensor.pronote_xxx_l_ane_delays
              - delays_attributes: state_attr('sensor.pronote_xxx_l_ane_delays','delays')
              - absences: sensor.pronote_xxx_l_ane_absences
              - absences_attributes: state_attr('sensor.pronote_xxx_l_ane_absences','absences')
              - update: sensor.derniere_mise_a_jour_de_pronote_leane
  - theme: Backend-selected
    icon: mdi:vacuum-outline
    path: Aspis
    title: Aspis
    visible:
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: d8316597eafd4333b737464a5b4c62d0
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }         
            entities:
              - type: custom:button-card
                template:
                  - vacuum_header
                variables:
                  entity: vacuum.wall_e
                  state: '[[[ return states[''sensor.walle_state''].state ]]]'
                  battery: sensor.walle_batterie
                  fan_speed: '[[[ return states[''vacuum.wall_e''].attributes.fan_speed ]]]'
                  error: '[[[ return states[''sensor.walle_erreur''].state ]]]'
                  picture: /local/aspis/walle_v3.jpg
                  camera: camera.roborock_s6
                  hours_main_brush: >-
                    [[[ return
                    Math.round(states["sensor.wall_e_main_brush_left"].state /
                    60 / 60)  ]]]
                  script_main_brush: script.aspi_walle_reset_brosse_principale
                  hours_side_brush: >-
                    [[[ return
                    Math.round(states["sensor.wall_e_side_brush_left"].state /
                    60 / 60)  ]]]
                  script_side_brush: script.aspi_walle_reset_brosse_laterale
                  hours_sensor_dirty: >-
                    [[[ return
                    Math.round(states["sensor.wall_e_sensor_dirty_left"].state /
                    60 / 60)  ]]]
                  script_sensor_dirty: script.aspi_walle_reset_capteurs
                  hours_filter: >-
                    [[[ return
                    Math.round(states["sensor.wall_e_filter_left"].state / 60 /
                    60)  ]]]
                  script_filter: script.aspi_walle_reset_filtre
                custom_fields:
                  options:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - vacuum_header_options
                          label: |
                            [[[ 
                              var nextEvent = states['schedule.mode_absent_calendrier_aspi'].attributes.next_event;
                              var date = new Date(nextEvent);
                              var day = date.toLocaleDateString('fr-FR', { weekday: 'long' }).charAt(0).toUpperCase();
                              var numericDay = ('0' + date.getDate()).slice(-2);
                              var month = ('0' + (date.getMonth() + 1)).slice(-2);
                              var hours = ('0' + date.getHours()).slice(-2);
                              var minutes = ('0' + date.getMinutes()).slice(-2);
                              if (states['input_boolean.vacances'].state == 'off')
                                return "Désactivé"                  
                              return `${day}.${numericDay} - ${hours}h${minutes}`;
                            ]]]
                          entity: schedule.mode_absent_calendrier_aspi
                          name: Auto
                          styles:
                            card:
                              - width: auto
                              - padding-left: 4px
                              - background-color: |
                                  [[[ 
                                    if (states['input_boolean.vacances'].state == 'on')
                                      return "var(--img-cell-red)"
                                    return "rgba(var(--black-rgb),var(--tint2))"
                                  ]]]
                  commands:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - media_controls
                          icon: mdi:pin-outline
                          show_name: false
                          tap_action:
                            action: call-service
                            haptic: medium
                            service: script.sortir_l_aspi
                            service_data:
                              entity_id: null
              - type: custom:xiaomi-vacuum-map-card
                entity: vacuum.wall_e
                map_source:
                  camera: camera.roborock_s6
                calibration_source:
                  camera: true
                language: fr
                debug: false
                map_modes:
                  - template: vacuum_clean_zone
                  - template: vacuum_goto
                  - template: vacuum_clean_zone_predefined
                    predefined_selections:
                      - zones:
                          - - 25027
                            - 24933
                            - 28549
                            - 28632
                      - zones:
                          - - 28625
                            - 25085
                            - 31969
                            - 28683
                      - zones:
                          - - 31944
                            - 24883
                            - 33895
                            - 28683
                      - zones:
                          - - 23761
                            - 28734
                            - 27308
                            - 31571
                      - zones:
                          - - 28777
                            - 28759
                            - 32603
                            - 30507
                      - zones:
                          - - 32628
                            - 28835
                            - 33768
                            - 30532
                      - zones:
                          - - 27308
                            - 28759
                            - 28802
                            - 33522
                      - zones:
                          - - 28828
                            - 30608
                            - 29740
                            - 33547
                      - zones:
                          - - 23659
                            - 31672
                            - 27282
                            - 35118
                      - zones:
                          - - 30150
                            - 30550
                            - 33050
                            - 34300
                map_locked: true
                two_finger_pan: false
                tiles: []
                icons: []
                card_mod:
                  style:
                    ha-button-menu: null
                    .: >
                      ha-card {
                        color: black;
                        --mdc-icon-size: 20px;
                        font-family: var(--primary-font-family);
                        overflow: visible !important;
                        background: none !important;
                        box-shadow: none !important;
                        border-radius: 0px !important;
                        --map-card-internal-primary-color: var(--dark-blue) !important;
                        --map-card-internal-secondary-color: var(--img-cell-blue) !important;
                        --map-card-internal-primary-text-color: black !important;
                        
                        --map-card-internal-secondary-text-color: black !important;
                        --map-card-internal-manual-point-line-color: var(--text-on) !important;
                        --map-card-internal-manual-point-fill-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-description-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-line-color: none !important;
                        --map-card-internal-manual-rectangle-line-color-selected: none !important;
                        --map-card-internal-manual-rectangle-fill-color: var(--img-cell-blue) !important;
                        --map-card-internal-manual-rectangle-fill-color-selected: var(--card-blue) !important;        
                        
                        --map-card-internal-manual-rectangle-delete-circle-fill-color: grey !important;
                        --map-card-internal-manual-rectangle-delete-circle-line-color: grey !important;
                        --map-card-internal-manual-rectangle-delete-icon-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-delete-circle-fill-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-delete-circle-line-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-delete-icon-color-selected: var(--text-on) !important;

                        --map-card-internal-manual-rectangle-resize-circle-fill-color: grey !important;
                        --map-card-internal-manual-rectangle-resize-circle-line-color: grey !important;
                        --map-card-internal-manual-rectangle-resize-icon-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-resize-circle-fill-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-resize-circle-line-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-resize-icon-color-selected: var(--text-on) !important;
                      }

                      .modes-dropdown-menu-button ha-icon {
                        color: black !important;
                      }

                      .modes-dropdown-menu-button
                      .modes-dropdown-menu-button-text {
                        display: none;
                      }

                      .map-wrapper {
                        border-radius: 24px !important;
                        overflow: hidden;
                      }

                      .controls-wrapper {
                        margin-right: -10px !important;
                        margin-left: -10px !important;
                        margin-bottom: 0 !important;
                      }

                      .controls-wrapper .map-controls-wrapper {
                        margin: 0 !important;
                      }

                      mwc-list-item {
                        background: black !important;
                      }    
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }         
            entities:
              - type: custom:button-card
                template:
                  - vacuum_header
                variables:
                  entity: vacuum.r2d2
                  state: '[[[ return states[''sensor.r2d2_state''].state ]]]'
                  battery: sensor.r2d2_batterie
                  fan_speed: '[[[ return states[''vacuum.r2d2''].attributes.fan_speed ]]]'
                  error: '[[[ return states[''sensor.r2d2_erreur''].state ]]]'
                  picture: /local/aspis/r2d22.jpg
                  camera: camera.roborock_s50
                  hours_main_brush: >-
                    [[[ return
                    Math.round(states["sensor.r2d2_main_brush_left"].state / 60
                    /60)  ]]]
                  script_main_brush: script.aspi_r2d2_reset_brosse_principale
                  hours_side_brush: >-
                    [[[ return
                    Math.round(states["sensor.r2d2_side_brush_left"].state / 60
                    / 60)  ]]]
                  script_side_brush: script.aspi_r2d2_reset_brosse_laterale
                  hours_sensor_dirty: >-
                    [[[ return
                    Math.round(states["sensor.r2d2_sensor_dirty_left"].state /
                    60 / 60)  ]]]
                  script_sensor_dirty: script.aspi_r2d2_reset_capteurs
                  hours_filter: >-
                    [[[ return
                    Math.round(states["sensor.r2d2_filter_left"].state / 60 /
                    60)  ]]]
                  script_filter: script.aspi_r2d2_reset_filtre
              - type: custom:xiaomi-vacuum-map-card
                entity: vacuum.r2d2
                map_source:
                  camera: camera.roborock_s50
                calibration_source:
                  camera: true
                language: fr
                debug: false
                map_modes:
                  - template: vacuum_clean_zone
                  - template: vacuum_goto
                  - template: vacuum_clean_zone_predefined
                    predefined_selections:
                      - zones:
                          - - 27589
                            - 24459
                            - 30627
                            - 27454
                      - zones:
                          - - 22780
                            - 21316
                            - 26598
                            - 24332
                      - zones:
                          - - 27589
                            - 21505
                            - 31217
                            - 24374
                      - zones:
                          - - 22864
                            - 17730
                            - 31112
                            - 21231
                      - zones:
                          - - 25227
                            - 24501
                            - 27526
                            - 25809
                      - zones:
                          - - 26661
                            - 21442
                            - 27547
                            - 24501
                map_locked: true
                two_finger_pan: false
                tiles: []
                icons: []
                card_mod:
                  style:
                    ha-button-menu: null
                    .: >
                      ha-card {
                        color: black;
                        --mdc-icon-size: 20px;
                        font-family: var(--primary-font-family);
                        background: none !important;
                        box-shadow: none !important;
                        border-radius: 0px !important;
                        overflow: visible !important;
                        --map-card-internal-primary-color: var(--dark-blue) !important;
                        --map-card-internal-secondary-color: var(--img-cell-blue) !important;
                        --map-card-internal-primary-text-color: black !important;
                        
                        --map-card-internal-secondary-text-color: black !important;
                        --map-card-internal-manual-point-line-color: var(--text-on) !important;
                        --map-card-internal-manual-point-fill-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-description-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-line-color: none !important;
                        --map-card-internal-manual-rectangle-line-color-selected: none !important;
                        --map-card-internal-manual-rectangle-fill-color: var(--img-cell-blue) !important;
                        --map-card-internal-manual-rectangle-fill-color-selected: var(--card-blue) !important;        
                        
                        --map-card-internal-manual-rectangle-delete-circle-fill-color: grey !important;
                        --map-card-internal-manual-rectangle-delete-circle-line-color: grey !important;
                        --map-card-internal-manual-rectangle-delete-icon-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-delete-circle-fill-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-delete-circle-line-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-delete-icon-color-selected: var(--text-on) !important;

                        --map-card-internal-manual-rectangle-resize-circle-fill-color: grey !important;
                        --map-card-internal-manual-rectangle-resize-circle-line-color: grey !important;
                        --map-card-internal-manual-rectangle-resize-icon-color: var(--text-on) !important;
                        --map-card-internal-manual-rectangle-resize-circle-fill-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-resize-circle-line-color-selected: grey !important;
                        --map-card-internal-manual-rectangle-resize-icon-color-selected: var(--text-on) !important;
                      }

                      .modes-dropdown-menu-button ha-icon {
                        color: black !important;
                      }

                      .modes-dropdown-menu-button
                      .modes-dropdown-menu-button-text {
                        display: none;
                      }

                      .map-wrapper {
                        border-radius: 24px !important;
                        overflow: hidden;
                      }

                      .controls-wrapper {
                        margin-right: -10px !important;
                        margin-left: -10px !important;
                        margin-bottom: 0 !important;
                      }

                      .controls-wrapper .map-controls-wrapper {
                        margin: 0 !important;
                      }

                      mwc-list-item {
                        background: black !important;
                      }    
  - theme: Backend-selected
    icon: mdi:speaker
    title: Musique
    subview: false
    path: Musique
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Rez-de-chaussée" ]]]
              - square: false
                type: grid
                cards:
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.sejour
                      - gauge: sensor.sejour_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.la_cuisine
                      - gauge: sensor.cuisine_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.chambre_des_parents
                      - gauge: sensor.parents_progression
                columns: 1
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Autres" ]]]
              - square: false
                type: grid
                cards:
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.la_salle_de_bain
                      - gauge: sensor.salle_de_bain_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.le_garage
                      - gauge: sensor.garage_progression
                columns: 1
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Enfants" ]]]
              - square: false
                type: grid
                cards:
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.tom
                      - gauge: sensor.tom_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.manon
                      - gauge: sensor.manon_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.leane
                      - gauge: sensor.leane_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.nina
                      - gauge: sensor.nina_progression
                columns: 1
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Multiroom" ]]]
              - square: false
                type: grid
                cards:
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.partout
                      - gauge: sensor.partout_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.chambre_de_manon_et_leane
                      - gauge: sensor.manon_et_leane_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.en_bas
                      - gauge: sensor.en_bas_progression
                  - type: custom:decluttering-card
                    template: music
                    variables:
                      - entity: media_player.etage
                      - gauge: sensor.etage_progression
                columns: 1
  - theme: Backend-selected
    title: Temperature
    path: Temp
    icon: mdi:thermometer
    subview: false
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Rez-de-chaussée
                  - icon: mdi:thermometer
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      cards:
                        - type: custom:button-card
                          variables:
                            name: Séjour
                            icon: mdi:sofa
                            temp: sensor.temp_sejour
                            temp_state: '[[[ return states[''sensor.temp_sejour''].state ]]]'
                            hum_state: '[[[ return states[''sensor.hum_sejour''].state ]]]'
                            hum: sensor.hum_sejour
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_sejour_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Cuisine
                            icon: mdi:food
                            temp: sensor.temp_cuisine
                            hum: sensor.hum_cuisine
                            temp_state: '[[[ return states[''sensor.temp_cuisine''].state ]]]'
                            hum_state: '[[[ return states[''sensor.hum_cuisine''].state ]]]'
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_cuisine_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Couloir
                            icon: phu:rooms-hallway
                            temp: sensor.temp_couloir_rdc
                            hum: sensor.hum_couloir_rdc
                            temp_state: >-
                              [[[ return states['sensor.temp_couloir_rdc'].state
                              ]]]
                            hum_state: >-
                              [[[ return states['sensor.hum_couloir_rdc'].state
                              ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_couloir_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Air
                            icon: mdi:blur
                            temp: sensor.moniteur_qualite_air_temperature
                            hum: sensor.moniteur_qualite_air_humidite
                            temp_state: >-
                              [[[ return
                              states['sensor.moniteur_qualite_air_temperature'].state
                              ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.moniteur_qualite_air_humidite'].state
                              ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_air_tendance_icon'].state ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Parents
                            icon: mdi:bed-king
                            temp: sensor.temp_parents
                            hum: sensor.hum_parents
                            temp_state: '[[[ return states[''sensor.temp_parents''].state ]]]'
                            hum_state: '[[[ return states[''sensor.hum_parents''].state ]]]'
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_parents_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Garage
                            icon: mdi:garage
                            temp: sensor.sonde_garage_temperature
                            hum: sensor.sonde_garage_humidite
                            temp_state: >-
                              [[[ return
                              states['sensor.sonde_garage_temperature'].state
                              ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.sonde_garage_humidite'].state ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_garage_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                      columns: 2
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Etage
                  - icon: mdi:thermometer
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      cards:
                        - type: custom:button-card
                          variables:
                            name: S. Bain
                            icon: mdi:shower
                            temp: sensor.temp_salle_de_bain
                            hum: sensor.hum_salle_de_bain
                            temp_state: >-
                              [[[ return
                              states['sensor.temp_salle_de_bain'].state ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.hum_salle_de_bain'].state ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_sdb_tendance_icon'].state ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Tom
                            icon: mdi:bat
                            temp: sensor.temp_tom
                            hum: sensor.hum_tom
                            temp_state: '[[[ return states[''sensor.temp_tom''].state ]]]'
                            hum_state: '[[[ return states[''sensor.hum_tom''].state ]]]'
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_tom_tendance_icon'].state ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Manon
                            icon: mdi:death-star
                            temp: sensor.temp_manon
                            hum: sensor.hum_manon
                            temp_state: '[[[ return states[''sensor.temp_manon''].state ]]]'
                            hum_state: '[[[ return states[''sensor.hum_manon''].state ]]]'
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_manon_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Nina
                            icon: mdi:owl
                            temp: sensor.temp_nina
                            hum: sensor.hum_nina
                            temp_state: '[[[ return states[''sensor.temp_nina''].state ]]]'
                            hum_state: '[[[ return states[''sensor.hum_nina''].state ]]]'
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_nina_tendance_icon'].state ]]]
                          template:
                            - climat_card
                      columns: 2
  - theme: Backend-selected
    title: Lumières
    path: Lumières
    icon: mdi:lightbulb-group-outline
    visible:
      - user: d8316597eafd4333b737464a5b4c62d0
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badge_cards:
      - entity: sensor.plante_lum_dracaena
        name: Dracaena
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.plante_lum_dracaena') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}      
      - entity: sensor.plante_lum_pied_elephant
        name: Pied d'Elephant
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.plante_lum_pied_elephant') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}    
      - entity: sensor.salle_a_manger_luminosite
        name: SaM
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.salle_a_manger_luminosite') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}         
      - entity: sensor.mouv_tom_luminosite
        name: Tom
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_tom_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_manon_luminosite
        name: Manon
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}   
      - entity: sensor.mouv_leane_luminosite
        name: Léane
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}               
      - entity: sensor.mouv_nina_luminosite
        name: Nina
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_palier_lum
        name: Palier
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_palier_lum') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Les lumières
                  - icon: mdi:lightbulb-variant
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - square: false
                          type: grid
                          columns: 1
                          cards:
                            - variables:
                                entity: light.tout
                              type: custom:button-card
                              name: Toutes les lampes
                              template:
                                - ball_light_card
                                - light_card_state
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Rez-de-chaussée " ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - square: false
                          type: grid
                          columns: 2
                          cards:
                            - variables:
                                entity: light.entree
                              type: custom:button-card
                              name: Entrée
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Entrée
                            - variables:
                                entity: light.sejour
                              icon: mdi:sofa
                              name: Séjour
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Séjour
                            - variables:
                                entity: light.couloir
                              type: custom:button-card
                              name: Couloir
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Entrée
                            - variables:
                                entity: light.cagibi
                              name: Cagibi
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Garage
                            - variables:
                                entity: light.parents
                              name: Parents
                              icon: mdi:bed-double
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Parents
                            - variables:
                                entity: light.lavabo
                              name: Lavabo
                              icon: mdi:toilet
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Lavabo
                            - variables:
                                entity: light.escalier
                              name: Escalier
                              icon: mdi:stairs
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Escalier
                            - variables:
                                entity: light.aqara_hub_54e1
                              name: Veilleuse
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Entrée
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Etage " ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - square: false
                          type: grid
                          columns: 2
                          cards:
                            - variables:
                                entity: light.palier
                              name: Palier
                              icon: mdi:stairs
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Escalier
                            - variables:
                                entity: light.tom
                              name: Tom
                              icon: mdi:bat
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Tom
                            - variables:
                                entity: light.manon_et_leane
                              name: Manon Léane
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Manon Léane
                            - variables:
                                entity: light.nina
                              name: Nina
                              icon: mdi:owl
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Nina
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Extérieur " ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - square: false
                          type: grid
                          columns: 1
                          cards:
                            - variables:
                                entity: light.veranda
                              type: custom:button-card
                              name: Véranda
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Entrée
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: conditional
                      conditions:
                        - condition: or
                          conditions:
                            - condition: state
                              entity: group.noel
                              state: 'on'
                            - condition: state
                              entity: input_boolean.noel
                              state: 'on'
                      card:
                        type: custom:layout-card
                        layout_type: masonry
                        layout:
                          width: 300
                        cards:
                          - type: custom:button-card
                            template:
                              - title_card
                            name: |
                              [[[ return "Noël " ]]]
                          - type: vertical-stack
                            cards:
                              - square: false
                                type: grid
                                columns: 1
                                cards:
                                  - entity: switch.sapin
                                    type: custom:button-card
                                    name: Sapin
                                    icon: mdi:pine-tree
                                    template:
                                      - ball_card
                                      - light_card_state
                                  - entity: switch.guirlande_couloir
                                    type: custom:button-card
                                    name: Couloir
                                    icon: mdi:led-strip-variant
                                    template:
                                      - ball_card
                                      - light_card_state
                                  - entity: switch.guirlande_veranda
                                    type: custom:button-card
                                    name: Véranda
                                    icon: mdi:led-strip-variant
                                    template:
                                      - ball_card
                                      - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Lumières allumées
                  - icon: mdi:lightbulb-on
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-today
                              entity: sensor.lumieres_allumees_duree_aujourd_hui
                              name: Ce jour
                              label: >
                                [[[  return
                                states['sensor.duree_lumieres_allumees'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 14
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 12
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 10
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 6
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-blank
                              entity: sensor.lumieres_allumees_duree_hier
                              name: Hier
                              label: >
                                [[[  return
                                states['sensor.duree_lumieres_allumees_hier'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 14
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 12
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 10
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 6
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-week
                              entity: sensor.lumieres_allumees_duree_7_jours
                              name: 7 jours
                              label: >
                                [[[  return
                                states['sensor.duree_lumieres_allumees_7_jours'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 98
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 84
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 70
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 42
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template:
                        - graph_duration
                      variables:
                        - entity: sensor.lumieres_allumees_duree_aujourd_hui
                        - title: 10 derniers jours
                        - value1: 0
                        - value2: 6
                        - value3: 10
                        - value4: 12
                        - value5: 14
  - theme: Backend-selected
    title: Batteries
    path: batteries
    icon: mdi:battery-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Tel, tablettes, ordis
                      - icon: mdi:cellphone-charging
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              variables:
                                entity: sensor.iphone_aurel_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.iphone_aurel_battery_state'].state
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.aurel_ipad_batterie_apple
                                charge: >-
                                  [[[ return
                                  states['sensor.aurel_ipad_batterie_apple'].attributes.battery_status
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.macbook_aurel_internal_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.macbook_aurel_internal_battery_state'].state
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.iphone_alex_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.iphone_alex_battery_state'].state
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.macbook_alex_internal_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.macbook_alex_internal_battery_state'].state
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              name: iPhone Tom
                              variables:
                                entity: sensor.iphone_tom_batterie_apple
                                charge: >-
                                  [[[ return
                                  states['sensor.iphone_tom_batterie_apple'].attributes.battery_status
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              name: iPhone Manon
                              variables:
                                entity: sensor.iphone_manon_batterie_apple
                                charge: >-
                                  [[[ return
                                  states['sensor.iphone_manon_batterie_apple'].attributes.battery_status
                                  ]]]
                              template:
                                - battery_level_card
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Appareils
                      - icon: mdi:home-battery
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              variables:
                                entity: sensor.lock_2c8e_battery
                              name: Serrure garage
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.aarlo_battery_level_sonnette
                              name: Sonnette
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.moniteur_qualite_air_batterie
                              name: Air
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.cube_aqara_batterie
                              name: Cube
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.vibrations_battery
                              name: Vibrations
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.fuites_d_eau_battery
                              name: Fuites eau
                              template:
                                - battery_level_card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     border-radius: var(--ha-card-border-radius) !important;
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Ouvertures
                      - icon: mdi:home-battery
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_entree_batterie
                              name: Entrée
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_salle_a_manger_batterie
                              name: S. à M
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_cagibi_batterie
                              name: Cagibi
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_garage_batterie
                              name: Garage
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_cuisine_batterie
                              name: Cuisine
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_chambre_parents_batterie
                              name: Parents
                              template:
                                - battery_level_card
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     border-radius: var(--ha-card-border-radius) !important;
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Thermomètres
                      - icon: mdi:thermometer-lines
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              variables:
                                entity: sensor.sejour_thermo_batterie
                              name: Séjour
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.couloir_thermo_batterie
                              name: Couloir
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.cuisine_thermo_batterie
                              name: Cuisine
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.parents_thermo_batterie
                              name: Parents
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.sonde_garage_batterie
                              name: Garage
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.temp_sdb_battery_level
                              name: S. de bain
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.tom_thermo_batterie
                              name: Tom
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.manon_thermo_batterie
                              name: Manon
                            - type: custom:button-card
                              template:
                                - battery_level_card
                              variables:
                                entity: sensor.nina_thermo_batterie
                              name: Nina
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Détecteurs de mouvements
                  - icon: mdi:run
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.mouv_salon_batterie
                          template:
                            - battery_level_card
                          name: Salon
                        - type: custom:button-card
                          variables:
                            entity: sensor.mouv_salle_a_manger_batterie
                          template:
                            - battery_level_card
                          name: S. à M
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_couloir_batterie
                          name: Couloir
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_garage_batterie
                          name: Garage
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_salle_d_eau_batterie
                          name: Lavabo
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_escalier_batterie
                          name: Escalier
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_palier_batterie
                          name: Palier
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_tom_batterie
                          name: Tom
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_manon_batterie
                          name: Manon
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_leane_batterie
                          name: Léane
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.mouv_nina_batterie
                          name: Nina
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Interrupteurs
                  - icon: mdi:light-switch
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_salon_batterie
                          name: Salon
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_salle_a_manger_batterie
                          name: S. à M
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_entree_batterie
                          name: Entrée
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_couloir_batterie
                          name: Couloir
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_salle_d_eau_batterie
                          name: Lavabo
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chambre_parents_batterie
                          name: Parents
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_palier_batterie
                          name: Palier
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chambre_tom_batterie
                          name: Tom
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chevet_tom_batterie
                          name: Tom chevet
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chambre_nina_batterie
                          name: Nina
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chevet_nina_batterie
                          name: Nina chevet
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_grande_chambre_batterie
                          name: Filles
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chevet_manon_batterie
                          name: Manon chevet
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.inter_chevet_leane_batterie
                          name: Léane chevet
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.shellybutton1_98cdac2d5312_battery
                          name: Shelly
  - theme: Backend-selected
    subview: true
    title: Energie
    path: Energie
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flash
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            show_header_toggle: false
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Electricité
                  - icon: mdi:flash
              - type: custom:button-card
                entity: sensor.linky_mise_a_jour
                template:
                  - title_card
                show_label: false
                show_state: false
                name: |
                  [[[ return " Mise à jour :  "+
                      states['sensor.linky_mise_a_jour'].state ]]] 
                tap_action:
                  action: more-info
                styles:
                  name:
                    - justify-self: null
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:content-card-linky
                      entity: sensor.linky_093xxxxxxxx5420_consumption
                      showHistory: true
                      showHeader: true
                      showPeakOffPeak: false
                      showIcon: false
                      showInTableUnit: true
                      showDayPrice: true
                      showDayPriceHCHP: false
                      showDayMaxPower: false
                      showDayHCHP: false
                      showDayName: short
                      showError: true
                      shoInformation: true
                      showPrice: true
                      showTitle: false
                      showCurrentMonthRatio: true
                      showMonthRatio: true
                      showWeekRatio: true
                      showYesterdayRatio: true
                      showTitleLine: true
                      showEcoWatt: true
                      showEcoWattJ12: true
                      showTempo: false
                      titleName: Linky
                      nbJoursAffichage: '7'
                      showYearRatio: true
                      showTitreLigne: true
                      ewEntity: sensor.rte_ecowatt_j0
                      ewEntityJ1: sensor.rte_ecowatt_j1
                      ewEntityJ2: sensor.rte_ecowatt_j0
                      card_mod:
                        style: |
                          ha-card {
                            color: lightgrey ;
                            font-size: 12px;
                            font-family: Avenir;
                card_mod:
                  style: |
                    ha-card { 
                      background-color: var(--card-background-color);
                      padding: 2px;
                      box-shadow: none;
                      border-raiud: 25px;
                    }   
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                          entity: input_number.prix_electricite
                          show_label: true
                          show_state: false
                          name: Prix du kWh
                          label: >
                            [[[ return
                            states['input_number.prix_electricite'].state + "
                            €"]]]
                        - type: custom:button-card
                          template:
                            - ball_card
                          entity: input_number.prix_abo_electricite
                          show_label: true
                          show_state: false
                          name: Prix de l'abo
                          label: >
                            [[[ return
                            states['input_number.prix_abo_electricite'].state +
                            " €"]]]          
                        - type: custom:button-card
                          entity: sensor.linky_093xxxxxxxx5420_consumption
                          icon: mdi:calendar-today
                          template:
                            - ball_card
                            - electricity_state
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Hier : "+
                            states['sensor.electricite_cout_jour_avec_abo'].state
                              +"€"]]] 
                          label: >
                            [[[ return
                            states['sensor.linky_093xxxxxxxx5420_consumption'].state
                            +" kWh"]]] 
                        - type: custom:button-card
                          entity: sensor.linky_093xxxxxxxx5420_consumption
                          icon: mdi:view-week
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Semaine :
                            "+states['sensor.electricite_cout_semaine_avec_abo'].state
                              +"€"]]]
                          label: >
                            [[[ return
                            states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.current_week
                            +" kWh"]]]              
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - type: custom:button-card
                          entity: sensor.linky_093xxxxxxxx5420_consumption
                          icon: mdi:calendar-month
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Mois :
                            "+states['sensor.electricite_cout_mois_avec_abo'].state
                              +"€"]]]
                          label: >
                            [[[ return
                            states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.current_month
                            +" kWh"]]] 
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - type: custom:button-card
                          entity: sensor.linky_093xxxxxxxx5420_consumption
                          icon: mdi:calendar
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Année :
                            "+states['sensor.electricite_cout_annee_avec_abo'].state
                              +"€"]]] 
                          label: >
                            [[[ return
                            states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.current_year
                            +" kWh"]]] 
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - type: custom:button-card
                          entity: sensor.linky_093xxxxxxxx5420_consumption
                          name: Max hier
                          template:
                            - ball_card
                            - electricity_state
                          show_label: true
                          show_state: false
                          label: >
                            [[[ return
                            (states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.yesterdayConsumptionMaxPower
                            / 1000) + " kVA"; ]]]  
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    var sensor = (states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.yesterdayConsumptionMaxPower/1000);
                                    if (sensor < 2) return 'var(--card-green)';          
                                    if (sensor < 3) return 'var(--card-blue)';
                                    if (sensor < 4) return 'var(--card-yellow)'; 
                                    if (sensor < 6) return 'var(--card-orange)';
                                    if (sensor >= 6) return 'var(--card-red)';          
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    var sensor = (states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.yesterdayConsumptionMaxPower/1000);
                                    if (sensor < 2) return 'var(--img-cell-green)';          
                                    if (sensor < 3) return 'var(--img-cell-blue)';
                                    if (sensor < 4) return 'var(--img-cell-yellow)'; 
                                    if (sensor < 6) return 'var(--img-cell-orange)';
                                    if (sensor >= 6) return 'var(--img-cell-red)'; 
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    var sensor = (states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.yesterdayConsumptionMaxPower/1000);
                                    if (sensor < 2) return 'var(--icon-green)';          
                                    if (sensor < 3) return 'var(--icon-blue)';
                                    if (sensor < 4) return 'var(--icon-yellow)'; 
                                    if (sensor < 6) return 'var(--icon-orange)';
                                    if (sensor >= 6) return 'var(--icon-red)'; 
                                  ]]]  
                        - type: custom:button-card
                          entity: sensor.linky_093xxxxxxxx5420_consumption
                          name: Souscription
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          label: >
                            [[[ return
                            states['sensor.linky_093xxxxxxxx5420_consumption'].attributes.subscribed_power
                            ]]] 
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-green)
                            icon:
                              - color: var(--icon-green)
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 overflow: visible !important;
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevés
                  - icon: mdi:chart-bar
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:apexcharts-card
                      graph_span: 8d
                      span:
                        end: day
                        offset: '-1d'
                      experimental:
                        color_threshold: true
                      apex_config:
                        chart:
                          stacked: true
                          height: 200
                        legend:
                          show: false
                        grid:
                          show: true
                          strokeDashArray: 0
                          position: back
                          borderColor: rgba(200,200,200,0.3)
                        stroke:
                          width: 1
                        xaxis:
                          labels:
                            format: ddd dd
                            hideOverlappingLabels: true
                            showDuplicatges: true
                        dataLabels:
                          offsetY: -5
                          background:
                            enabled: true
                            opacity: 0.5
                        plotOptions:
                          bar:
                            borderRadius: 5
                            dataLabels:
                              position: top
                        yaxis:
                          - id: first
                            decimals: 1
                            min: 0
                            forceNiceScale: true
                            apex_config:
                              tickAmount: 2
                          - id: second
                            decimals: 0
                            max: 15
                            min: 0
                            forceNiceScale: false
                            apex_config:
                              tickAmount: 2
                            opposite: true
                            labels:
                              show: false
                      header:
                        show: true
                        title: 8 jours (avec abonnement)
                        show_states: true
                        standard_format: false
                        colorize_states: true
                      series:
                        - entity: sensor.linky_093xxxxxxxx5420_consumption
                          yaxis_id: first
                          type: column
                          offset: +1d
                          show:
                            name_in_header: false
                            datalabels: true
                            legend_value: false
                            header_color_threshold: true
                          group_by:
                            func: max
                            duration: 1d
                          opacity: 0.6
                          color_threshold:
                            - value: 0
                              color: var(--icon-green)
                            - value: 6
                              color: var(--icon-blue)
                            - value: 9
                              color: var(--icon-yellow)
                            - value: 12
                              color: var(--icon-orange)
                            - value: 15
                              color: var(--icon-red)
                        - entity: sensor.electricite_cout_jour_avec_abo
                          yaxis_id: second
                          type: line
                          offset: +1d
                          color: var(--blue)
                          unit: €
                          stroke_width: 2
                          show:
                            datalabels: true
                            name_in_header: false
                          group_by:
                            func: last
                            duration: 1d
                          opacity: 0.8
                      card_mod:
                        style: |
                          ha-card {
                            font-family: Avenir;
              - type: custom:vertical-stack-in-card
                card_mod:
                  style: |
                    ha-card {
                      overflow: visible !important;
                      border-radius: var(--ha-card-border-radius);
                      padding: 5px;
                      margin: 0 0px 0 -05px;
                    }
                cards:
                  - type: custom:vertical-stack-in-card
                    card_mod:
                      style: |
                        ha-card {
                          box-shadow: none;
                          padding: 5px;
                          margin: 0 0px 0 -05px;
                          font-family: Avenir;
                          font-size: 13px;
                          overflow: visible !important;
                          border-radius: 0;
                        }
                    cards:
                      - type: energy-date-selection
                  - type: custom:vertical-stack-in-card
                    card_mod:
                      style: |
                        ha-card {              
                          box-shadow: none;                  
                          padding: 5px;
                          margin: 0 0px 0 -05px;
                          font-family: Avenir;
                          font-size: 13px;
                          overflow: visible !important;
                          border-radius: 0;
                        }
                    cards:
                      - type: energy-usage-graph
      - type: entities
        entities:
          - type: custom:decluttering-card
            template: header
            variables:
              - name: Durée de fonctionnement
              - icon: mdi:timer
          - type: custom:decluttering-card
            template: graph_duration
            variables:
              - entity: sensor.lumieres_allumees_duree_aujourd_hui
              - title: Lumières
              - value1: 0
              - value2: 6
              - value3: 10
              - value4: 12
              - value5: 14
          - type: custom:decluttering-card
            template: graph_duration
            variables:
              - entity: sensor.lave_linge_duree_aujourd_hui
              - title: Lave-linge
              - value1: 0
              - value2: 2
              - value3: 3
              - value4: 4
              - value5: 5
          - type: custom:decluttering-card
            template: graph_duration
            variables:
              - entity: sensor.duree_radiateur_allume
              - title: Radiateur
              - value1: 0
              - value2: 10
              - value3: 20
              - value4: 30
              - value5: 45
        show_header_toggle: false
        card_mod:
          style: |
            ha-card { 
             background-color: var(--card-background-color);
            }
  - theme: Backend-selected
    title: Alarmes
    path: Alarmes
    icon: mdi:shield-lock-open-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Sécurité
                  - icon: mdi:shield-home
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Alarmes" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: alarm_control_panel.alarme
                          name: Alarme
                          icon: |
                            [[[
                              if (states['alarm_control_panel.alarme'].state == "disarmed" )
                                return "mdi:shield-off";
                              if (states['alarm_control_panel.alarme'].state == "armed_away" )
                                return "mdi:shield-lock";
                              if (states['alarm_control_panel.alarme'].state == "armed_home" )
                                return "mdi:shield-home";
                              if (states['alarm_control_panel.alarme'].state == "armed_night" )
                                return "mdi:shield-moon";
                              if (states['alarm_control_panel.alarme'].state== "arming" )
                                return "mdi:shield-half-full";
                              if (states['alarm_control_panel.alarme'].state == "triggered" )
                                return "mdi:shield-alert";
                              return "mdi:shield-off";
                            ]]]
                          template:
                            - ball_card
                            - custom_state
                            - security_card_state
                          tap_action:
                            action: more-info
                          double_tap_action:
                            action: navigate
                            navigation_path: /lovelace/Alarmes
                        - type: custom:button-card
                          entity: alarm_control_panel.aarlo_sonnette
                          template:
                            - ball_card
                            - custom_state
                            - security_card_state
                          name: |
                            [[[ return "Sonnette"]]]
                          icon: phu:arlo-video-doorbell
                          tap_action:
                            action: more-info
                          double_tap_action:
                            action: navigate
                            navigation_path: /lovelace/Alarmes
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.aarlo_battery_level_sonnette'].state
                              ) ]]]
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Personnes" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          entity: person.herve
                          name: Aurel
                          label: |
                            [[[return states["sensor.aurel_gps_simple"].state]]]
                          template:
                            - base
                            - person_state
                          show_entity_picture: true
                          show_label: true
                          show_state: false
                          styles:
                            label:
                              - white-space: null
                            entity_picture:
                              - width: 100%
                              - border-radius: 100%
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Personnes
                        - type: custom:button-card
                          entity: person.alex
                          name: Alex
                          label: |
                            [[[return states["sensor.alex_gps_simple"].state]]]
                          template:
                            - base
                            - person_state
                          show_entity_picture: true
                          show_label: true
                          show_state: false
                          styles:
                            entity_picture:
                              - width: 100%
                              - border-radius: 100%
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Personnes
                        - type: custom:button-card
                          entity: person.tom
                          name: Tom
                          label: |
                            [[[return states["sensor.tom_gps"].state]]]
                          template:
                            - ball_card
                            - person_state
                          show_entity_picture: true
                          show_label: true
                          show_state: false
                          styles:
                            entity_picture:
                              - width: 100%
                              - border-radius: 100%
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Personnes
                        - type: custom:button-card
                          entity: person.manon
                          name: Manon
                          label: |
                            [[[return states["sensor.manon_gps"].state]]]
                          template:
                            - ball_card
                            - person_state
                          show_entity_picture: true
                          show_label: true
                          show_state: false
                          styles:
                            entity_picture:
                              - width: 100%
                              - border-radius: 100%
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Personnes
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.portes
                          name: Ouvertures
                          template:
                            - ball_card
                            - security_card_state
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_portes'].state)
                              ]]]              
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                        - type: custom:button-card
                          entity: binary_sensor.mouvements
                          name: Mouvement
                          template:
                            - ball_card
                            - custom_state
                            - security_card_state
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_mouvement'].state)
                              ]]]               
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                        - type: custom:button-card
                          entity: lock.garage
                          name: |
                            [[[ return "Garage"]]]
                          template:
                            - ball_card
                            - security_card_state
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                        - type: custom:button-card
                          entity: siren.sirene_heiman
                          name: Salon
                          template:
                            - ball_card
                            - security_card_state
                        - type: custom:button-card
                          entity: siren.frient
                          name: Garage
                          template:
                            - ball_card
                            - security_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Direct
                  - icon: mdi:video
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.camera_entree
                          muted: true
                          ui: true
                          background: true
                          shortcuts:
                            - name: Lumière
                              icon: mdi:lightbulb
                              service: light.toggle
                              service_data:
                                entity_id: light.entree
                          card_mod:
                            style: |

                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 24px !important;
                              }
                        - type: picture-glance
                          title: Salon
                          camera_image: camera.camera_sejour
                          camera_view: live
                          aspect_ratio: 60%
                          entities:
                            - entity: binary_sensor.camera_sejour_mouv
                            - entity: >-
                                alarm_control_panel.camera_sejour_security_system
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                                --mdc-icon-size: 20px;
                                font-size: 0px;
                                width: 40%;
                              }
                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 24px !important;
                              }
                        - type: picture-glance
                          title: Garage
                          camera_image: camera.camera_g2hpro
                          camera_view: live
                          aspect_ratio: 60%
                          entities:
                            - entity: binary_sensor.mouv_camera_g2hpro
                            - entity: alarm_control_panel.camera_g2hpro
                          card_mod:
                            style: |
                              ha-card > div.box {
                                font-family: Avenir;
                                background: none;
                                --mdc-icon-size: 20px;
                                font-size: 0px;
                                width: 40%;
                              }
                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 24px !important;
                              }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Enregistrements
                  - icon: mdi:filmstrip
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Présences sans alarme" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.entree_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                border-radius: 17px !important;
                              }
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.sejour_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                border-radius: 17px !important;
                              }
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_entree
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_sejour
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.sonnette_detection
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                                left: -10px;
                              }
                              ha-card { 
                                border-radius: 17px !important; 
                                --mdc-icon-size: 15px;
                                --icon-primary-color: var(--icon-off);
                              } 
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.garage_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                border-radius: 17px !important;
                              }
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_sonnette
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_garage
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Présences avec alarme" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.entreealarme_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                border-radius: 17px !important;
                              } 
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.sejouralarme_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                border-radius: 17px !important;
                              } 
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_entree_alarme
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_sejour_alarme
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.sonnettealarme_detection
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                                left: -10px;
                              }
                              ha-card { 
                                border-radius: 17px !important; 
                                --mdc-icon-size: 15px;
                                --icon-primary-color: var(--icon-off);
                              } 
                        - camera_view: auto
                          type: picture-glance
                          aspect_ratio: 60%
                          entities: []
                          camera_image: camera.garagealarme_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                border-radius: 17px !important;
                              }  
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_sonnette_alarme
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_garage
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Dernières vidéos" ]]]    
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 3
                      type: grid
                      cards:
                        - type: picture-glance
                          camera_image: camera.cam_entree
                          title: Entrée
                          camera_view: auto
                          aspect_ratio: 100%
                          entities: []
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                                top: 60px !important;
                                left: -05px !important;
                                font-size: 12px; 
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                              }
                              ha-card { 
                                border-radius: 15px !important;
                                font-family: var(--primary-font-family);
                              } 
                               
                        - type: picture-glance
                          camera_image: camera.cam_entree_ding
                          title: Sonnette
                          camera_view: auto
                          aspect_ratio: 100%
                          entities: []
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                                top: 60px !important;
                                left: -05px !important;
                                font-size: 12px; 
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                              }
                              ha-card { 
                                border-radius: 15px !important;
                                font-family: var(--primary-font-family);
                              }  
                        - type: picture-glance
                          camera_image: camera.cam_entree_mouv
                          title: Mouvement
                          camera_view: auto
                          aspect_ratio: 100%
                          entities: []
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                                top: 60px !important;
                                left: -05px !important;
                                font-size: 12px; 
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                              }
                              ha-card { 
                                border-radius: 15px !important;
                                font-family: var(--primary-font-family);
                              } 
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Sonnette
                  - icon: mdi:doorbell-video
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      entity: camera.aarlo_sonnette
                      title: Sonnette
                      hide:
                        - date
                      global: small
                      image_click: play
                      image_view: arlo-stream
                      show:
                        - motion
                        - sound
                        - image_date
                        - signal_strength
                        - captured_today
                        - image_date
                        - on_off
                        - snapshot
                        - battery_level
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: sensor.aarlo_battery_level_sonnette
                      name: Batterie
                      template:
                        - battery_level_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: sensor.aarlo_signal_strength_sonnette
                          name: Signal
                          state:
                            - value: 3
                              operator: <
                              icon: mdi:signal-cellular-outline
                              styles:
                                img_cell:
                                  - background-color: var(--img-cell-red)
                                icon:
                                  - color: var(--icon-red)
                        - type: custom:button-card
                          template:
                            - ball_card
                            - custom_state
                            - security_card_state
                          entity: binary_sensor.aarlo_motion_sonnette
                          name: Mouvement
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: sensor.aarlo_last_sonnette
                          name: Dernier
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: binary_sensor.aarlo_ding_sonnette
                          name: Ding !
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: switch.aarlo_snapshot_sonnette
                          name: Capture
                        - type: custom:button-card
                          template:
                            - ball_card
                          entity: sensor.aarlo_captured_today_sonnette
                          name: Aujourd'hui
                          state:
                            - value: 0
                              operator: '>'
                              styles:
                                icon:
                                  - color: var(--red)
                                img_cell:
                                  - background-color: var(--img-cell-red)
                                card:
                                  - background-color: var(--card-red)
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: camera.aarlo_sonnette
                          name: Caméra
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: switch.aarlo_siren_sonnette
                          name: Sirène
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: binary_sensor.aarlo_connected_sonnette
                          name: Statut
  - theme: Backend-selected
    subview: true
    icon: mdi:sofa
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    title: Sejour
    path: Séjour
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Séjour
                  - icon: mdi:sofa
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_sejour
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.temp_sejour_arrondie'].state +"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.hum_sejour
                          label: |
                            [[[
                              return states['sensor.hum_sejour_arrondie'].state+"%"
                            ]]]
                          template:
                            - badge_card
                            - humidity_state
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.luminosite_fp2
                          template:
                            - badge_card
                            - brightness_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: Zones de présence
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.presence_sejour_fp2
                          template:
                            - mini_card
                            - mini_card_state
                        - type: custom:button-card
                          entity: binary_sensor.presence_bureau_fp2
                          icon: mdi:desk-lamp
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                        - type: custom:button-card
                          entity: binary_sensor.presence_salon_fp2
                          icon: mdi:television
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                        - type: custom:button-card
                          entity: binary_sensor.presence_canape_fp2
                          icon: mdi:sofa
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                        - type: custom:button-card
                          entity: binary_sensor.presence_sam_fp2
                          icon: mdi:silverware
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
              - type: custom:button-card
                template:
                  - title_card
                name: Appareils
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_salon
                          name: Salon
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_salle_a_manger
                          name: S. à manger
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.porte_salle_a_manger
                          name: Salle à manger
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: scene.ambiance_normale
                          label: Normale
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-yellow)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.ambiance_normale
                        - type: custom:button-card
                          entity: scene.repas_devant_tv
                          label: Repas
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-orange)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.repas_devant_tv
                        - type: custom:button-card
                          entity: scene.zen
                          label: Doux
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-purple)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.zen
                        - type: custom:button-card
                          entity: scene.tv
                          label: TV
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-blue)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.tv
                        - type: custom:button-card
                          entity: scene.ambiance_normale
                          label: Anniv
                          icon: mdi:party-popper
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-red)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.anniversaire
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.sejour
                  slider: input_number.luminosite_sejour
              - type: custom:button-card
                variables:
                  entity: light.sejour
                name: Toutes les lampes
                template:
                  - ball_light_card
                  - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_de_bureau
                          name: Bureau
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.bandeau_led
                          name: Meuble TV
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_canape
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_tv_salon
                          name: Lampe TV
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lustre_salon
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lustre_salle_a_manger
                          name: Lustre SàM
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.buffet
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampadaire
                          template:
                            - ball_light_card
                            - light_card_state
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Télévision
                  - icon: mdi:television-play
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template: no_style
                          styles:
                            card:
                              - width: 70px
                        - type: custom:button-card
                          template:
                            - tv_sejour_card
                        - type: custom:button-card
                          template: no_style
                          styles:
                            card:
                              - width: 70px
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Musique
                  - icon: mdi:speaker-play
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.sejour
                        - gauge: sensor.sejour_progression
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: media_player.le_bureau
                          template:
                            - ball_card
                            - card_state
                            - custom_music_state
                        - type: custom:button-card
                          entity: media_player.le_salon
                          template:
                            - ball_card
                            - card_state
                            - custom_music_state
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce" ]]]
              - type: custom:decluttering-card
                template: announce
                variables:
                  - entity: input_text.annonce_dans_sejour
                  - script: script.annonce_dans_sejour
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Caméra
                  - icon: mdi:cctv
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      camera_view: live
                      type: picture-glance
                      title: []
                      entities: []
                      camera_image: camera.camera_sejour
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_sejour
                        - hum: sensor.hum_sejour
        layout:
          width: 280
  - theme: Backend-selected
    subview: true
    icon: mdi:account
    title: Personnes
    path: Personnes
    layout:
      width: 350
      max_cols: 5
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 290
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                variables:
                  entity: person.herve
                  state: '[[[ return states[''sensor.aurel_gps''].state ]]]'
                  battery_level: sensor.iphone_aurel_battery_level
                  battery_state: sensor.iphone_aurel_battery_state
                  phone_tracker: device_tracker.iphone_aurel
                  phone_connection: sensor.iphone_aurel_connection_type
                  phone_activity: sensor.iphone_aurel_activity
                  phone_focus: binary_sensor.iphone_aurel_focus
                  gps: sensor.aurel_gps
                  time: '[[[ return states[''sensor.aurel_duree''].state ]]]'
                  proximity: '[[[ return states["sensor.proximity_aurel"].state  ]]]'
                  trajet: '[[[ return states[''sensor.aurel_trajet''].state ]]]'
                  trajet_travail: >-
                    [[[ return (states["sensor.aurel_trajet_travail"].state ) 
                    ]]]
                  trajet_domicile: >-
                    [[[ return (states["sensor.aurel_trajet_domicile"].state ) 
                    ]]]
                  destination: >-
                    [[[ if (states['person.herve'].state == "home") { return
                    "travail" } else { return "domicile" } ]]]
                entity: '[[[  return variables.entity ]]]'
                template:
                  - person_complete_card
                custom_fields:
                  sensor:
                    card:
                      cards:
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_connection ]]]'
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_activity ]]]'
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_focus ]]]'
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.aurel_ipad_ping
                          icon: mdi:tablet
                          name: |
                            [[[
                              var name = "iPad";
                              var charge = states['sensor.aurel_ipad_batterie_apple'].attributes.battery_status;
                              if ( charge == "Charging" || charge == "Charged" || charge == "Full"   )
                                return `<span> ${name} </span><ha-icon
                                icon="mdi:flash"
                                style="width: 14px; height: 16px; color: var(--yellow); margin-top: -01px ;vertical-align: top;"> 
                                </ha-icon> `         
                              return name ;
                            ]]] 
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.aurel_ipad_batterie_apple
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--red)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--text-off)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.macbook_aurel
                          icon: mdi:laptop
                          show_state: true
                          show_label: false
                          name: |
                            [[[
                              var name = "Mac";
                              var charge = states['sensor.macbook_aurel_internal_battery_state'].state;
                              if ( charge == "Charging" || charge == "Charged" || charge == "Full"   )
                                return `<span> ${(name)} </span><ha-icon
                                icon="mdi:flash"
                                style="width: 14px; height: 16px; color: var(--yellow); margin-top: -01px ;vertical-align: top;"> 
                                </ha-icon>`         
                              return name;
                            ]]] 
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.macbook_aurel_internal_battery_level
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--red)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--text-off)
                                      from: 50
                                      to: 100
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 290
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                variables:
                  entity: person.alex
                  state: '[[[ return states[''sensor.alex_gps''].state ]]]'
                  battery_level: sensor.iphone_alex_battery_level
                  battery_state: sensor.iphone_alex_battery_state
                  phone_tracker: device_tracker.iphone_alex
                  phone_connection: sensor.iphone_alex_connection_type
                  phone_activity: sensor.iphone_alex_activity
                  phone_focus: binary_sensor.iphone_alex_focus
                  gps: sensor.alex_gps
                  time: '[[[ return states[''sensor.alex_duree''].state ]]]'
                  proximity: '[[[ return states["sensor.proximity_alex"].state  ]]]'
                  trajet: '[[[ return states[''sensor.alex_trajet''].state ]]]'
                  destination: >-
                    [[[ if (states['person.alex'].state == "home") { return
                    "travail" } else { return "domicile" } ]]]
                entity: '[[[  return variables.entity ]]]'
                template:
                  - person_complete_card
                custom_fields:
                  sensor:
                    card:
                      cards:
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_connection ]]]'
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_activity ]]]'
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_focus ]]]'
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.liseuse_alex
                          name: Liseuse
                          show_state: true
                          show_label: false
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.macbook_alex
                          icon: mdi:laptop
                          name: |
                            [[[
                              var name = "Mac";
                              var charge = states['sensor.macbook_alex_internal_battery_state'].state;
                              if ( charge == "Charging" || charge == "Charged" || charge == "Full"   )
                                return `<span> ${name} </span><ha-icon
                                icon="mdi:flash"
                                style="width: 14px; height: 16px; color: var(--yellow); margin-top: -01px ;vertical-align: top;"> 
                                </ha-icon> `         
                              return name ;
                            ]]] 
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.macbook_alex_internal_battery_level
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--red)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--text-off)
                                      from: 50
                                      to: 100
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 290
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                variables:
                  entity: person.tom
                  state: '[[[ return states[''sensor.tom_gps''].state ]]]'
                  battery_level: sensor.iphone_tom_batterie_apple
                  battery_state: sensor.tom_iphone_battery_state
                  phone_tracker: device_tracker.iphone_tom_box
                  gps: sensor.tom_gps
                  time: '[[[ return states[''sensor.tom_duree''].state ]]]'
                  proximity: '[[[ return states["sensor.proximity_tom"].state  ]]]'
                  trajet: '[[[ return states[''sensor.tom_trajet_domicile''].state ]]]'
                  destination: domicile
                entity: '[[[  return variables.entity ]]]'
                template:
                  - person_complete_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.macbook_air_de_tom
                          name: MacBook
                          show_state: true
                          show_label: false
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: switch.trottinette
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 290
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                variables:
                  entity: person.manon
                  state: '[[[ return states[''sensor.manon_gps''].state ]]]'
                  battery_level: sensor.iphone_manon_batterie_apple
                  battery_state: sensor.manon_iphone_battery_state
                  phone_tracker: device_tracker.iphone_manon
                  gps: sensor.manon_gps
                  time: '[[[ return states[''sensor.manon_duree''].state ]]]'
                  proximity: '[[[ return states["sensor.proximity_manon"].state  ]]]'
                  trajet: '[[[ return states[''sensor.manon_trajet_domicile''].state ]]]'
                  destination: domicile
                entity: '[[[  return variables.entity ]]]'
                template:
                  - person_complete_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.tablette_manon
                          name: Tablette
                          show_state: true
                          show_label: false
  - theme: Backend-selected
    subview: true
    icon: mdi:door-open
    path: porte_mouv_serrure
    title: Portes mouv serrures
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Ouvertures
                  - icon: mdi:door-open
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ if (states['sensor.compteur_portes'].state < 2)
                    return states['sensor.compteur_portes'].state+" porte"         
                  return states['sensor.compteur_portes'].state+" portes" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.porte_entree
                          name: Entrée
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_garage
                          name: Garage
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_cagibi
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_salle_a_manger
                          name: S. à M
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_cuisine
                          name: Cuisine
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_chambre_parents
                          name: Parents
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Présence
                  - icon: mdi:run
              - type: custom:button-card
                template:
                  - title_card
                name: Zones de présences séjour
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.presence_sejour_fp2
                          template:
                            - mini_card
                            - mini_card_state
                            - no_style
                          show_label: false
                          show_name: true
                        - type: custom:button-card
                          entity: binary_sensor.presence_bureau_fp2
                          icon: mdi:laptop
                          template:
                            - mini_card
                            - mini_card_state
                            - no_style
                          show_label: false
                          show_name: true
                        - type: custom:button-card
                          entity: binary_sensor.presence_salon_fp2
                          icon: mdi:television
                          template:
                            - mini_card
                            - mini_card_state
                            - no_style
                          show_label: false
                          show_name: true
                        - type: custom:button-card
                          entity: binary_sensor.presence_canape_fp2
                          icon: mdi:sofa
                          template:
                            - mini_card
                            - mini_card_state
                            - no_style
                          show_label: false
                          show_name: true
                        - type: custom:button-card
                          entity: binary_sensor.presence_sam_fp2
                          icon: mdi:silverware
                          name: SàM
                          template:
                            - mini_card
                            - mini_card_state
                            - no_style
                          show_label: false
                          show_name: true
              - type: custom:button-card
                template:
                  - title_card
                name: Rez-de-chaussée
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_salon
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_salle_a_manger
                          name: S. à M
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_garage
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_salle_d_eau
                          name: S. d'eau
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_couloir
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_escalier
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template:
                  - title_card
                name: Etage
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_palier
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_tom
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_manon
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_leane
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_nina
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Serrures
                  - icon: mdi:lock
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      entity: lock.garage
                      type: custom:button-card
                      name: null
                      show_label: true
                      show_state: false
                      template:
                        - ball_card
                        - last_changed
                        - security_card_state
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      name: Pile
                      template:
                        - battery_level_card
                      variables:
                        entity: sensor.lock_2c8e_battery
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.lock_2c8e_door_auto_lock_paused
                          name: Auto-lock
                          template:
                            - ball_card
                            - last_changed
                            - card_state
                        - type: custom:button-card
                          entity: >-
                            input_boolean.serrure_garage_verrouillage_automatique
                          name: OFF auto
                          template:
                            - ball_card
                            - card_state
                        - type: custom:button-card
                          entity: binary_sensor.lock_2c8e_door_status
                          name: Porte
                          template:
                            - ball_card
                            - card_state
                        - type: custom:button-card
                          entity: binary_sensor.lock_2c8e_calibration
                          name: Calibration
                          template:
                            - ball_card
                            - card_state
  - theme: Backend-selected
    title: Appareils
    path: Appareils
    subview: true
    icon: mdi:home-search-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Télévisions
                      - icon: mdi:television
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 2
                          square: false
                          cards:
                            - type: custom:button-card
                              template:
                                - tv_sejour_card
                                - card_state
                            - type: custom:button-card
                              template:
                                - tv_parents_card
                                - card_state
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     border-radius: var(--ha-card-border-radius) !important;
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Aspirateurs
                      - icon: mdi:vacuum
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 2
                          square: false
                          cards:
                            - type: custom:button-card
                              template:
                                - walle_card
                            - type: custom:button-card
                              template:
                                - r2d2_card
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     border-radius: var(--ha-card-border-radius) !important;
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Machines
                      - icon: mdi:dishwasher
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 2
                          square: false
                          cards:
                            - type: custom:button-card
                              template:
                                - dishwasher_card
                            - type: custom:button-card
                              template:
                                - washing_machine_card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Autres
                      - icon: mdi:connection
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 2
                          square: false
                          cards:
                            - type: custom:button-card
                              entity: switch.radiateur
                              name: Chauffage SDB
                              template:
                                - ball_card
                                - card_state
                            - type: custom:button-card
                              entity: input_boolean.imprimante
                              template:
                                - ball_card
                                - card_state
                            - type: custom:button-card
                              entity: switch.trottinette
                              template:
                                - ball_card
                                - card_state
                            - type: custom:button-card
                              entity: binary_sensor.fuites_d_eau_water_leak
                              template:
                                - ball_card
                                - card_state
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Anti-moustiques
                      - icon: mdi:spray
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 1
                          square: false
                          cards:
                            - type: custom:button-card
                              entity: group.moustiques
                              name: Toutes les prises
                              icon: mdi:spray
                              template:
                                - ball_card
                                - card_state
                                - last_changed
                              show_state: true
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 2
                          square: false
                          cards:
                            - type: custom:button-card
                              entity: switch.moustique_parents
                              name: Parents
                              template:
                                - ball_card
                                - card_state
                            - type: custom:button-card
                              entity: switch.moustique_tom
                              name: Tom
                              template:
                                - ball_card
                                - card_state
                            - type: custom:button-card
                              entity: switch.moustique_manon
                              name: Manon & Lélé
                              template:
                                - ball_card
                                - card_state
                            - type: custom:button-card
                              entity: switch.moustique_nina
                              name: Nina
                              template:
                                - ball_card
                                - card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Musique
                      - icon: mdi:speaker
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: grid
                          columns: 2
                          square: false
                          cards:
                            - type: custom:button-card
                              entity: media_player.sejour
                              icon: mdi:speaker
                              name: null
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.la_cuisine
                              icon: mdi:speaker
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.le_garage
                              icon: mdi:speaker
                              name: null
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.chambre_des_parents
                              icon: mdi:speaker
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.tom
                              icon: mdi:speaker
                              name: null
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.nina
                              icon: mdi:speaker
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.manon
                              icon: mdi:speaker
                              name: null
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.leane
                              icon: mdi:speaker
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
                            - type: custom:button-card
                              entity: media_player.la_salle_de_bain
                              icon: mdi:speaker
                              name: Salle de bain
                              template:
                                - ball_card
                                - card_state
                                - custom_music_state
  - theme: Backend-selected
    subview: true
    path: Annonces
    title: Annonces
    icon: mdi:speaker-message
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Annonces
                  - icon: mdi:speaker-message
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Général" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - entity: script.a_table
                          name: A table
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                        - entity: script.gouter
                          name: Goûter
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                        - entity: script.1590760144160
                          name: Fin écran
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Coucher" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - entity: script.annonce_au_lit
                          name: Coucher filles
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                        - entity: script.tom_va_se_coucher
                          name: Coucher Tom
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lever" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - entity: script.reveille_manon_annonce_alexa
                          name: Réveiller Manon
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                        - entity: script.reveille_tom_annonce_alexa
                          name: Réveiller Tom
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - last_changed
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Annonces pièces
                  - icon: mdi:speaker-message
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Salle de bain" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_salle_de_bain
                        - script: script.annonce_dans_salle_de_bain
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.la_salle_de_bain
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Séjour" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_sejour
                        - script: script.annonce_dans_sejour
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.sejour
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Cuisine" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_cuisine
                        - script: script.annonce_dans_cuisine
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.la_cuisine
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Annonces chambres
                  - icon: mdi:speaker-message
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre Tom" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_chambre_de_tom
                        - script: script.annonce_dans_chambre_de_tom
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.tom
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre Manon & Lélé" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_chambre_de_manon
                        - script: script.annonce_dans_chambre_de_manon
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.chambre_de_manon_et_leane
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre de Nina" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_chambre_de_nina
                        - script: script.annonce_dans_chambre_de_nina
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.nina
  - theme: Backend-selected
    title: Tom
    path: Tom
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:whistle
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Chambre de Tom
                  - icon: mdi:bat
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_tom
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.temp_tom_arrondie'].state+"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.hum_tom
                          template:
                            - badge_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.hum_tom_arrondie'].state+"*"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.mouv_tom_luminosite
                          template:
                            - badge_card
                            - brightness_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_tom
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: switch.moustique_tom
                          name: Prise
                          icon: mdi:spray
                          template:
                            - ball_card
                            - last_changed
                            - card_state
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: scene.tom_ambiance_normale
                          label: Normale
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-yellow)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.tom_ambiance_normale
                        - type: custom:button-card
                          entity: scene.tom_ambiance_nuit
                          label: Geek
                          icon: mdi:desk
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-green)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.tom_ambiance_nuit
                        - type: custom:button-card
                          entity: scene.tom_ambiance_nuit
                          label: Nuit
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-blue)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.tom_ambiance_nuit
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.tom
                  slider: input_number.luminosite_tom
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.tom
                      name: Toutes les lampes
                      template:
                        - ball_light_card
                        - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.lustre_tom
                          name: Lustre
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.chevet_tom
                          name: Chevet
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_de_bureau_tom
                          name: Lampe bureau
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.sonoff_10013f6d7e
                          name: Bureau
                          template:
                            - ball_light_card
                            - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Multimédias
                  - icon: mdi:multimedia
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.tom
                        - gauge: sensor.tom_progression
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonces  " ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - entity: script.tom_va_se_coucher
                          name: Couché
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          show_state: false
                          show_label: false
                          show_last_changed: true
                          show_name: true
                        - entity: script.reveille_tom_annonce_alexa
                          name: Réveil
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          show_state: false
                          show_label: false
                          show_last_changed: true
                          show_name: true
              - type: custom:decluttering-card
                template: announce
                variables:
                  - entity: input_text.annonce_dans_chambre_de_tom
                  - script: script.annonce_dans_chambre_de_tom
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Réglages
                  - icon: mdi:cog
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      template:
                        - tom_alarm
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - entity: automation.reveil_tom
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: Réveil auto
                          icon: mdi:progress-clock
                        - entity: automation.tom_allumage_auto
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: ON auto
                          icon: mdi:lightbulb-on-outline
                        - entity: automation.tom_chambre_off_auto
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: OFF auto
                          icon: mdi:lightbulb-multiple-off
                        - entity: switch.tom_do_not_disturb_switch
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: Silence
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_tom
                        - hum: sensor.hum_tom
  - theme: Backend-selected
    subview: true
    path: Manon Léane
    title: Manon Léane
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:cat
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Chambre de Manon et Léane
                  - icon: mdi:death-star-variant
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_manon
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.temp_manon_arrondie'].state+"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.hum_manon
                          template:
                            - badge_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.hum_manon_arrondie'].state+"*"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.mouv_manon_luminosite
                          template:
                            - badge_card
                            - - brightness_state
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.mouv_leane_luminosite
                          template:
                            - badge_card
                            - - brightness_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_manon
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_leane
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: switch.moustique_manon
                      name: Prise
                      icon: mdi:spray
                      template:
                        - ball_card
                        - card_state
                        - last_changed
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: scene.grande_chambre_ambiance_normale
                          template:
                            - scene_card
                          label: Normale
                          styles:
                            card:
                              - background-color: var(--scene-yellow)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.grande_chambre_ambiance_normale
                        - type: custom:button-card
                          entity: scene.grande_chambre_ambiance_nuit
                          template:
                            - scene_card
                          label: Nuit
                          styles:
                            card:
                              - background-color: var(--scene-blue)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.grande_chambre_ambiance_nuit
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.manon_et_leane
                  slider: input_number.luminosite_manon_leane
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.manon_et_leane
                      name: Toutes les lampes
                      template:
                        - ball_light_card
                        - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.lustre_manon_et_leane
                          name: Lustre
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.chevet_manon
                          name: Chevet Manon
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.bandeau_manon
                          name: LED Manon
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_de_bureau_manon
                          name: Bureau Manon
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_manon_et_leane
                          name: Lampadaire
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.chevet_leane
                          name: Chevet Léane
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.bandeau_leane
                          name: LED Léane
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.guirlande_leane
                          name: Guirlande
                          template:
                            - ball_light_card
                            - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Multimédias
                  - icon: mdi:multimedia
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.chambre_de_manon_et_leane
                        - gauge: sensor.manon_et_leane_progression
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - custom_music_state
                          icon: mdi:speaker
                          entity: media_player.manon
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                            - custom_music_state
                          icon: mdi:speaker
                          entity: media_player.leane
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:decluttering-card
                template: announce
                variables:
                  - entity: input_text.annonce_dans_chambre_de_manon
                  - script: script.annonce_dans_chambre_de_manon
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Réglages
                  - icon: mdi:cog
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - entity: automation.manon_leane_chambre_off_auto
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: OFF auto
                          icon: mdi:lightbulb-off-outline
                        - entity: automation.manon_leane_chambre_allumage_auto
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: ON auto
                          icon: mdi:lightbulb-on-outline
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: vertical-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - title_card
                              name: |
                                [[[ return "Manon" ]]]
                              styles:
                                name:
                                  - justify-self: null
                            - type: custom:button-card
                              template:
                                - manon_alarm
                            - entity: automation.reveil_manon
                              type: custom:button-card
                              template:
                                - ball_card
                                - card_state
                              name: Réveil auto
                              icon: mdi:progress-clock
                            - entity: switch.manon_do_not_disturb_switch
                              type: custom:button-card
                              template:
                                - ball_card
                                - card_state
                              name: Silence
                        - type: vertical-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - title_card
                              name: |
                                [[[ return "Léane" ]]]
                              styles:
                                name:
                                  - justify-self: null
                            - type: custom:button-card
                              template:
                                - leane_alarm
                            - entity: automation.reveil_leane
                              type: custom:button-card
                              template:
                                - ball_card
                                - card_state
                              name: Réveil auto
                              icon: mdi:progress-clock
                            - entity: switch.leane_do_not_disturb_switch
                              type: custom:button-card
                              template:
                                - ball_card
                                - card_state
                              name: Silence
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_manon
                        - hum: sensor.hum_manon
  - theme: Backend-selected
    path: Nina
    subview: true
    title: Nina
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:owl
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);

                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Chambre de Nina
                  - icon: mdi:face-woman-outline
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_nina
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.temp_nina_arrondie'].state+"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.hum_nina
                          template:
                            - badge_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.hum_nina_arrondie'].state+"*"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.mouv_nina_luminosite
                          template:
                            - badge_card
                            - - brightness_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_nina
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: switch.moustique_nina
                          name: Prise
                          icon: mdi:spray
                          template:
                            - ball_card
                            - last_changed
                            - card_state
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: scene.nina_ambiance_normale
                          label: Normal
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-yellow)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.nina_ambiance_normale
                        - type: custom:button-card
                          entity: scene.nina_ambiance_douce
                          label: Travail
                          icon: mdi:desk
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-green)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.nina_ambiance_douce
                        - type: custom:button-card
                          entity: scene.nina_ambiance_douce
                          label: Lecture
                          icon: mdi:book-open
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-purple)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.nina_ambiance_douce
                        - type: custom:button-card
                          entity: scene.nina_ambiance_nuit
                          label: Nuit
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-blue)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.nina_ambiance_nuit
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.nina
                  slider: input_number.luminosite_nina
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.nina
                      name: Toutes les lampes
                      template:
                        - ball_light_card
                        - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.lustre_nina
                          name: Lustre
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.chevet_nina
                          name: Chevet
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.guirlande_nina
                          name: guirlande
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampadaire_nina
                          name: Lamapadaire
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.bandeau_nina
                          name: Bandeau
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.lampe_de_bureau_nina
                          name: Bureau
                          template:
                            - ball_light_card
                            - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Multimédias
                  - icon: mdi:multimedia
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.nina
                        - gauge: sensor.nina_progression
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:decluttering-card
                template: announce
                variables:
                  - entity: input_text.annonce_dans_chambre_de_nina
                  - script: script.annonce_dans_chambre_de_nina
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Réglages
                  - icon: mdi:cog
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      template:
                        - nina_alarm
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - entity: automation.reveil_nina
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: Réveil auto
                          icon: mdi:progress-clock
                        - entity: automation.nina_chambre_allumage_auto
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: ON auto
                          icon: mdi:lightbulb-on-outline
                        - entity: automation.nina_chambre_off_auto
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: OFF auto
                          icon: mdi:lightbulb-group-off
                        - entity: switch.nina_do_not_disturb_switch
                          type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          name: Silence
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 box-shadow: none;
                 border-radius: var(--ha-card-border-radius) !important;
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_nina
                        - hum: sensor.hum_nina
  - theme: Backend-selected
    title: Escalier
    path: Escalier
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:stairs
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);

                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Escalier et palier
                  - icon: mdi:stairs
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.mouv_palier_lum
                          template:
                            - badge_card
                            - - brightness_state
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Capteurs" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.mouv_escalier
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_palier
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]       
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.escaliers
                      name: Toutes les lampes
                      template:
                        - ball_light_card
                        - light_card_state
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.escaliers
                  slider: input_number.luminosite_escaliers
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.escalier
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.palier
                          template:
                            - ball_light_card
                            - light_card_state
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Réglages
                  - icon: mdi:cog
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      template:
                        - ball_card
                        - card_state
                      entity: automation.escalier_palier_on
                      name: Allumage auto
                      icon: mdi:lightbulb-on-outline
  - theme: Backend-selected
    subview: true
    title: SDB
    path: SDB
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:shower-head
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Salle de bain
                  - icon: mdi:shower
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_salle_de_bain
                          name: Température
                          template:
                            - badge_card
                            - temperature_state
                        - type: custom:button-card
                          entity: sensor.hum_salle_de_bain
                          name: Humidité
                          template:
                            - badge_card
                            - humidity_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      entity: switch.radiateur
                      name: Chauffage
                      type: custom:button-card
                      template:
                        - ball_card
                        - card_state
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Multimédias
                  - icon: mdi:multimedia
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.la_salle_de_bain
                        - gauge: sensor.salle_de_bain_progression
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_salle_de_bain
                        - script: script.annonce_dans_salle_de_bain
      - type: entities
        card_mod:
          style: |
            ha-card { 
             background-color: var(--card-background-color);
             }
        entities:
          - type: custom:decluttering-card
            template: header
            variables:
              - name: Bruits de l'eau
              - icon: mdi:water-alert
          - type: custom:vertical-stack-in-card
            card_mod:
              style: |
                ha-card { 
                  background-color: var(--card-background-color);
                  box-shadow: none;
                  border-radius: 28px !important;
                  overflow: visible !important;
                }   
            cards:
              - type: custom:vertical-stack-in-card
                card_mod:
                  style: |
                    ha-card { 
                      margin: 1px;
                      border-radius: 28px !important;
                      overflow: visible !important;
                    }
                cards:
                  - type: custom:button-card
                    template:
                      - ball_card
                      - card_state
                    show_last_changed: true
                    show_state: false
                    entity: input_boolean.bruits_deau_sdb
                    name: Détections
                    card_mod:
                      style: |
                        ha-card { 
                          border-radius: 28px !important;
                          overflow: visible !important;
                        }
                  - type: history-graph
                    entities:
                      - entity: input_boolean.bruits_deau_sdb
                        name: []
                    hours_to_show: 12
                    refresh_interval: 0
                    card_mod:
                      style: |
                        ha-card { 
                          border-radius: 28px !important;
                          overflow: visible !important;
                        }
          - type: custom:button-card
            template:
              - title_card
            name: |
              [[[ return "Durée des détections" ]]]
          - type: custom:button-card
            template:
              - around_card
              - around_clear_card
            custom_fields:
              info:
                card:
                  type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - mini_card
                      show_label: true
                      show_state: false
                      show_name: true
                      icon: mdi:calendar-today
                      entity: sensor.bruits_de_l_eau_duree_aujourd_hui
                      name: Ce jour
                      label: >
                        [[[  return states['sensor.duree_bruits_de_l_eau'].state
                        ]]]
                      styles:
                        name:
                          - margin: 5px 0px -4px 0px
                        icon:
                          - color: var(--icon-off)
                        img_cell:
                          - background-color: var(--img-cell-off)
                      state:
                        - value: 1
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-red)
                            icon:
                              - color: var(--icon-red)
                        - value: 0.75
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-orange)
                            icon:
                              - color: var(--icon-orange)
                        - value: 0.5
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-yellow)
                            icon:
                              - color: var(--icon-yellow)
                        - value: 0.25
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - value: 0
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-green)
                            icon:
                              - color: var(--icon-green)
                    - type: custom:button-card
                      template:
                        - mini_card
                      show_label: true
                      show_state: false
                      show_name: true
                      icon: mdi:calendar-blank
                      entity: sensor.bruits_de_l_eau_duree_hier
                      name: Hier
                      label: >
                        [[[  return
                        states['sensor.duree_bruits_de_l_eau_hier'].state ]]]
                      styles:
                        name:
                          - margin: 5px 0px -4px 0px
                        icon:
                          - color: var(--icon-off)
                        img_cell:
                          - background-color: var(--img-cell-off)
                      state:
                        - value: 1
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-red)
                            icon:
                              - color: var(--icon-red)
                        - value: 0.75
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-orange)
                            icon:
                              - color: var(--icon-orange)
                        - value: 0.5
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-yellow)
                            icon:
                              - color: var(--icon-yellow)
                        - value: 0.25
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - value: 0
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-green)
                            icon:
                              - color: var(--icon-green)
                    - type: custom:button-card
                      template:
                        - mini_card
                      show_label: true
                      show_state: false
                      show_name: true
                      icon: mdi:calendar-week
                      entity: sensor.bruits_de_l_eau_duree_7_jours
                      name: 7 jours
                      label: >
                        [[[  return
                        states['sensor.duree_bruits_de_l_eau_7_jours'].state ]]]
                      styles:
                        name:
                          - margin: 5px 0px -4px 0px
                        icon:
                          - color: var(--icon-off)
                        img_cell:
                          - background-color: var(--img-cell-off)
                      state:
                        - value: 7
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-red)
                            icon:
                              - color: var(--icon-red)
                        - value: 5.25
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-orange)
                            icon:
                              - color: var(--icon-orange)
                        - value: 3.5
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-yellow)
                            icon:
                              - color: var(--icon-yellow)
                        - value: 1.75
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - value: 0
                          operator: '>'
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-green)
                            icon:
                              - color: var(--icon-green)
          - type: custom:decluttering-card
            template: graph_duration
            variables:
              - entity: sensor.bruits_de_l_eau_duree_aujourd_hui
              - title: Bruits de l'eau
              - value1: 0
              - value2: 0.25
              - value3: 0.5
              - value4: 0.75
              - value5: 1
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevés
                  - icon: mdi:chart-line
              - type: custom:vertical-stack-in-card
                card_mod:
                  style: |
                    ha-card { 
                      background-color: var(--card-background-color);
                    }
                cards:
                  - type: custom:decluttering-card
                    template: graph
                    variables:
                      - temp: sensor.temp_salle_de_bain
                      - hum: sensor.hum_salle_de_bain
              - type: custom:decluttering-card
                template: graph_duration
                variables:
                  - entity: sensor.duree_radiateur_allume
                  - title: Radiateur
                  - value1: 0
                  - value2: 10
                  - value3: 20
                  - value4: 30
                  - value5: 45
  - theme: Backend-selected
    title: Entrée
    subview: true
    path: Entrée
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:spotlight-beam
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Entrée
                  - icon: mdi:home-outline
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_couloir_arrondie
                          name: Temp
                          template:
                            - badge_card
                            - temperature_state
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.hum_couloir_arrondie
                          name: Hum
                          template:
                            - badge_card
                            - humidity_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.porte_entree
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_couloir
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]              
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.entree_et_couloir
                          name: Toutes les lampes
                          template:
                            - ball_light_card
                            - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.veranda
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.entree
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.couloir
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.aqara_hub_54e1
                          template:
                            - ball_light_card
                            - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Caméras
                  - icon: mdi:cctv
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.camera_entree
                          muted: true
                          ui: true
                          background: true
                          shortcuts:
                            - name: Lumière
                              icon: mdi:lightbulb
                              service: light.toggle
                              service_data:
                                entity_id: light.entree
                          card_mod:
                            style: |

                              ha-card { 
                                margin: 5px 0px 15px 0px;
                                border-radius: 25px !important;
                              }
                        - entity: camera.aarlo_sonnette
                          card_mod:
                            style: |

                              ha-card { 
                                border-radius: 25px !important;
                              }  
                          title: Sonnette
                          hide:
                            - date
                          global: small
                          image_click: play
                          image_view: arlo-stream
                          show:
                            - motion
                            - sound
                            - image_date
                            - signal_strength
                            - captured_today
                            - image_date
                            - on_off
                            - snapshot
                            - battery_level
                          top_date: true
                          top_status: false
                          top_title: false
                          type: custom:aarlo-glance
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_couloir_rdc
                        - hum: sensor.hum_couloir_rdc
  - theme: Backend-selected
    title: Lavabo
    subview: true
    path: Lavabo
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:faucet
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Salle d'eau
                  - icon: mdi:hand-water
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Capteurs" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: binary_sensor.mouv_salle_d_eau
                      name: null
                      template:
                        - ball_card
                        - security_card_state
                        - last_changed
                        - custom_icon
                      show_label: true
                      show_state: false
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.lavabo
                      name: Toutes les lampes
                      template:
                        - ball_light_card
                        - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.wc_gauche
                          name: Gauche
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.wc_droit
                          name: Droit
                          template:
                            - ball_light_card
                            - light_card_state
  - theme: Backend-selected
    title: Parents
    path: Parents
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:bed-king
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Chambre parentale
                  - icon: mdi:bed-double
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_parents
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.temp_parents_arrondie'].state+"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.hum_parents
                          template:
                            - badge_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.hum_parents_arrondie'].state+"%"
                            ]]]
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils " ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: binary_sensor.porte_chambre_parents
                      name: null
                      template:
                        - ball_card
                        - security_card_state
                        - last_changed
                        - custom_icon
                      show_label: true
                      show_state: false
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: switch.tele_des_parents
                          name: TV Parents
                          icon: mdi:television-box
                          template:
                            - ball_card
                            - card_state
                        - type: custom:button-card
                          entity: switch.moustique_parents
                          name: Anti-moustiques
                          icon: mdi:spray
                          template:
                            - ball_card
                            - card_state
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]       
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: scene.chambre_parents_ambiance_normale
                          template:
                            - scene_card
                          label: Normale
                          styles:
                            card:
                              - background-color: var(--scene-yellow)
                          tap_action:
                            action: call-service
                            service: scene.turn_on
                            service_data:
                              entity_id: scene.chambre_parents_ambiance_normale
                        - type: custom:button-card
                          entity_picture: /local/ambiances/tv.png
                          entity: light.parents
                          label: TV
                          icon: mdi:television-classic
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-red)
                          tap_action:
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.ambiance_cine_chevet_parents
                          double_tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity_picture: /local/ambiances/nuit.png
                          entity: light.parents
                          label: Nuit
                          icon: mdi:creation
                          template:
                            - scene_card
                          styles:
                            card:
                              - background-color: var(--scene-blue)
                          tap_action:
                            action: call-service
                            service: light.turn_off
                            service_data:
                              entity_id: light.parents
                          double_tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.parents
                  slider: input_number.luminosite_parents
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.parents
                      name: Toutes les lampes
                      template:
                        - ball_light_card
                        - light_card_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: light.lustre_parents
                          name: Lustre
                          template:
                            - ball_light_card
                            - light_card_state
                        - type: custom:button-card
                          variables:
                            entity: light.chevet
                          template:
                            - ball_light_card
                            - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Télévision
                  - icon: mdi:television-play
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template: no_style
                          styles:
                            card:
                              - width: 70px
                        - type: custom:button-card
                          template:
                            - tv_parents_card
                        - type: custom:button-card
                          template: no_style
                          styles:
                            card:
                              - width: 70px
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Musique
                  - icon: mdi:speaker-play
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.chambre_des_parents
                        - gauge: sensor.parents_progression
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          entity: media_player.papa
                          template:
                            - ball_card
                            - card_state
                            - custom_music_state
                        - type: custom:button-card
                          entity: media_player.maman
                          template:
                            - ball_card
                            - card_state
                            - custom_music_state
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_parents
                        - hum: sensor.hum_parents
  - theme: Backend-selected
    subview: true
    title: Garage
    path: Garage
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:garage-open-variant
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Garage
                  - icon: mdi:garage
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.sonde_garage_temperature
                          template:
                            - badge_card
                            - temperature_state
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.sonde_garage_humidite
                          template:
                            - badge_card
                            - humidity_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.fuites_d_eau_water_leak
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.mouv_garage
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_cagibi
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_garage
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: lock.garage
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                        - type: custom:button-card
                          entity: input_select.lave_linge
                          name: null
                          template:
                            - ball_card
                            - custom_state
                            - card_state
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]       
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.cagibi
                      template:
                        - ball_light_card
                        - light_card_state
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Poubelles
                  - icon: mdi:trash-can
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: calendar.dechets_menagers
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          show_name: true
                          name: Déchets
                          label: >
                            [[[ return
                            states['sensor.passage_dechets_menagers'].state ]]]
                          styles:
                            card:
                              - background-color: >
                                  [[[ if
                                  (states['sensor.calendrier_dechets_menagers'].state
                                  == 0)
                                        return "var(--card-blue)"
                                      return ""
                                  ]]] 
                            img_cell:
                              - background-color: >
                                  [[[ if
                                  (states['sensor.calendrier_dechets_menagers'].state
                                  == 0)
                                        return "var(--img-cell-blue)"
                                      return "var(--img-cell-off)"
                                  ]]]         
                            icon:
                              - color: >
                                  [[[ if
                                  (states['sensor.calendrier_dechets_menagers'].state
                                  == 0)
                                        return "var(--icon-blue)"
                                      return "var(--icon-off)"
                                  ]]]         
                        - type: custom:button-card
                          entity: calendar.tri_selectif
                          name: Tri
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          show_name: true
                          label: >
                            [[[ return
                            states['sensor.passage_tri_selectif'].state ]]]
                          styles:
                            card:
                              - background-color: >
                                  [[[ if
                                  (states['sensor.calendrier_tri_selectif'].state
                                  == 0)
                                        return "var(--card-blue)"
                                      return ""
                                  ]]] 
                            img_cell:
                              - background-color: >
                                  [[[ if
                                  (states['sensor.calendrier_tri_selectif'].state
                                  == 0)
                                        return "var(--img-cell-blue)"
                                      return "var(--img-cell-off)"
                                  ]]]         
                            icon:
                              - color: >
                                  [[[ if
                                  (states['sensor.calendrier_tri_selectif'].state
                                  == 0)
                                        return "var(--icon-blue)"
                                      return "var(--icon-off)"
                                  ]]]  
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     border-radius: var(--ha-card-border-radius) !important;
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Musique
                      - icon: mdi:speaker
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: custom:decluttering-card
                          template: music
                          variables:
                            - entity: media_player.le_garage
                            - gauge: sensor.garage_progression
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     border-radius: var(--ha-card-border-radius) !important;
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Caméra
                      - icon: mdi:cctv
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          camera_view: live
                          type: picture-glance
                          title: Garage
                          entities:
                            - entity: alarm_control_panel.camera_g2hpro
                            - entity: binary_sensor.mouv_camera_g2hpro
                          camera_image: camera.camera_g2hpro
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.sonde_garage_temperature
                        - hum: sensor.sonde_garage_humidite
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Réglages
                  - icon: mdi:cog
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      entity: automation.cagibi_eclairage_off
                      type: custom:button-card
                      name: Cagibi extinction auto
                      icon: mdi:lightbulb-off
                      template:
                        - ball_card
                        - card_state
  - theme: Backend-selected
    subview: true
    title: Système
    path: systeme
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:raspberry-pi
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Système
                  - icon: mdi:home-assistant
              - type: custom:button-card
                entity: sensor.uptime
                template:
                  - badge_card
                label: |
                  [[[
                    var sensorState = states['sensor.uptime'].state;
                    var date = new Date(sensorState);
                    var day = date.getDate();
                    var month = date.getMonth() + 1;
                    var year = date.getFullYear();
                    var hours = date.getHours();
                    var minutes = date.getMinutes();
                    var now = new Date();
                    var timeDifference = now - date;
                    var daysDiff = Math.floor(timeDifference / (24 * 3600000));
                    var hoursDiff = Math.floor((timeDifference % (24 * 3600000)) / 3600000);
                    var minutesDiff = Math.round((timeDifference % 3600000) / 60000);
                    
                    return "Démarré le " + (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year + ' à ' + (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes + ' (' + daysDiff + 'j ' + hoursDiff + 'h ' + minutesDiff + 'm)';
                  ]]]
                styles:
                  label:
                    - color: var(--text-off)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: sensor.cpu_temperature
                      name: >
                        [[[ return "TEMPERATURE
                        "+states['sensor.cpu_tendance_icon'].state ]]]          
                      template:
                        - no_style
                        - police
                      show_label: false
                      show_icon: false
                      show_state: true
                      styles:
                        name:
                          - font-size: 13px
                          - color: var(--text-off)
                          - justify-self: start
                          - padding-left: 70px
                          - margin-top: 0px
                        state:
                          - font-size: 13px
                          - color: var(--text-off)
                          - justify-self: start
                          - padding-left: 70px
                          - font-weight: 600
                        custom_fields:
                          gauge:
                            - position: absolute
                            - top: 10%
                            - left: 02%
                      custom_fields:
                        gauge:
                          card:
                            type: custom:hatc-gauge-card
                            entity: sensor.cpu_temperature
                            card:
                              height: 40px
                            title:
                              name: false
                            gauge:
                              icon: false
                              state: false
                              font-size: 15px
                              text-color: severity
                              max_value: 100
                              friendly_name: false
                              unit_of_measurement: °
                              severity:
                                - color: var(--text-off)
                                - color: var(--blue)
                                  from: 0
                                  to: 60
                                - color: var(--yellow)
                                  from: 60.1
                                  to: 70
                                - color: var(--red)
                                  from: 70.1
                                  to: 100
                            card_mod:
                              style: |
                                ha-card {  
                                  background-color: none;
                                  background: none;
                                  box-shadow: none;
                                }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.disk_use_percent_config
                          name: >
                            [[[ return "SSD
                            "+states['sensor.ssd_tendance_icon'].state ]]]
                          template:
                            - sensor_level_card
                        - type: custom:button-card
                          variables:
                            entity: sensor.processor_use_percent
                          name: >
                            [[[ return "CPU
                            "+states['sensor.processor_tendance_icon'].state ]]]
                          template:
                            - sensor_level_card
                        - type: custom:button-card
                          variables:
                            entity: sensor.memory_use_percent
                          name: >
                            [[[ return "RAM
                            "+states['sensor.memory_tendance_icon'].state ]]]
                          template:
                            - sensor_level_card
                        - type: custom:button-card
                          variables:
                            entity: sensor.system_monitor_swap_use_percent
                          name: |
                            [[[ return "SWAP " ]]]
                          template:
                            - sensor_level_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(200,200,200,0.5)
                          entity: sensor.memory_use_percent
                      name: Processeur
                      height: 100
                      line_width: 1
                      points_per_hour: 1
                      hours_to_show: 72
                      align_state: right
                      align_icon: right
                      min_bound_range: 2
                      smoothing: true
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
                      card_mod:
                        style: |
                          ha-card {  
                            opacity: 70%;
                            margin-top: -20px;
                            background-color: transparent;
                            box-shadow: none;
                            border-radius: 0px !important;
                          } 
                                   
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Maintenance
                  - icon: mdi:wrench
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.rpi_power_status
                          name: RPI alim
                          template:
                            - ball_card
                            - card_state
                        - type: custom:button-card
                          entity: binary_sensor.wan_status
                          name: LiveBox
                          template:
                            - ball_card
                            - card_state
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: switch.tenda_naova
                          icon: mdi:power-socket-fr
                          label: Pont
                          template:
                            - mini_card
                            - mini_card_state
                        - type: custom:button-card
                          entity: device_tracker.tenda_nova_salon
                          icon: mdi:numeric-1-box-multiple
                          label: Salon
                          template:
                            - mini_card
                            - mini_card_state
                        - type: custom:button-card
                          entity: device_tracker.tenda_nova_parents
                          icon: mdi:numeric-2-box-multiple
                          label: Parents
                          template:
                            - mini_card
                            - mini_card_state
                        - type: custom:button-card
                          entity: device_tracker.tenda_nova_tom
                          icon: mdi:numeric-3-box-multiple
                          label: Tom
                          template:
                            - mini_card
                            - mini_card_state
                        - type: custom:button-card
                          entity: device_tracker.tenda_nova_leane
                          icon: mdi:numeric-4-box-multiple
                          label: Léane
                          template:
                            - mini_card
                            - mini_card_state
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: script.backup_full_ha
                          name: Sauvegarde
                          label: |
                            [[[
                              const lastTriggered = states['script.backup_full_ha'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                            - card_state
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Sauvegarde HA ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.backup_full_ha
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          show_label: true
                          show_state: false
                          icon: mdi:restart
                          entity: script.restart_ha
                          name: Restart HA
                          label: |
                            [[[
                              const lastTriggered = states['script.restart_ha'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redémarrer HA ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.restart_ha
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          show_label: true
                          show_state: false
                          icon: mdi:restart
                          entity: script.redemarrer_le_pont_tenda_nova
                          label: |
                            [[[
                              const lastTriggered = states['script.redemarrer_le_pont_tenda_nova'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          name: Reboot Pont
                          tap_action:
                            confirmation:
                              text: '[[[ return `Reboot le pont Tenda Nova ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.redemarrer_le_pont_tenda_nova
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          show_label: true
                          show_state: false
                          icon: mdi:restart
                          entity: script.rechargement_alexa_media_player
                          name: Reboot Alexa
                          label: |
                            [[[
                              const lastTriggered = states['script.rechargement_alexa_media_player'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          tap_action:
                            confirmation:
                              text: '[[[ return `Reboot Alexa Media Player ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.rechargement_alexa_media_player
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: sensor.systeme_avertissement
                      show_label: true
                      show_name: false
                      show_state: false
                      show_icon: false
                      template:
                        - police
                      label: |
                        [[[
                          if (states['sensor.systeme_avertissement'].state == 'OK')
                            return "Aucun avertissement"
                          return "AVERTISSEMENT <br><br>"+states['sensor.systeme_avertissement'].state
                        ]]]
                      styles:
                        label:
                          - justify-self: start
                          - text-align: left
                        card:
                          - font-size: 13px
                          - padding: 10px
                          - background-color: |
                              [[[
                                if (states['sensor.systeme_avertissement'].state == 'OK')
                                  return ""
                                return "var(--card-red)"
                              ]]]                          
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Mises à jour
                  - icon: mdi:update
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: update.home_assistant_core_update
                          icon: mdi:home-assistant
                          name: Core
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.home_assistant_core_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: update.home_assistant_supervisor_update
                          icon: mdi:home-assistant
                          name: Supervisor
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: >-
                                  sensor.home_assistant_supervisor_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: update.home_assistant_operating_system_update
                          icon: mdi:home-assistant
                          name: HassOS
                        - type: custom:button-card
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          entity: sensor.hacs
                          icon: mdi:package
                          name: Hacs
                          label: |
                            [[[
                              if (states['sensor.hacs'].state > 0)
                                return states['sensor.hacs'].state+" mises à jour"
                              return '0 mise à jour'
                            ]]]
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 0)
                                      return "var(--card-blue)"
                                    return ""
                                  ]]]                 
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 0)
                                      return 'var(--icon-blue)'
                                    return 'var(--icon-off)'
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 0)
                                      return 'var(--img-cell-blue)'
                                    return 'var(--img-cell-off)'
                                  ]]]
                          double_tap_action:
                            confirmation:
                              text: '[[[ return `Redirection vers hacs ?` ]]]'
                            action: navigate
                            navigation_path: /hacs/entry
                      columns: 2
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: conditional
                      conditions:
                        - entity: sensor.hacs
                          state_not: '0'
                      card:
                        type: custom:button-card
                        template:
                          - around_card
                          - around_clear_card
                        custom_fields:
                          info:
                            card:
                              type: markdown
                              content: >
                                {% if states('sensor.hacs') | float == 0  -%}
                                 Aucune mise à jour{%- else  %} 
                                 Mise à jour hacs :<b>
                                 {%
                                for repo in
                                states.sensor.hacs.attributes.repositories -%} •
                                {{ repo.display_name }} ({{
                                repo["available_version"] }}) <br> {% endfor %} 
                                {%- endif -%}
                              card_mod:
                                style: |
                                  ha-card {
                                    font-size: 13px;
                                    color: var(--text-on);
                                    font-family: var(--primary-font-family);
                                    background-color: 
                                      {% if states.sensor.hacs.state | float(0) == 0 %}  
                                        "";
                                      {% else %} 
                                        var(--card-red)
                                      {% endif %}
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Addons principaux
                  - icon: mdi:update
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          entity: update.doods2_update
                          name: Doods2
                          icon: mdi:face-recognition
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.doods2_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.myelectricaldata_update
                          name: MyElectrica
                          icon: mdi:flash
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.myelectricaldata_pourcentage_de_memoire
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.zigbee2mqtt_update
                          name: Z2M
                          icon: mdi:zigbee
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.zigbee2mqtt_pourcentage_de_memoire
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.mosquitto_broker_update
                          name: Mosquitto
                          icon: mdi:message-bulleted
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.mosquitto_broker_pourcentage_de_memoire
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.adguard_home_update
                          name: Adguard
                          icon: mdi:shield-account
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.adguard_home_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.home_assistant_google_drive_backup_update
                          name: G. Drive
                          icon: mdi:google-drive
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: >-
                                  sensor.home_assistant_google_drive_backup_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.samba_share_update
                          name: Samba
                          icon: mdi:share-all
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.samba_share_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.file_editor_update
                          name: File Editor
                          icon: mdi:file-edit
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.file_editor_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.ftp_update
                          name: FTP
                          icon: mdi:server-network
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.ftp_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.ssh_web_terminal_update
                          name: SSH
                          icon: mdi:ssh
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.ssh_web_terminal_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.glances_update
                          name: Glances
                          icon: mdi:chart-bar-stacked
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.glances_pourcentage_de_memoire
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
  - theme: Backend-selected
    subview: true
    title: Plantes
    path: Plantes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flower
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Dracaena
                  - icon: mdi:flower
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_temp_dracaena
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:thermometer"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Température </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 50
                                severity:
                                  - color: rgba(176, 196, 222, 0.3)
                                    from: 0
                                    to: 8.9
                                  - color: rgba(70, 130, 180, 0.3)
                                    from: 9
                                    to: 36
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 36.1
                                    to: 50
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_hum_dracaena
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:water"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Humidité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                severity:
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 0
                                    to: 8.9
                                  - color: rgba(70, 130, 180, 0.3)
                                    from: 9
                                    to: 41
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 41.1
                                    to: 100
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_lum_dracaena
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:brightness-6"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Luminosité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 5000
                                severity:
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 0
                                    to: 1999
                                  - color: rgba(70, 130, 180, 0.3)
                                    from: 2000
                                    to: 5000
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 5001
                                    to: 20000
                          styles:
                            label:
                              - color: |
                                  [[[ 
                                    var state = states['sensor.plante_lum_dracaena'].state  ;
                                    if (state > 2000)   
                                      return "var(--orange)"
                                      if (state > 5000)   
                                      return "var(--red)"
                                      return "var(--text-on)"
                                   ]]]                       
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_fertilite_dracaena
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:lightning-bolt-circle"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Fertilité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 1500
                                severity:
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 0
                                    to: 199
                                  - color: rgba(70, 130, 180, 0.3)
                                    from: 200
                                    to: 1500
                                  - color: rgba(180, 70, 70, 0.3)
                                    from: 1501
                                    to: 3000
                          styles:
                            label:
                              - color: |
                                  [[[ 
                                    var state = states['sensor.plante_fertilite_dracaena'].state ;
                                    if (state > 200)   
                                      return "var(--orange)"
                                      if (state > 1500)   
                                      return "var(--red)"
                                      return "var(--text-on)"
                                   ]]]                       
              - type: custom:decluttering-card
                template: graph_flower
                variables:
                  - entity: sensor.plante_hum_dracaena
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Pied d'éléphant
                  - icon: mdi:flower
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_temp_pied_elephant
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:thermometer"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Température </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 50
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 6.9
                                  - color: var(--img-cell-blue)
                                    from: 7
                                    to: 32
                                  - color: var(--img-cell-red)
                                    from: 32.1
                                    to: 50
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_hum_pied_elephant
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:water"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Humidité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 8.9
                                  - color: var(--img-cell-blue)
                                    from: 9
                                    to: 40
                                  - color: var(--img-cell-red)
                                    from: 41.1
                                    to: 100
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_lum_pied_elephant
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:brightness-6"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Luminosité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 5000
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 299
                                  - color: var(--img-cell-blue)
                                    from: 300
                                    to: 10000
                                  - color: var(--img-cell-red)
                                    from: 10001
                                    to: 20000
                          styles:
                            label:
                              - color: var(--text-on)
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_fertilite_pied_elephant
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:lightning-bolt-circle"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Fertilité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 1000
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 349
                                  - color: var(--img-cell-blue)
                                    from: 350
                                    to: 2000
                                  - color: var(--img-cell-red)
                                    from: 2001
                                    to: 3000
                          styles:
                            label:
                              - color: var(--text-on)
              - type: custom:decluttering-card
                template: graph_flower
                variables:
                  - entity: sensor.plante_hum_pied_elephant
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Citronnier
                  - icon: mdi:flower
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_citro_temp
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:thermometer"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Température </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 50
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 4.9
                                  - color: var(--img-cell-blue)
                                    from: 5
                                    to: 36
                                  - color: var(--img-cell-red)
                                    from: 36.1
                                    to: 50
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_citro_humidite
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:water"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Humidité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 13.9
                                  - color: var(--img-cell-blue)
                                    from: 14
                                    to: 61
                                  - color: var(--img-cell-red)
                                    from: 61.1
                                    to: 100
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_citro_lum
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:brightness-6"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Luminosité </span>
                                <ha-icon`          
                            ]]]
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 7000
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 200
                                  - color: var(--img-cell-blue)
                                    from: 201
                                    to: 7000
                                  - color: var(--img-cell-blue)
                                    from: 7001
                                    to: 20000
                          styles:
                            label:
                              - color: var(--text-on)
                        - type: custom:button-card
                          variables:
                            entity: sensor.plante_citro_fertilite
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:lightning-bolt-circle"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Fertilité </span>
                                <ha-icon`          
                            ]]]
                          styles:
                            label:
                              - color: var(--text-on)
                          template:
                            - sensor_level_card
                          custom_fields:
                            barre:
                              card:
                                max: 1500
                                severity:
                                  - color: var(--img-cell-red)
                                    from: 0
                                    to: 199
                                  - color: var(--img-cell-blue)
                                    from: 200
                                    to: 2000
                                  - color: var(--img-cell-red)
                                    from: 2001
                                    to: 5000
              - type: custom:decluttering-card
                template: graph_flower
                variables:
                  - entity: sensor.plante_citro_humidite
  - theme: Backend-selected
    subview: true
    title: Calendrier
    path: Calendrier
    icon: mdi:weather-partly-cloudy
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Météo
                  - icon: mdi:weather-sunny
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      template:
                        - police
                        - no_style
                      name: |
                        [[[ 
                          return states['sensor.date_jour'].state + " "+states['sensor.date_numero'].state + " " 
                          + states['sensor.date_mois'].state
                        ]]] 
                      styles:
                        card:
                          - padding: 0
                          - margin-bottom: '-10px'
                        name:
                          - font-size: 14px
                          - color: var(--text-on)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.49_weather_alert
                          state_not: Vert
                      card:
                        type: custom:button-card
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Calendrier
                        entity: sensor.49_weather_alert
                        icon: mdi:alert
                        show_icon: true
                        template:
                          - badge_card
                        label: |
                          [[[
                            let alerts = states['sensor.49_weather_alert'].attributes;
                            let alertMessages = [];

                            for (const attribut of ['Vent violent', 'Orages', 'Inondation', 'Pluie-inondation', 'Neige-verglas', 'Canicule', 'Grand-froid', 'Avalanches', 'Vagues-submersion']) {
                              if (alerts[attribut] !== 'Vert' && alerts[attribut] !== undefined) {
                                alertMessages.push(`${attribut}`);
                              }
                            }

                            if (states['sensor.49_weather_alert'].state != 'Vert')
                            return alertMessages.join(' / ');
                          ]]]
                        styles:
                          label:
                            - white-space: normal
                            - color: |
                                [[[
                                  if (states['sensor.49_weather_alert'].state == 'Vert')
                                    return 'lightgrey';
                                  if (states['sensor.49_weather_alert'].state == 'Jaune')
                                    return 'var(--yellow)';  
                                  if (states['sensor.49_weather_alert'].state == 'Orange')
                                    return 'var(--orange)';     
                                  if (states['sensor.49_weather_alert'].state == 'Rouge')
                                    return 'var(--red)';               
                                ]]]  
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.49_weather_alert'].state == 'Vert')
                                    return 'var(--icon-off)';
                                  if (states['sensor.49_weather_alert'].state == 'Jaune')
                                    return 'var(--yellow)';  
                                  if (states['sensor.49_weather_alert'].state == 'Orange')
                                    return 'var(--orange)';     
                                  if (states['sensor.49_weather_alert'].state == 'Rouge')
                                    return 'var(--red)';               
                                ]]]                             
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: weather.ville
                          show_entity_picture: true
                          show_name: false
                          template:
                            - weather_icon
                            - no_style
                          styles:
                            card:
                              - padding: 0
                              - margin-top: '-15px'
                            entity_picture:
                              - width: 40%
                        - type: custom:button-card
                          entity: sensor.weather_temperature
                          name: >
                            [[[ return states['sensor.weather_conditions'].state
                            ]]]          
                          template:
                            - no_style
                            - police
                          show_label: false
                          show_icon: false
                          show_state: true
                          styles:
                            card:
                              - padding: 0
                            name:
                              - font-size: 14px
                              - color: var(--text-off)
                              - justify-self: start
                              - padding-left: 70px
                              - margin-top: 8px
                            state:
                              - font-size: 13px
                              - color: var(--text-on)
                              - justify-self: start
                              - padding-left: 70px
                              - font-weight: 600
                            custom_fields:
                              gauge:
                                - position: absolute
                                - top: 0%
                                - left: 02%
                          custom_fields:
                            gauge:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.weather_temperature
                                card:
                                  height: 40px
                                title:
                                  name: false
                                gauge:
                                  icon: false
                                  state: false
                                  font-size: 15px
                                  text-color: severity
                                  max_value: 30
                                  friendly_name: false
                                  unit_of_measurement: °
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 15
                                    - color: var(--green)
                                      from: 15.1
                                      to: 25
                                    - color: var(--yellow)
                                      from: 25.1
                                      to: 27
                                    - color: var(--red)
                                      from: 27.1
                                      to: 40
                                card_mod:
                                  style: |
                                    ha-card {  
                                      background-color: transparent;
                                      box-shadow: none;
                                    }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          icon: mdi:weather-sunset
                          template:
                            - badge_card
                          label: |
                            [[[
                              const sunriseTime = new Date(states['sun.sun'].attributes.next_rising);
                              const formattedTime = sunriseTime.getHours().toString().padStart(2, '0') + ':' + sunriseTime.getMinutes().toString().padStart(2, '0');
                              return "Lever à "+formattedTime;
                            ]]] 
                        - type: custom:button-card
                          icon: mdi:weather-night
                          template:
                            - badge_card
                          label: |
                            [[[
                              const sunriseTime = new Date(states['sun.sun'].attributes.next_setting);
                              const formattedTime = sunriseTime.getHours().toString().padStart(2, '0') + ':' + sunriseTime.getMinutes().toString().padStart(2, '0');
                              return "Coucher à "+formattedTime;
                            ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_temp_max
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:thermometer-chevron-up"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Max </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return states['sensor.weather_temp_max'].state +
                            " °C" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 40
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 25
                                  - color: var(--img-cell-yellow)
                                    from: 25.1
                                    to: 27
                                  - color: var(--img-cell-red)
                                    from: 27.1
                                    to: 40
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_vent
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-windy"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Vent </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_vent'].state + "
                            km/h" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 30
                                  - color: var(--img-cell-yellow)
                                    from: 30.1
                                    to: 60
                                  - color: var(--img-cell-red)
                                    from: 60.1
                                    to: 100
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_ciel
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-cloudy"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Ciel </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_ciel'].state + "
                            %" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 30
                                  - color: var(--img-cell-yellow)
                                    from: 30.1
                                    to: 60
                                  - color: var(--img-cell-red)
                                    from: 60.1
                                    to: 100
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_pluie
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-pouring"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Pluie </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_pluie'].state + "
                            %" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 30
                                  - color: var(--img-cell-yellow)
                                    from: 30.1
                                    to: 60
                                  - color: var(--img-cell-red)
                                    from: 60.1
                                    to: 100
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_uv
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-sunny-alert"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> UV </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_uv'].state + " "
                            ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 10
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 2
                                  - color: var(--img-cell-yellow)
                                    from: 2.1
                                    to: 5
                                  - color: var(--img-cell-red)
                                    from: 5.1
                                    to: 10
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_neige
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:snowflake"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Neige </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_neige'].state + "
                            %" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 10
                                  - color: var(--img-cell-yellow)
                                    from: 10.1
                                    to: 40
                                  - color: var(--img-cell-red)
                                    from: 40.1
                                    to: 100
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:meteofrance-weather-card
                    entity: weather.ville
                    number_of_forecasts: '0'
                    current: false
                    details: false
                    one_hour_forecast: false
                    alert_forecast: true
                    rainForecastEntity: sensor.ville_next_rain_2
                    alertEntity: sensor.49_weather_alert
                    card_mod:
                      style: |
                        ha-card {
                          font-size: 13px;
                          font-family: var(--primary-font-family);
                          color: var(--text-on);
                        }
                        li.precipitation {
                          display: none;
                        }
                  - type: custom:meteofrance-weather-card
                    entity: weather.ville
                    number_of_forecasts: '5'
                    current: false
                    details: false
                    one_hour_forecast: true
                    alert_forecast: false
                    rainForecastEntity: sensor.ville_next_rain_2
                    alertEntity: sensor.49_weather_alert
                    card_mod:
                      style: |
                        ha-card {
                          font-size: 13px;
                          font-family: var(--primary-font-family);
                          color: var(--text-on);
                        }
                        li.precipitation {
                          display: none;
                        }
                card_mod:
                  style: |
                    ha-card { 
                      margin-top: 20px;
                      
                    }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:clock-weather-card
                      entity: weather.ville
                      title: ''
                      sun_entity: sun.sun
                      weather_icon_type: fill
                      animated_icon: true
                      forecast_days: 7
                      locale: fr
                      time_format: 24
                      date_pattern: d MMMM y
                      hide_today_section: true
                      hide_forecast_section: false
                      card_mod:
                        style: |
                          ha-card {
                            font-size: 13px;
                            font-family: var(--primary-font-family);
                            color: var(--text-on);
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Calendrier personnel
                  - icon: mdi:calendar
          - initial_view: dayGridMonth
            card_mod:
              style: |
                ha-card { 
                 overflow: visible !important;
                 color: var(--text-on);
                 font-family: var(--primary-font-family);
                } 
            type: calendar
            entities:
              - calendar.famille
              - calendar.calendrier
              - calendar.tri_selectif
              - calendar.dechets_menagers
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 overflow: visible !important;
                 } 
            entities:
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - title_card
                          name: VACANCES SCOLAIRES
                          styles:
                            name:
                              - justify-self: null
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Calendrier
                          template:
                            - sensor_activity_card
                          entity: sensor.vacances_scolaires
                          name: Vacances
                          label: >
                            [[[ return 
                            states['sensor.calendrier_vacances_scolaires_detaillees'].state
                            ]]]
                          icon: mdi:beach
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Calendrier
                          template:
                            - sensor_activity_card
                          entity: sensor.vacances_scolaires
                          name: Début
                          label: |
                            [[[   
                              var startDate = states['sensor.vacances_scolaires'].attributes.start_date;
                              
                              return startDate
                                ? new Date(startDate).toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric' })
                                : 'Aucune date disponible';
                            ]]]
                          icon: mdi:calendar-star-outline
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Calendrier
                          template:
                            - sensor_activity_card
                          entity: sensor.vacances_scolaires
                          name: Reprise des cours
                          label: |
                            [[[   
                              var startDate = states['sensor.vacances_scolaires'].attributes.end_date;
                              
                              return startDate
                                ? new Date(startDate).toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric' })
                                : 'Aucune date disponible';
                            ]]]
                          icon: mdi:school-outline
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Calendrier
                          template:
                            - sensor_activity_card
                          entity: sensor.vacances_scolaires
                          name: Durée
                          label: >
                            [[[ return 
                            states['sensor.calendrier_vacances_scolaires_duree_en_jours'].state
                            ]]]
                          icon: mdi:timer-outline
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Calendrier professionnel
                  - icon: mdi:calendar
          - initial_view: listWeek
            card_mod:
              style: |
                ha-card { 
                 overflow: visible !important;
                 color: var(--text-on);
                 font-family: var(--primary-font-family);
                }
            type: calendar
            entities:
              - calendar.alex_pro
  - theme: Backend-selected
    title: Air
    path: air
    type: custom:horizontal-layout
    layout:
      width: 350
    subview: true
    icon: mdi:air-filter
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: conditional
            conditions:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 1023px)'
            card:
              type: custom:layout-card
              layout_type: masonry
              layout:
                width: 340
              cards:
                - type: entities
                  card_mod:
                    style: |
                      ha-card { 
                       background-color: var(--card-background-color);
                       } 
                  entities:
                    - type: custom:decluttering-card
                      template: header
                      variables:
                        - name: Qualité de l'air
                        - icon: mdi:blur
                    - type: custom:button-card
                      template:
                        - around_card
                        - around_clear_card
                      custom_fields:
                        info:
                          card:
                            square: false
                            type: grid
                            columns: 1
                            cards:
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air
                                template:
                                  - ball_card
                                  - air_state
                                name: |
                                  [[[
                                    const trend = states['sensor.air_tendance_icon'].state;
                                    return "Particules "+ trend
                                  ]]]
                                label: |
                                  [[[
                                    return states['sensor.moniteur_qualite_air'].state + "ppb"
                                  ]]]
                                      
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air
                                icon: mdi:blur
                                template:
                                  - ball_card
                                  - air_state
                                show_name: true
                                show_label: true
                                show_state: false
                                show_icon: true
                                show_last_changed: false
                                name: |
                                  [[[
                                    return "Qualité "
                                  ]]]
                                label: |
                                  [[[
                                    const qualiteAirPourcentage = states['sensor.qualite_air_pourcentage'].state;
                                    
                                    if (qualiteAirPourcentage >= 98.8)
                                      return qualiteAirPourcentage + "% " +  " Excellent";
                                    if (qualiteAirPourcentage < 98.8 && qualiteAirPourcentage > 96)
                                      return qualiteAirPourcentage + "% " + " Correct";
                                    if (qualiteAirPourcentage <= 96 && qualiteAirPourcentage > 88)
                                      return qualiteAirPourcentage + "% " + " Moyen, aération recommandée";
                                    if (qualiteAirPourcentage <= 88 && qualiteAirPourcentage > 60)
                                      return qualiteAirPourcentage + "% " +  " Mauvais, Moyen, aération nécessaire ";
                                    if (qualiteAirPourcentage <= 60)
                                      return qualiteAirPourcentage + "% " +  " Danger!";
                                    return '';
                                  ]]] 
                    - type: custom:button-card
                      template:
                        - around_card
                        - around_clear_card
                      custom_fields:
                        info:
                          card:
                            square: false
                            type: grid
                            columns: 2
                            cards:
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air_temperature
                                template:
                                  - ball_card
                                  - temperature_state
                                label: |
                                  [[[
                                    return states['sensor.moniteur_qualite_air_temperature'].state + "°"
                                  ]]]
                                name: Température
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air_humidite
                                template:
                                  - ball_card
                                  - humidity_state
                                label: |
                                  [[[
                                    return states['sensor.moniteur_qualite_air_humidite'].state + "%"
                                  ]]]
                                name: Humidité
                    - type: custom:apexcharts-card
                      header:
                        show: true
                        title: ''
                        show_states: true
                        colorize_states: true
                      experimental:
                        brush: false
                        color_threshold: true
                      graph_span: 10d
                      now:
                        show: false
                        color: red
                        label: Maintenant
                      apex_config:
                        chart:
                          height: 300
                        grid:
                          show: true
                          strokeDashArray: 0
                          position: back
                          borderColor: rgba(200,200,200,0.1)
                        legend:
                          show: false
                          fontSize: 14px
                          height: 40
                        dataLabels:
                          enabled: false
                        xaxis:
                          labels:
                            format: ddd dd
                            hideOverlappingLabels: true
                            showDuplicatges: false
                            show: true
                        fill:
                          type: gradient
                          gradient:
                            type: vertical
                            shadeIntensity: 0.8
                            inverseColors: false
                            opacityFrom: 0.5
                            opacityTo: 0
                            stops:
                              - - 0
                                - 50
                                - 100
                      yaxis:
                        - id: first
                          decimals: 1
                          min: 0
                        - id: second
                          show: false
                      series:
                        - entity: sensor.night_state
                          yaxis_id: second
                          name: ''
                          color: grey
                          type: area
                          curve: stepline
                          stroke_width: 0
                          opacity: 0.1
                          color_threshold:
                            - value: 0
                              color: darkgrey
                            - value: 1
                              color: darkgrey
                          show:
                            in_header: false
                            extremas: false
                            in_brush: false
                            header_color_threshold: false
                            legend_value: false
                            name_in_header: false
                            datalabels: false
                        - entity: sensor.moniteur_qualite_air
                          name: Particules dans l'air
                          unit: ppb
                          color: rgb(38, 75, 150)
                          yaxis_id: first
                          type: area
                          curve: smooth
                          fill_raw: last
                          stroke_width: 1
                          show:
                            extremas: true
                            in_brush: false
                            header_color_threshold: true
                            legend_value: false
                            name_in_header: false
                            datalabels: true
                          float_precision: 1
                          group_by:
                            func: last
                          color_threshold:
                            - value: 0
                              color: rgba(47, 212, 140,1)
                            - value: 65
                              color: rgba(0,191,255,1)
                            - value: 220
                              color: rgba(255,215,0,1)
                            - value: 660
                              color: rgba(249, 167, 62,1)
                            - value: 2200
                              color: rgba(255, 0, 0,1)
                      card_mod:
                        style: |
                          ha-card {
                             font-family: Avenir;
                           }
                    - type: custom:button-card
                      template:
                        - around_card
                      custom_fields:
                        info:
                          card:
                            type: custom:button-card
                            variables:
                              entity: sensor.moniteur_qualite_air_batterie
                            name: Pile
                            template:
                              - battery_level_card
                    - type: custom:button-card
                      entity: sensor.moniteur_qualite_air
                      template:
                        - title_card
                      show_name: false
                      show_label: true
                      show_state: false
                      show_icon: true
                      show_last_changed: true
                      styles:
                        label:
                          - justify-self: null
          - type: conditional
            conditions:
              - condition: screen
                media_query: '(min-width: 1024px)'
            card:
              type: custom:layout-card
              layout_type: masonry
              layout:
                width: 1200
              cards:
                - type: entities
                  card_mod:
                    style: |
                      ha-card { 
                       background-color: var(--card-background-color);
                       } 
                  entities:
                    - type: custom:decluttering-card
                      template: header
                      variables:
                        - name: Qualité de l'air
                        - icon: mdi:blur
                    - type: custom:button-card
                      template:
                        - around_card
                        - around_clear_card
                      custom_fields:
                        info:
                          card:
                            square: false
                            type: grid
                            columns: 1
                            cards:
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air
                                template:
                                  - ball_card
                                  - air_state
                                name: |
                                  [[[
                                    const trend = states['sensor.air_tendance_icon'].state;
                                    return "Particules "+ trend
                                  ]]]
                                label: |
                                  [[[
                                    return states['sensor.moniteur_qualite_air'].state + "ppb"
                                  ]]]
                                      
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air
                                icon: mdi:blur
                                template:
                                  - ball_card
                                  - air_state
                                show_name: true
                                show_label: true
                                show_state: false
                                show_icon: true
                                show_last_changed: false
                                name: |
                                  [[[
                                    return "Qualité "
                                  ]]]
                                label: |
                                  [[[
                                    const qualiteAirPourcentage = states['sensor.qualite_air_pourcentage'].state;
                                    
                                    if (qualiteAirPourcentage >= 98.8)
                                      return qualiteAirPourcentage + "% " +  " Excellent";
                                    if (qualiteAirPourcentage < 98.8 && qualiteAirPourcentage > 96)
                                      return qualiteAirPourcentage + "% " + " Correct";
                                    if (qualiteAirPourcentage <= 96 && qualiteAirPourcentage > 88)
                                      return qualiteAirPourcentage + "% " + " Moyen, aération recommandée";
                                    if (qualiteAirPourcentage <= 88 && qualiteAirPourcentage > 60)
                                      return qualiteAirPourcentage + "% " +  " Mauvais, Moyen, aération nécessaire ";
                                    if (qualiteAirPourcentage <= 60)
                                      return qualiteAirPourcentage + "% " +  " Danger!";
                                    return '';
                                  ]]] 
                    - type: custom:button-card
                      template:
                        - around_card
                        - around_clear_card
                      custom_fields:
                        info:
                          card:
                            square: false
                            type: grid
                            columns: 2
                            cards:
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air_temperature
                                template:
                                  - ball_card
                                  - temperature_state
                                label: |
                                  [[[
                                    return states['sensor.moniteur_qualite_air_temperature'].state + "°"
                                  ]]]
                                name: Température
                              - type: custom:button-card
                                entity: sensor.moniteur_qualite_air_humidite
                                template:
                                  - ball_card
                                  - humidity_state
                                label: |
                                  [[[
                                    return states['sensor.moniteur_qualite_air_humidite'].state + "%"
                                  ]]]
                                name: Humidité
                    - type: custom:apexcharts-card
                      header:
                        show: true
                        title: ''
                        show_states: true
                        colorize_states: true
                      experimental:
                        brush: false
                        color_threshold: true
                      graph_span: 10d
                      now:
                        show: false
                        color: red
                        label: Maintenant
                      apex_config:
                        chart:
                          height: 300
                        grid:
                          show: true
                          strokeDashArray: 0
                          position: back
                          borderColor: rgba(200,200,200,0.1)
                        legend:
                          show: false
                          fontSize: 14px
                          height: 40
                        dataLabels:
                          enabled: false
                        xaxis:
                          labels:
                            format: ddd dd
                            hideOverlappingLabels: true
                            showDuplicatges: false
                            show: true
                        fill:
                          type: gradient
                          gradient:
                            type: vertical
                            shadeIntensity: 0.8
                            inverseColors: false
                            opacityFrom: 0.5
                            opacityTo: 0
                            stops:
                              - - 0
                                - 50
                                - 100
                      yaxis:
                        - id: first
                          decimals: 1
                          min: 0
                        - id: second
                          show: false
                      series:
                        - entity: sensor.night_state
                          yaxis_id: second
                          name: ''
                          color: grey
                          type: area
                          curve: stepline
                          stroke_width: 0
                          opacity: 0.1
                          color_threshold:
                            - value: 0
                              color: darkgrey
                            - value: 1
                              color: darkgrey
                          show:
                            in_header: false
                            extremas: false
                            in_brush: false
                            header_color_threshold: false
                            legend_value: false
                            name_in_header: false
                            datalabels: false
                        - entity: sensor.moniteur_qualite_air
                          name: Particules dans l'air
                          unit: ppb
                          color: rgb(38, 75, 150)
                          yaxis_id: first
                          type: area
                          curve: smooth
                          fill_raw: last
                          stroke_width: 1
                          show:
                            extremas: true
                            in_brush: false
                            header_color_threshold: true
                            legend_value: false
                            name_in_header: false
                            datalabels: true
                          float_precision: 1
                          group_by:
                            func: last
                          color_threshold:
                            - value: 0
                              color: rgba(47, 212, 140,1)
                            - value: 65
                              color: rgba(0,191,255,1)
                            - value: 220
                              color: rgba(255,215,0,1)
                            - value: 660
                              color: rgba(249, 167, 62,1)
                            - value: 2200
                              color: rgba(255, 0, 0,1)
                      card_mod:
                        style: |
                          ha-card {
                             font-family: Avenir;
                           }
                    - type: custom:button-card
                      template:
                        - around_card
                      custom_fields:
                        info:
                          card:
                            type: custom:button-card
                            variables:
                              entity: sensor.moniteur_qualite_air_batterie
                            name: Pile
                            template:
                              - battery_level_card
                    - type: custom:button-card
                      entity: sensor.moniteur_qualite_air
                      template:
                        - title_card
                      show_name: false
                      show_label: true
                      show_state: false
                      show_icon: true
                      show_last_changed: true
                      styles:
                        label:
                          - justify-self: null
  - theme: Backend-selected
    title: reglages
    path: reglages
    icon: mdi:cog
    subview: true
    type: custom:horizontal-layout
    layout:
      width: 350
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Modes
                  - icon: mdi:order-bool-ascending-variant
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.nilemato
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: group.enfants_au_lit
                          name: Enfants au lit
                          icon: mdi:bed-clock
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: schedule.week_end
                          icon: mdi:calendar-check
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.belle_saison
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.vacances
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.noel
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.halloween
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: automation.annonce_ecole
                          name: Annonce École
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Infos carte activité
                  - icon: mdi:card-bulleted
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Sécurité" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_lumiere
                          name: Lumières
                        - type: custom:button-card
                          name: Serrures
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_serrures
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_porte
                          name: Portes
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_mouvement
                          name: Mouvements
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_appareils
                          name: Appareils
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_courrier
                          name: Courrier
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_connecte
                          name: Connectés
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_appareils_charges
                          name: Chargés
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_musique
                          name: Musique
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Infos" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_mode
                          name: Modes
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_maj
                          name: MàJ
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_presence
                          name: Présence
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.show_info
                          name: Savoir
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Thèmes
                  - icon: mdi:theme-light-dark
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 1
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: script.theme_reload
                          name: Recharger les thèmes
                          tap_action:
                            action: toggle
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: script.theme_jour
                          name: Geek Light
                          tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: script.theme_nuit
                          name: Geek Dark
                          tap_action:
                            action: toggle
  - theme: Backend-selected
    title: Invités
    path: invités
    subview: true
    icon: mdi:qrcode-scan
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: WIFI
                  - icon: mdi:qrcode
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: picture
                      image: /local/qr code wifi.PNG
                      tap_action:
                        action: navigate
                        navigation_path: /
                      hold_action:
                        action: none
  - title: Cuisine
    path: cuisine
    icon: mdi:food-fork-drink
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 box-shadow: none;
                 border-radius: var(--ha-card-border-radius) !important;
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Cuisine
                  - icon: mdi:food-fork-drink
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.temp_cuisine_arrondie
                          name: Température
                          template:
                            - badge_card
                            - temperature_state
                        - type: custom:button-card
                          entity: sensor.hum_cuisine_arrondie
                          name: Humidité
                          template:
                            - badge_card
                            - humidity_state
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - entity: binary_sensor.porte_cuisine
                          name: Cuisine
                          type: custom:button-card
                          template:
                            - ball_card
                            - security_card_state
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Multimédias
                  - icon: mdi:multimedia
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.la_cuisine
                        - gauge: sensor.cuisine_progression
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:decluttering-card
                template: announce
                variables:
                  - entity: input_text.annonce_dans_cuisine
                  - script: script.annonce_dans_cuisine
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 box-shadow: none;
                 border-radius: var(--ha-card-border-radius) !important;
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.temp_cuisine
                        - hum: sensor.hum_cuisine
  - theme: Backend-selected
    title: test
    path: test
    icon: mdi:test-tube
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
    badge_cards: []
    cards:
      - type: entities
        card_mod:
          style: |
            ha-card { 
             background-color: var(--card-background-color);
             border-radius: var(--ha-card-border-radius) !important;
             } 
        entities:
          - type: custom:decluttering-card
            template: header
            variables:
              - name: A faire
              - icon: mdi:clipboard-outline
          - type: custom:vertical-stack-in-card
            cards:
              - type: entity
                entity: todo.home_assistant
                state_color: true
              - type: todo-list
                entity: todo.home_assistant
          - type: custom:vertical-stack-in-card
            cards:
              - type: entity
                entity: todo.maison
                state_color: true
              - type: todo-list
                entity: todo.maison
